DEBUG: set  '' ground -> ground
DEBUG: line '# Identification\n'
DEBUG: keep '# Identification\n'
DEBUG: line 'GTK_BINARY_VERSION = 2.10.0\n'
DEBUG: keep 'GTK_BINARY_VERSION = 2.10.0\n'
DEBUG: line '# Compilation flags\n'
DEBUG: keep '# Compilation flags\n'
DEBUG: line 'CC = gcc\n'
DEBUG: keep 'CC = gcc\n'
DEBUG: line 'CFLAGS = -g -O2 -Wall\n'
DEBUG: keep 'CFLAGS = -g -O2 -Wall\n'
DEBUG: line 'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
DEBUG: keep 'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
DEBUG: line 'LDFLAGS =\n'
DEBUG: keep 'LDFLAGS =\n'
DEBUG: line 'LIBS =\n'
DEBUG: keep 'LIBS =\n'
DEBUG: line '# Platform\n'
DEBUG: keep '# Platform\n'
DEBUG: line 'OBJEXT = o\n'
DEBUG: keep 'OBJEXT = o\n'
DEBUG: line '# Cross-build\n'
DEBUG: keep '# Cross-build\n'
DEBUG: line 'srcdir = .\n'
DEBUG: keep 'srcdir = .\n'
DEBUG: line '# # Installation directories\n'
DEBUG: keep '# # Installation directories\n'
DEBUG: line 'libdir = /usr/lib\n'
DEBUG: keep 'libdir = /usr/lib\n'
DEBUG: line '# Installation hooks\n'
DEBUG: keep '# Installation hooks\n'
DEBUG: line 'NORMAL_INSTALL = :\n'
DEBUG: keep 'NORMAL_INSTALL = :\n'
DEBUG: line 'NORMAL_UNINSTALL = :\n'
DEBUG: keep 'NORMAL_UNINSTALL = :\n'
DEBUG: line '# Location\n'
DEBUG: keep '# Location\n'
DEBUG: line 'top_builddir = ../../..\n'
DEBUG: keep 'top_builddir = ../../..\n'
DEBUG: line 'top_srcdir = ../../..\n'
DEBUG: keep 'top_srcdir = ../../..\n'
DEBUG: line 'subdir = modules/printbackends/file\n'
DEBUG: keep 'subdir = modules/printbackends/file\n'
DEBUG: line '# Internals (not configuration variables)\n'
DEBUG: keep '# Internals (not configuration variables)\n'
DEBUG: line 'SHELL = /bin/sh\n'
DEBUG: keep 'SHELL = /bin/sh\n'
DEBUG: line 'DIST_COMMON = $(noinst_HEADERS) \\\n'
DEBUG: set  'DIST_COMMON = $(noinst_HEADERS) \\\n' ground -> multidef
DEBUG: keep 'DIST_COMMON = $(noinst_HEADERS) \\\n'
DEBUG: line '\t$(am__DIST_COMMON)\n'
DEBUG: add  '\t$(am__DIST_COMMON)\n'
DEBUG: set  '\t$(am__DIST_COMMON)\n' multidef -> ground
DEBUG: line 'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
DEBUG: keep 'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
DEBUG: line 'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
DEBUG: keep 'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
DEBUG: line 'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
DEBUG: keep 'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
DEBUG: line 'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
DEBUG: keep 'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
DEBUG: line 'CYGPATH_W = echo\n'
DEBUG: keep 'CYGPATH_W = echo\n'
DEBUG: line 'LIBS =\n'
DEBUG: keep 'LIBS =\n'
DEBUG: line '# conftrol variables end here\n'
DEBUG: keep '# conftrol variables end here\n'
DEBUG: line '-include ../../../config.mk\n'
DEBUG: keep '-include ../../../config.mk\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'CONFIG_CLEAN_VPATH_FILES =\n'
DEBUG: keep 'CONFIG_CLEAN_VPATH_FILES =\n'
DEBUG: line "am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
DEBUG: keep "am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
DEBUG: line 'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
DEBUG: keep 'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
DEBUG: line 'am__DEPENDENCIES_1 =\n'
DEBUG: keep 'am__DEPENDENCIES_1 =\n'
DEBUG: line 'libprintbackend_file_la_DEPENDENCIES =  \\\n'
DEBUG: set  'libprintbackend_file_la_DEPENDENCIES =  \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_DEPENDENCIES =  \\\n'
DEBUG: line '\t$(top_builddir)/gtk/$(gtktargetlib) \\\n'
DEBUG: add  '\t$(top_builddir)/gtk/$(gtktargetlib) \\\n'
DEBUG: line '\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
DEBUG: add  '\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
DEBUG: set  '\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n' multidef -> ground
DEBUG: line 'am_libprintbackend_file_la_OBJECTS =  \\\n'
DEBUG: set  'am_libprintbackend_file_la_OBJECTS =  \\\n' ground -> multidef
DEBUG: keep 'am_libprintbackend_file_la_OBJECTS =  \\\n'
DEBUG: line '\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
DEBUG: add  '\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
DEBUG: set  '\tlibprintbackend_file_la-gtkprintbackendfile.lo\n' multidef -> ground
DEBUG: line 'libprintbackend_file_la_OBJECTS =  \\\n'
DEBUG: set  'libprintbackend_file_la_OBJECTS =  \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_OBJECTS =  \\\n'
DEBUG: line '\t$(am_libprintbackend_file_la_OBJECTS)\n'
DEBUG: add  '\t$(am_libprintbackend_file_la_OBJECTS)\n'
DEBUG: set  '\t$(am_libprintbackend_file_la_OBJECTS)\n' multidef -> ground
DEBUG: line 'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n'
DEBUG: set  'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n'
DEBUG: line '\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n'
DEBUG: add  '\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n'
DEBUG: line '\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n'
DEBUG: add  '\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n'
DEBUG: line '\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
DEBUG: add  '\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
DEBUG: set  '\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n' multidef -> ground
DEBUG: line 'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
DEBUG: keep 'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
DEBUG: line 'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n'
DEBUG: set  'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n' ground -> multidef
DEBUG: keep 'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n'
DEBUG: line '\t$(CPPFLAGS) $(CFLAGS)\n'
DEBUG: add  '\t$(CPPFLAGS) $(CFLAGS)\n'
DEBUG: set  '\t$(CPPFLAGS) $(CFLAGS)\n' multidef -> ground
DEBUG: line 'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n'
DEBUG: set  'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n' ground -> multidef
DEBUG: keep 'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n'
DEBUG: line '\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n'
DEBUG: add  '\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n'
DEBUG: line '\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n'
DEBUG: add  '\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n'
DEBUG: line '\t $(CFLAGS)\n'
DEBUG: add  '\t $(CFLAGS)\n'
DEBUG: set  '\t $(CFLAGS)\n' multidef -> ground
DEBUG: line 'HEADERS = $(noinst_HEADERS)\n'
DEBUG: keep 'HEADERS = $(noinst_HEADERS)\n'
DEBUG: line 'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
DEBUG: keep 'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
DEBUG: line '# Read a list of newline-separated strings from the standard input,\n'
DEBUG: keep '# Read a list of newline-separated strings from the standard input,\n'
DEBUG: line '# and print each of them once, without duplicates.  Input order is\n'
DEBUG: keep '# and print each of them once, without duplicates.  Input order is\n'
DEBUG: line '# *not* preserved.\n'
DEBUG: keep '# *not* preserved.\n'
DEBUG: line "am__uniquify_input = awk '\\\n"
DEBUG: set  "am__uniquify_input = awk '\\\n" ground -> multidef
DEBUG: keep "am__uniquify_input = awk '\\\n"
DEBUG: line '  BEGIN { nonempty = 0; } \\\n'
DEBUG: add  '  BEGIN { nonempty = 0; } \\\n'
DEBUG: line '  { items[$$0] = 1; nonempty = 1; } \\\n'
DEBUG: add  '  { items[$$0] = 1; nonempty = 1; } \\\n'
DEBUG: line '  END { if (nonempty) { for (i in items) print i; }; } \\\n'
DEBUG: add  '  END { if (nonempty) { for (i in items) print i; }; } \\\n'
DEBUG: line "'\n"
DEBUG: add  "'\n"
DEBUG: set  "'\n" multidef -> ground
DEBUG: line '# Make sure the list of sources is unique.  This is necessary because,\n'
DEBUG: keep '# Make sure the list of sources is unique.  This is necessary because,\n'
DEBUG: line '# e.g., the same source file might be shared among _SOURCES variables\n'
DEBUG: keep '# e.g., the same source file might be shared among _SOURCES variables\n'
DEBUG: line '# for different programs/libraries.\n'
DEBUG: keep '# for different programs/libraries.\n'
DEBUG: line 'am__define_uniq_tagged_files = \\\n'
DEBUG: set  'am__define_uniq_tagged_files = \\\n' ground -> multidef
DEBUG: keep 'am__define_uniq_tagged_files = \\\n'
DEBUG: line "  list='$(am__tagged_files)'; \\\n"
DEBUG: add  "  list='$(am__tagged_files)'; \\\n"
DEBUG: line '  unique=`for i in $$list; do \\\n'
DEBUG: add  '  unique=`for i in $$list; do \\\n'
DEBUG: line '    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n'
DEBUG: add  '    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n'
DEBUG: line '  done | $(am__uniquify_input)`\n'
DEBUG: add  '  done | $(am__uniquify_input)`\n'
DEBUG: set  '  done | $(am__uniquify_input)`\n' multidef -> ground
DEBUG: line 'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n'
DEBUG: set  'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n' ground -> multidef
DEBUG: keep 'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n'
DEBUG: line '\t$(top_srcdir)/depcomp\n'
DEBUG: add  '\t$(top_srcdir)/depcomp\n'
DEBUG: set  '\t$(top_srcdir)/depcomp\n' multidef -> ground
DEBUG: line 'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
DEBUG: keep 'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
DEBUG: line 'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
DEBUG: keep 'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
DEBUG: line 'gdktarget = x11\n'
DEBUG: keep 'gdktarget = x11\n'
DEBUG: line 'gdktargetlib = libgdk-x11-2.0.la\n'
DEBUG: keep 'gdktargetlib = libgdk-x11-2.0.la\n'
DEBUG: line 'gtktargetlib = libgtk-x11-2.0.la\n'
DEBUG: keep 'gtktargetlib = libgtk-x11-2.0.la\n'
DEBUG: line 'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
DEBUG: keep 'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
DEBUG: line 'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
DEBUG: keep 'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# initialize variables for unconditional += appending\n'
DEBUG: keep '# initialize variables for unconditional += appending\n'
DEBUG: line 'EXTRA_DIST =\n'
DEBUG: keep 'EXTRA_DIST =\n'
DEBUG: line 'TEST_PROGS =\n'
DEBUG: keep 'TEST_PROGS =\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# Xvfb based test rules\n'
DEBUG: keep '# Xvfb based test rules\n'
DEBUG: line 'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
DEBUG: keep 'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
DEBUG: line 'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n'
DEBUG: set  'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n' ground -> multidef
DEBUG: keep 'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n'
DEBUG: line '   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n'
DEBUG: add  '   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n'
DEBUG: line '   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n'
DEBUG: add  '   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n'
DEBUG: line '  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n'
DEBUG: add  '  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n'
DEBUG: line '  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n'
DEBUG: add  '  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n'
DEBUG: line '  9995 9996 9997 9998 9999\n'
DEBUG: add  '  9995 9996 9997 9998 9999\n'
DEBUG: set  '  9995 9996 9997 9998 9999\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'SKIP_GDKTARGET = \\\n'
DEBUG: set  'SKIP_GDKTARGET = \\\n' ground -> multidef
DEBUG: keep 'SKIP_GDKTARGET = \\\n'
DEBUG: line '\ttest "$(gdktarget)" != "x11" \\\n'
DEBUG: add  '\ttest "$(gdktarget)" != "x11" \\\n'
DEBUG: line '\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
DEBUG: add  '\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
DEBUG: set  '\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'XVFB_START = \\\n'
DEBUG: set  'XVFB_START = \\\n' ground -> multidef
DEBUG: keep 'XVFB_START = \\\n'
DEBUG: line '\t${XVFB} -help 2>/dev/null 1>&2 \\\n'
DEBUG: add  '\t${XVFB} -help 2>/dev/null 1>&2 \\\n'
DEBUG: line '\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n'
DEBUG: add  '\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n'
DEBUG: line '\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n'
DEBUG: add  '\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n'
DEBUG: line '\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n'
DEBUG: add  '\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n'
DEBUG: line '\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n'
DEBUG: add  '\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n'
DEBUG: line '\t&& DISPLAY=:$$XID && export DISPLAY\n'
DEBUG: add  '\t&& DISPLAY=:$$XID && export DISPLAY\n'
DEBUG: set  '\t&& DISPLAY=:$$XID && export DISPLAY\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
DEBUG: keep 'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
DEBUG: line 'backend_LTLIBRARIES = libprintbackend-file.la\n'
DEBUG: keep 'backend_LTLIBRARIES = libprintbackend-file.la\n'
DEBUG: line 'libprintbackend_file_la_SOURCES = \\\n'
DEBUG: set  'libprintbackend_file_la_SOURCES = \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_SOURCES = \\\n'
DEBUG: line '\tgtkprintbackendfile.c\n'
DEBUG: add  '\tgtkprintbackendfile.c\n'
DEBUG: set  '\tgtkprintbackendfile.c\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'libprintbackend_file_la_CPPFLAGS = \\\n'
DEBUG: set  'libprintbackend_file_la_CPPFLAGS = \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_CPPFLAGS = \\\n'
DEBUG: line '\t-I$(top_srcdir) \t\t\t\t\\\n'
DEBUG: add  '\t-I$(top_srcdir) \t\t\t\t\\\n'
DEBUG: line '\t-I$(top_srcdir)/gtk\t\t\t\t\\\n'
DEBUG: add  '\t-I$(top_srcdir)/gtk\t\t\t\t\\\n'
DEBUG: line '\t-I$(top_builddir)/gtk\t\t\t\t\\\n'
DEBUG: add  '\t-I$(top_builddir)/gtk\t\t\t\t\\\n'
DEBUG: line '\t-I$(top_srcdir)/gdk\t\t\t\t\\\n'
DEBUG: add  '\t-I$(top_srcdir)/gdk\t\t\t\t\\\n'
DEBUG: line '\t-I$(top_builddir)/gdk\t\t\t\t\\\n'
DEBUG: add  '\t-I$(top_builddir)/gdk\t\t\t\t\\\n'
DEBUG: line '\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n'
DEBUG: add  '\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n'
DEBUG: line '\n'
DEBUG: add  '\n'
DEBUG: set  '\n' multidef -> ground
DEBUG: line 'libprintbackend_file_la_CFLAGS = \\\n'
DEBUG: set  'libprintbackend_file_la_CFLAGS = \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_CFLAGS = \\\n'
DEBUG: line '\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n'
DEBUG: add  '\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n'
DEBUG: line '\n'
DEBUG: add  '\n'
DEBUG: set  '\n' multidef -> ground
DEBUG: line 'libprintbackend_file_la_LDFLAGS = \\\n'
DEBUG: set  'libprintbackend_file_la_LDFLAGS = \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_LDFLAGS = \\\n'
DEBUG: line '\t-avoid-version -module $(no_undefined)\n'
DEBUG: add  '\t-avoid-version -module $(no_undefined)\n'
DEBUG: set  '\t-avoid-version -module $(no_undefined)\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'libprintbackend_file_la_LIBADD = \\\n'
DEBUG: set  'libprintbackend_file_la_LIBADD = \\\n' ground -> multidef
DEBUG: keep 'libprintbackend_file_la_LIBADD = \\\n'
DEBUG: line '\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n'
DEBUG: add  '\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n'
DEBUG: line '\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n'
DEBUG: add  '\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n'
DEBUG: line '\t$(GTK_DEP_LIBS)\n'
DEBUG: add  '\t$(GTK_DEP_LIBS)\n'
DEBUG: set  '\t$(GTK_DEP_LIBS)\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'noinst_HEADERS = \\\n'
DEBUG: set  'noinst_HEADERS = \\\n' ground -> multidef
DEBUG: keep 'noinst_HEADERS = \\\n'
DEBUG: line '\tgtkprintbackendfile.h\n'
DEBUG: add  '\tgtkprintbackendfile.h\n'
DEBUG: set  '\tgtkprintbackendfile.h\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'all: all-am\n'
DEBUG: keep 'all: all-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.SUFFIXES: .c .lo .o .obj\n'
DEBUG: keep '.SUFFIXES: .c .lo .o .obj\n'
DEBUG: line '$(top_srcdir)/Makefile.decl $(am__empty):\n'
DEBUG: keep '$(top_srcdir)/Makefile.decl $(am__empty):\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
DEBUG: keep 'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
DEBUG: line '\t@$(NORMAL_INSTALL)\n'
DEBUG: keep '\t@$(NORMAL_INSTALL)\n'
DEBUG: line '\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
DEBUG: keep '\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
DEBUG: line '\tlist2=; for p in $$list; do \\\n'
DEBUG: keep '\tlist2=; for p in $$list; do \\\n'
DEBUG: line '\t  if test -f $$p; then \\\n'
DEBUG: keep '\t  if test -f $$p; then \\\n'
DEBUG: line '\t    list2="$$list2 $$p"; \\\n'
DEBUG: keep '\t    list2="$$list2 $$p"; \\\n'
DEBUG: line '\t  else :; fi; \\\n'
DEBUG: keep '\t  else :; fi; \\\n'
DEBUG: line '\tdone; \\\n'
DEBUG: keep '\tdone; \\\n'
DEBUG: line '\ttest -z "$$list2" || { \\\n'
DEBUG: keep '\ttest -z "$$list2" || { \\\n'
DEBUG: line '\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
DEBUG: keep '\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
DEBUG: line '\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
DEBUG: keep '\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
DEBUG: line '\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
DEBUG: keep '\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
DEBUG: line '\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
DEBUG: keep '\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
DEBUG: line '\t}\n'
DEBUG: keep '\t}\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'uninstall-backendLTLIBRARIES:\n'
DEBUG: keep 'uninstall-backendLTLIBRARIES:\n'
DEBUG: line '\t@$(NORMAL_UNINSTALL)\n'
DEBUG: keep '\t@$(NORMAL_UNINSTALL)\n'
DEBUG: line '\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
DEBUG: keep '\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
DEBUG: line '\tfor p in $$list; do \\\n'
DEBUG: keep '\tfor p in $$list; do \\\n'
DEBUG: line '\t  $(am__strip_dir) \\\n'
DEBUG: keep '\t  $(am__strip_dir) \\\n'
DEBUG: line '\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
DEBUG: keep '\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
DEBUG: line '\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
DEBUG: keep '\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
DEBUG: line '\tdone\n'
DEBUG: keep '\tdone\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-backendLTLIBRARIES:\n'
DEBUG: keep 'clean-backendLTLIBRARIES:\n'
DEBUG: line '\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
DEBUG: keep '\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
DEBUG: line "\t@list='$(backend_LTLIBRARIES)'; \\\n"
DEBUG: keep "\t@list='$(backend_LTLIBRARIES)'; \\\n"
DEBUG: line '\tlocs=`for p in $$list; do echo $$p; done | \\\n'
DEBUG: keep '\tlocs=`for p in $$list; do echo $$p; done | \\\n'
DEBUG: line "\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
DEBUG: keep "\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
DEBUG: line '\t      sort -u`; \\\n'
DEBUG: keep '\t      sort -u`; \\\n'
DEBUG: line '\ttest -z "$$locs" || { \\\n'
DEBUG: keep '\ttest -z "$$locs" || { \\\n'
DEBUG: line '\t  echo rm -f $${locs}; \\\n'
DEBUG: keep '\t  echo rm -f $${locs}; \\\n'
DEBUG: line '\t  rm -f $${locs}; \\\n'
DEBUG: keep '\t  rm -f $${locs}; \\\n'
DEBUG: line '\t}\n'
DEBUG: keep '\t}\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
DEBUG: keep 'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
DEBUG: line '\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
DEBUG: keep '\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean-compile:\n'
DEBUG: keep 'mostlyclean-compile:\n'
DEBUG: line '\t-rm -f *.$(OBJEXT)\n'
DEBUG: keep '\t-rm -f *.$(OBJEXT)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean-compile:\n'
DEBUG: keep 'distclean-compile:\n'
DEBUG: line '\t-rm -f *.tab.c\n'
DEBUG: keep '\t-rm -f *.tab.c\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.c.$(OBJEXT):\n'
DEBUG: keep '.c.$(OBJEXT):\n'
DEBUG: line '#\t$(COMPILE) -c -o $@ $<\n'
DEBUG: keep '#\t$(COMPILE) -c -o $@ $<\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.c.obj:\n'
DEBUG: keep '.c.obj:\n'
DEBUG: line "#\tsource='$<' object='$@' libtool=no\n"
DEBUG: keep "#\tsource='$<' object='$@' libtool=no\n"
DEBUG: line "\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
DEBUG: keep "\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.c.lo:\n'
DEBUG: keep '.c.lo:\n'
DEBUG: line "#\tsource='$<' object='$@' libtool=yes\n"
DEBUG: keep "#\tsource='$<' object='$@' libtool=yes\n"
DEBUG: line '\t$(LTCOMPILE) -c -o $@ $<\n'
DEBUG: keep '\t$(LTCOMPILE) -c -o $@ $<\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
DEBUG: keep 'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
DEBUG: line "#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
DEBUG: keep "#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
DEBUG: line "\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
DEBUG: keep "\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean-libtool:\n'
DEBUG: keep 'mostlyclean-libtool:\n'
DEBUG: line '\t-rm -f *.lo\n'
DEBUG: keep '\t-rm -f *.lo\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-libtool:\n'
DEBUG: keep 'clean-libtool:\n'
DEBUG: line '\t-rm -rf .libs _libs\n'
DEBUG: keep '\t-rm -rf .libs _libs\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'tags: tags-am\n'
DEBUG: keep 'tags: tags-am\n'
DEBUG: line 'TAGS: tags\n'
DEBUG: keep 'TAGS: tags\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: keep 'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: line '\tset x; \\\n'
DEBUG: keep '\tset x; \\\n'
DEBUG: line '\there=`pwd`; \\\n'
DEBUG: keep '\there=`pwd`; \\\n'
DEBUG: line '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: keep '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: line '\tshift; \\\n'
DEBUG: keep '\tshift; \\\n'
DEBUG: line '\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
DEBUG: keep '\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
DEBUG: line '\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
DEBUG: keep '\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
DEBUG: line '\t  if test $$# -gt 0; then \\\n'
DEBUG: keep '\t  if test $$# -gt 0; then \\\n'
DEBUG: line '\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: keep '\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: line '\t      "$$@" $$unique; \\\n'
DEBUG: keep '\t      "$$@" $$unique; \\\n'
DEBUG: line '\t  else \\\n'
DEBUG: keep '\t  else \\\n'
DEBUG: line '\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: keep '\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: line '\t      $$unique; \\\n'
DEBUG: keep '\t      $$unique; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tfi\n'
DEBUG: keep '\tfi\n'
DEBUG: line 'ctags: ctags-am\n'
DEBUG: keep 'ctags: ctags-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'CTAGS: ctags\n'
DEBUG: keep 'CTAGS: ctags\n'
DEBUG: line 'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: keep 'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: line '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: keep '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: line '\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
DEBUG: keep '\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
DEBUG: line '\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
DEBUG: keep '\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
DEBUG: line '\t     $$unique\n'
DEBUG: keep '\t     $$unique\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'GTAGS:\n'
DEBUG: keep 'GTAGS:\n'
DEBUG: line '\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
DEBUG: keep '\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
DEBUG: line '\t  && cd >/dev/null $(top_srcdir) \\\n'
DEBUG: keep '\t  && cd >/dev/null $(top_srcdir) \\\n'
DEBUG: line '\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
DEBUG: keep '\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
DEBUG: line 'cscopelist: cscopelist-am\n'
DEBUG: keep 'cscopelist: cscopelist-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'cscopelist-am: $(am__tagged_files)\n'
DEBUG: keep 'cscopelist-am: $(am__tagged_files)\n'
DEBUG: line "\tlist='$(am__tagged_files)'; \\\n"
DEBUG: keep "\tlist='$(am__tagged_files)'; \\\n"
DEBUG: line '\tcase "$(srcdir)" in \\\n'
DEBUG: keep '\tcase "$(srcdir)" in \\\n'
DEBUG: line '\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
DEBUG: keep '\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
DEBUG: line '\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
DEBUG: keep '\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
DEBUG: line '\tesac; \\\n'
DEBUG: keep '\tesac; \\\n'
DEBUG: line '\tfor i in $$list; do \\\n'
DEBUG: keep '\tfor i in $$list; do \\\n'
DEBUG: line '\t  if test -f "$$i"; then \\\n'
DEBUG: keep '\t  if test -f "$$i"; then \\\n'
DEBUG: line '\t    echo "$(subdir)/$$i"; \\\n'
DEBUG: keep '\t    echo "$(subdir)/$$i"; \\\n'
DEBUG: line '\t  else \\\n'
DEBUG: keep '\t  else \\\n'
DEBUG: line '\t    echo "$$sdir/$$i"; \\\n'
DEBUG: keep '\t    echo "$$sdir/$$i"; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tdone >> $(top_builddir)/cscope.files\n'
DEBUG: keep '\tdone >> $(top_builddir)/cscope.files\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean-tags:\n'
DEBUG: keep 'distclean-tags:\n'
DEBUG: line '\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
DEBUG: keep '\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
DEBUG: line 'distdir: $(BUILT_SOURCES)\n'
DEBUG: keep 'distdir: $(BUILT_SOURCES)\n'
DEBUG: line '\t$(MAKE) distdir-am\n'
DEBUG: keep '\t$(MAKE) distdir-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distdir-am: $(DISTFILES)\n'
DEBUG: keep 'distdir-am: $(DISTFILES)\n'
DEBUG: line '\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: keep '\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: line '\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: keep '\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: line "\tlist='$(DISTFILES)'; \\\n"
DEBUG: keep "\tlist='$(DISTFILES)'; \\\n"
DEBUG: line '\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
DEBUG: keep '\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
DEBUG: line '\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
DEBUG: keep '\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
DEBUG: line '\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
DEBUG: keep '\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
DEBUG: line '\tcase $$dist_files in \\\n'
DEBUG: keep '\tcase $$dist_files in \\\n'
DEBUG: line '\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
DEBUG: keep '\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
DEBUG: line "\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
DEBUG: keep "\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
DEBUG: line '\t\t\t   sort -u` ;; \\\n'
DEBUG: keep '\t\t\t   sort -u` ;; \\\n'
DEBUG: line '\tesac; \\\n'
DEBUG: keep '\tesac; \\\n'
DEBUG: line '\tfor file in $$dist_files; do \\\n'
DEBUG: keep '\tfor file in $$dist_files; do \\\n'
DEBUG: line '\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
DEBUG: keep '\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
DEBUG: line '\t  if test -d $$d/$$file; then \\\n'
DEBUG: keep '\t  if test -d $$d/$$file; then \\\n'
DEBUG: line '\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
DEBUG: keep '\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
DEBUG: line '\t    if test -d "$(distdir)/$$file"; then \\\n'
DEBUG: keep '\t    if test -d "$(distdir)/$$file"; then \\\n'
DEBUG: line '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: keep '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: line '\t    fi; \\\n'
DEBUG: keep '\t    fi; \\\n'
DEBUG: line '\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
DEBUG: keep '\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
DEBUG: line '\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: keep '\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: line '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: keep '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: line '\t    fi; \\\n'
DEBUG: keep '\t    fi; \\\n'
DEBUG: line '\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: keep '\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: line '\t  else \\\n'
DEBUG: keep '\t  else \\\n'
DEBUG: line '\t    test -f "$(distdir)/$$file" \\\n'
DEBUG: keep '\t    test -f "$(distdir)/$$file" \\\n'
DEBUG: line '\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
DEBUG: keep '\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
DEBUG: line '\t    || exit 1; \\\n'
DEBUG: keep '\t    || exit 1; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tdone\n'
DEBUG: keep '\tdone\n'
DEBUG: line 'check-am: all-am\n'
DEBUG: keep 'check-am: all-am\n'
DEBUG: line '\t$(MAKE) check-local\n'
DEBUG: keep '\t$(MAKE) check-local\n'
DEBUG: line 'check: check-am\n'
DEBUG: keep 'check: check-am\n'
DEBUG: line 'all-am: $(LTLIBRARIES) $(HEADERS)\n'
DEBUG: keep 'all-am: $(LTLIBRARIES) $(HEADERS)\n'
DEBUG: line 'installdirs:\n'
DEBUG: keep 'installdirs:\n'
DEBUG: line '\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
DEBUG: keep '\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
DEBUG: line '\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
DEBUG: keep '\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
DEBUG: line '\tdone\n'
DEBUG: keep '\tdone\n'
DEBUG: line 'install: install-am\n'
DEBUG: keep 'install: install-am\n'
DEBUG: line 'install-exec: install-exec-am\n'
DEBUG: keep 'install-exec: install-exec-am\n'
DEBUG: line 'install-data: install-data-am\n'
DEBUG: keep 'install-data: install-data-am\n'
DEBUG: line 'uninstall: uninstall-am\n'
DEBUG: keep 'uninstall: uninstall-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-am: all-am\n'
DEBUG: keep 'install-am: all-am\n'
DEBUG: line '\t@$(MAKE) install-exec-am install-data-am\n'
DEBUG: keep '\t@$(MAKE) install-exec-am install-data-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'installcheck: installcheck-am\n'
DEBUG: keep 'installcheck: installcheck-am\n'
DEBUG: line 'install-strip:\n'
DEBUG: keep 'install-strip:\n'
DEBUG: line "\tif test -z 'strip'; then \\\n"
DEBUG: keep "\tif test -z 'strip'; then \\\n"
DEBUG: line '\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
DEBUG: keep '\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
DEBUG: line '\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: keep '\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: line '\t      install; \\\n'
DEBUG: keep '\t      install; \\\n'
DEBUG: line '\telse \\\n'
DEBUG: keep '\telse \\\n'
DEBUG: line '\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
DEBUG: keep '\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
DEBUG: line '\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: keep '\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: line '\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
DEBUG: keep '\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
DEBUG: line '\tfi\n'
DEBUG: keep '\tfi\n'
DEBUG: line 'mostlyclean-generic:\n'
DEBUG: keep 'mostlyclean-generic:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-generic:\n'
DEBUG: keep 'clean-generic:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean-generic:\n'
DEBUG: keep 'distclean-generic:\n'
DEBUG: line '\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
DEBUG: keep '\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
DEBUG: line '\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
DEBUG: keep '\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean: clean-am\n'
DEBUG: keep 'clean: clean-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n'
DEBUG: set  'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n' ground -> multidef
DEBUG: keep 'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n'
DEBUG: line '\tmostlyclean-am\n'
DEBUG: add  '\tmostlyclean-am\n'
DEBUG: set  '\tmostlyclean-am\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean: distclean-am\n'
DEBUG: keep 'distclean: distclean-am\n'
DEBUG: line 'distclean-am: clean-am distclean-compile distclean-generic \\\n'
DEBUG: set  'distclean-am: clean-am distclean-compile distclean-generic \\\n' ground -> multidef
DEBUG: keep 'distclean-am: clean-am distclean-compile distclean-generic \\\n'
DEBUG: line '\tdistclean-tags\n'
DEBUG: add  '\tdistclean-tags\n'
DEBUG: set  '\tdistclean-tags\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'html: html-am\n'
DEBUG: keep 'html: html-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'html-am:\n'
DEBUG: keep 'html-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-data-am: install-backendLTLIBRARIES\n'
DEBUG: keep 'install-data-am: install-backendLTLIBRARIES\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-exec-am:\n'
DEBUG: keep 'install-exec-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-html: install-html-am\n'
DEBUG: keep 'install-html: install-html-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-html-am:\n'
DEBUG: keep 'install-html-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-man:\n'
DEBUG: keep 'install-man:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'installcheck-am:\n'
DEBUG: keep 'installcheck-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean: mostlyclean-am\n'
DEBUG: keep 'mostlyclean: mostlyclean-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n'
DEBUG: set  'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n' ground -> multidef
DEBUG: keep 'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n'
DEBUG: line '\tmostlyclean-libtool\n'
DEBUG: add  '\tmostlyclean-libtool\n'
DEBUG: set  '\tmostlyclean-libtool\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'uninstall-am: uninstall-backendLTLIBRARIES\n'
DEBUG: keep 'uninstall-am: uninstall-backendLTLIBRARIES\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n'
DEBUG: set  '.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n' ground -> multidef
DEBUG: keep '.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n'
DEBUG: line '\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n'
DEBUG: add  '\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n'
DEBUG: line '\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n'
DEBUG: add  '\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n'
DEBUG: line '\tdistclean-compile distclean-generic distclean-libtool \\\n'
DEBUG: add  '\tdistclean-compile distclean-generic distclean-libtool \\\n'
DEBUG: line '\tdistclean-tags distdir html html-am \\\n'
DEBUG: add  '\tdistclean-tags distdir html html-am \\\n'
DEBUG: line '\tinstall install-am install-backendLTLIBRARIES install-data \\\n'
DEBUG: add  '\tinstall install-am install-backendLTLIBRARIES install-data \\\n'
DEBUG: line '\tinstall-data-am install-exec \\\n'
DEBUG: add  '\tinstall-data-am install-exec \\\n'
DEBUG: line '\tinstall-exec-am install-html install-html-am \\\n'
DEBUG: add  '\tinstall-exec-am install-html install-html-am \\\n'
DEBUG: line '\tinstall-man \\\n'
DEBUG: add  '\tinstall-man \\\n'
DEBUG: line '\tinstall-strip installcheck \\\n'
DEBUG: add  '\tinstall-strip installcheck \\\n'
DEBUG: line '\tinstallcheck-am installdirs \\\n'
DEBUG: add  '\tinstallcheck-am installdirs \\\n'
DEBUG: line '\tmostlyclean mostlyclean-compile \\\n'
DEBUG: add  '\tmostlyclean mostlyclean-compile \\\n'
DEBUG: line '\tmostlyclean-generic mostlyclean-libtool \\\n'
DEBUG: add  '\tmostlyclean-generic mostlyclean-libtool \\\n'
DEBUG: line '\ttags tags-am uninstall uninstall-am \\\n'
DEBUG: add  '\ttags tags-am uninstall uninstall-am \\\n'
DEBUG: line '\tuninstall-backendLTLIBRARIES\n'
DEBUG: add  '\tuninstall-backendLTLIBRARIES\n'
DEBUG: set  '\tuninstall-backendLTLIBRARIES\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# call as: $(XVFB_START) && someprogram\n'
DEBUG: keep '# call as: $(XVFB_START) && someprogram\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# test: run all tests in cwd and subdirs\n'
DEBUG: keep '# test: run all tests in cwd and subdirs\n'
DEBUG: line 'test: test-cwd test-recurse\n'
DEBUG: keep 'test: test-cwd test-recurse\n'
DEBUG: line '# test-cwd: run tests in cwd\n'
DEBUG: keep '# test-cwd: run tests in cwd\n'
DEBUG: line 'test-cwd: ${TEST_PROGS}\n'
DEBUG: keep 'test-cwd: ${TEST_PROGS}\n'
DEBUG: line '\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: keep '\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: line '\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
DEBUG: keep '\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
DEBUG: line '\t}\n'
DEBUG: keep '\t}\n'
DEBUG: line '# test-report: run tests in subdirs and generate report\n'
DEBUG: keep '# test-report: run tests in subdirs and generate report\n'
DEBUG: line '# perf-report: run tests in subdirs with -m perf and generate report\n'
DEBUG: keep '# perf-report: run tests in subdirs with -m perf and generate report\n'
DEBUG: line '# full-report: like test-report: with -m perf and -m slow\n'
DEBUG: keep '# full-report: like test-report: with -m perf and -m slow\n'
DEBUG: line 'test-report perf-report full-report:\t${TEST_PROGS}\n'
DEBUG: keep 'test-report perf-report full-report:\t${TEST_PROGS}\n'
DEBUG: line '\t@ ignore_logdir=true ; \\\n'
DEBUG: keep '\t@ ignore_logdir=true ; \\\n'
DEBUG: line '\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: keep '\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: line '\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
DEBUG: keep '\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
DEBUG: line '\t    ignore_logdir=false ; \\\n'
DEBUG: keep '\t    ignore_logdir=false ; \\\n'
DEBUG: line '\t  fi ; \\\n'
DEBUG: keep '\t  fi ; \\\n'
DEBUG: line '\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: keep '\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: line '\t    case $@ in \\\n'
DEBUG: keep '\t    case $@ in \\\n'
DEBUG: line '\t    test-report) test_options="-k";; \\\n'
DEBUG: keep '\t    test-report) test_options="-k";; \\\n'
DEBUG: line '\t    perf-report) test_options="-k -m=perf";; \\\n'
DEBUG: keep '\t    perf-report) test_options="-k -m=perf";; \\\n'
DEBUG: line '\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
DEBUG: keep '\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
DEBUG: line '\t    esac ; \\\n'
DEBUG: keep '\t    esac ; \\\n'
DEBUG: line '\t    $(XVFB_START) && { \\\n'
DEBUG: keep '\t    $(XVFB_START) && { \\\n'
DEBUG: line '\t      set -e; \\\n'
DEBUG: keep '\t      set -e; \\\n'
DEBUG: line '\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: keep '\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: line '\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
DEBUG: keep '\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
DEBUG: line '\t      elif test -n "${TEST_PROGS}" ; then \\\n'
DEBUG: keep '\t      elif test -n "${TEST_PROGS}" ; then \\\n'
DEBUG: line '\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
DEBUG: keep '\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
DEBUG: line '\t      fi ; \\\n'
DEBUG: keep '\t      fi ; \\\n'
DEBUG: line '\t    }; \\\n'
DEBUG: keep '\t    }; \\\n'
DEBUG: line '\t  }; \\\n'
DEBUG: keep '\t  }; \\\n'
DEBUG: line '\t  $$ignore_logdir || { \\\n'
DEBUG: keep '\t  $$ignore_logdir || { \\\n'
DEBUG: line '\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
DEBUG: keep '\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
DEBUG: line "\t    echo '<report-collection>'  >> $@.xml ; \\\n"
DEBUG: keep "\t    echo '<report-collection>'  >> $@.xml ; \\\n"
DEBUG: line '\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
DEBUG: keep '\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
DEBUG: line '\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
DEBUG: keep '\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
DEBUG: line '\t    done ; \\\n'
DEBUG: keep '\t    done ; \\\n'
DEBUG: line '\t    echo >> $@.xml ; \\\n'
DEBUG: keep '\t    echo >> $@.xml ; \\\n'
DEBUG: line "\t    echo '</report-collection>' >> $@.xml ; \\\n"
DEBUG: keep "\t    echo '</report-collection>' >> $@.xml ; \\\n"
DEBUG: line '\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
DEBUG: keep '\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
DEBUG: line '\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
DEBUG: keep '\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
DEBUG: line '\t  }\n'
DEBUG: keep '\t  }\n'
DEBUG: line '.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
DEBUG: keep '.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
DEBUG: line '# run make test-cwd as part of make check\n'
DEBUG: keep '# run make test-cwd as part of make check\n'
DEBUG: line 'check-local: test-cwd\n'
DEBUG: keep 'check-local: test-cwd\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '-include $(top_srcdir)/git.mk\n'
DEBUG: keep '-include $(top_srcdir)/git.mk\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line ''
DEBUG: dangling references: set()
DEBUG: After scanning pass:
'# Identification\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
'LDFLAGS =\n'
'LIBS =\n'
'# Platform\n'
'OBJEXT = o\n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'libdir = /usr/lib\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../../..\n'
'top_srcdir = ../../..\n'
'subdir = modules/printbackends/file\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(noinst_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS =\n'
'# conftrol variables end here\n'
'-include ../../../config.mk\n'
'\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
'am__DEPENDENCIES_1 =\n'
'libprintbackend_file_la_DEPENDENCIES =  \\\n\t$(top_builddir)/gtk/$(gtktargetlib) \\\n\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
'am_libprintbackend_file_la_OBJECTS =  \\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
'libprintbackend_file_la_OBJECTS =  \\\n\t$(am_libprintbackend_file_la_OBJECTS)\n'
'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'HEADERS = $(noinst_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'EXTRA_DIST =\n'
'TEST_PROGS =\n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
'backend_LTLIBRARIES = libprintbackend-file.la\n'
'libprintbackend_file_la_SOURCES = \\\n\tgtkprintbackendfile.c\n'
'\n'
'libprintbackend_file_la_CPPFLAGS = \\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n\n'
'libprintbackend_file_la_CFLAGS = \\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n\n'
'libprintbackend_file_la_LDFLAGS = \\\n\t-avoid-version -module $(no_undefined)\n'
'\n'
'libprintbackend_file_la_LIBADD = \\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)\n'
'\n'
'noinst_HEADERS = \\\n\tgtkprintbackendfile.h\n'
'\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .o .obj\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tlist2=; for p in $$list; do \\\n'
'\t  if test -f $$p; then \\\n'
'\t    list2="$$list2 $$p"; \\\n'
'\t  else :; fi; \\\n'
'\tdone; \\\n'
'\ttest -z "$$list2" || { \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
'\t}\n'
'\n'
'uninstall-backendLTLIBRARIES:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tfor p in $$list; do \\\n'
'\t  $(am__strip_dir) \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
'\tdone\n'
'\n'
'clean-backendLTLIBRARIES:\n'
'\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
"\t@list='$(backend_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
'\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no\n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes\n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
"#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
"\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-local\n'
'check: check-am\n'
'all-am: $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n\tmostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'install-data-am: install-backendLTLIBRARIES\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'install-man:\n'
'\n'
'installcheck-am:\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'uninstall-am: uninstall-backendLTLIBRARIES\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags distdir html html-am \\\n\tinstall install-am install-backendLTLIBRARIES install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-man \\\n\tinstall-strip installcheck \\\n\tinstallcheck-am installdirs \\\n\tmostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool \\\n\ttags tags-am uninstall uninstall-am \\\n\tuninstall-backendLTLIBRARIES\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After substitution pass:
'# Identification\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
'LDFLAGS =\n'
'LIBS =\n'
'# Platform\n'
'OBJEXT = o\n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'libdir = /usr/lib\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../../..\n'
'top_srcdir = ../../..\n'
'subdir = modules/printbackends/file\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(noinst_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS =\n'
'# conftrol variables end here\n'
'-include ../../../config.mk\n'
'\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
'am__DEPENDENCIES_1 =\n'
'libprintbackend_file_la_DEPENDENCIES =  \\\n\t$(top_builddir)/gtk/$(gtktargetlib) \\\n\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
'am_libprintbackend_file_la_OBJECTS =  \\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
'libprintbackend_file_la_OBJECTS =  \\\n\t$(am_libprintbackend_file_la_OBJECTS)\n'
'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'HEADERS = $(noinst_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'EXTRA_DIST =\n'
'TEST_PROGS =\n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
'backend_LTLIBRARIES = libprintbackend-file.la\n'
'libprintbackend_file_la_SOURCES = \\\n\tgtkprintbackendfile.c\n'
'\n'
'libprintbackend_file_la_CPPFLAGS = \\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n\n'
'libprintbackend_file_la_CFLAGS = \\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n\n'
'libprintbackend_file_la_LDFLAGS = \\\n\t-avoid-version -module $(no_undefined)\n'
'\n'
'libprintbackend_file_la_LIBADD = \\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)\n'
'\n'
'noinst_HEADERS = \\\n\tgtkprintbackendfile.h\n'
'\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .o .obj\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tlist2=; for p in $$list; do \\\n'
'\t  if test -f $$p; then \\\n'
'\t    list2="$$list2 $$p"; \\\n'
'\t  else :; fi; \\\n'
'\tdone; \\\n'
'\ttest -z "$$list2" || { \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
'\t}\n'
'\n'
'uninstall-backendLTLIBRARIES:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tfor p in $$list; do \\\n'
'\t  $(am__strip_dir) \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
'\tdone\n'
'\n'
'clean-backendLTLIBRARIES:\n'
'\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
"\t@list='$(backend_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
'\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no\n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes\n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
"#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
"\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-local\n'
'check: check-am\n'
'all-am: $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n\tmostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'install-data-am: install-backendLTLIBRARIES\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'install-man:\n'
'\n'
'installcheck-am:\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'uninstall-am: uninstall-backendLTLIBRARIES\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags distdir html html-am \\\n\tinstall install-am install-backendLTLIBRARIES install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-man \\\n\tinstall-strip installcheck \\\n\tinstallcheck-am installdirs \\\n\tmostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool \\\n\ttags tags-am uninstall uninstall-am \\\n\tuninstall-backendLTLIBRARIES\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After de-libtoolization pass:
'# Identification\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
'LDFLAGS =\n'
'LIBS =\n'
'# Platform\n'
'OBJEXT = o\n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'libdir = /usr/lib\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../../..\n'
'top_srcdir = ../../..\n'
'subdir = modules/printbackends/file\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(noinst_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS =\n'
'# conftrol variables end here\n'
'-include ../../../config.mk\n'
'\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
'am__DEPENDENCIES_1 =\n'
'libprintbackend_file_la_DEPENDENCIES =  \\\n\t$(top_builddir)/gtk/$(gtktargetlib) \\\n\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
'am_libprintbackend_file_la_OBJECTS =  \\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
'libprintbackend_file_la_OBJECTS =  \\\n\t$(am_libprintbackend_file_la_OBJECTS)\n'
'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'HEADERS = $(noinst_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'EXTRA_DIST =\n'
'TEST_PROGS =\n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
'backend_LTLIBRARIES = libprintbackend-file.la\n'
'libprintbackend_file_la_SOURCES = \\\n\tgtkprintbackendfile.c\n'
'\n'
'libprintbackend_file_la_CPPFLAGS = \\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n\n'
'libprintbackend_file_la_CFLAGS = \\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n\n'
'libprintbackend_file_la_LDFLAGS = \\\n\t-avoid-version -module $(no_undefined)\n'
'\n'
'libprintbackend_file_la_LIBADD = \\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)\n'
'\n'
'noinst_HEADERS = \\\n\tgtkprintbackendfile.h\n'
'\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .o .obj\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tlist2=; for p in $$list; do \\\n'
'\t  if test -f $$p; then \\\n'
'\t    list2="$$list2 $$p"; \\\n'
'\t  else :; fi; \\\n'
'\tdone; \\\n'
'\ttest -z "$$list2" || { \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
'\t}\n'
'\n'
'uninstall-backendLTLIBRARIES:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tfor p in $$list; do \\\n'
'\t  $(am__strip_dir) \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
'\tdone\n'
'\n'
'clean-backendLTLIBRARIES:\n'
'\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
"\t@list='$(backend_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
'\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no\n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes\n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
"#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
"\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-local\n'
'check: check-am\n'
'all-am: $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n\tmostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'install-data-am: install-backendLTLIBRARIES\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'install-man:\n'
'\n'
'installcheck-am:\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'uninstall-am: uninstall-backendLTLIBRARIES\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags distdir html html-am \\\n\tinstall install-am install-backendLTLIBRARIES install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-man \\\n\tinstall-strip installcheck \\\n\tinstallcheck-am installdirs \\\n\tmostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool \\\n\ttags tags-am uninstall uninstall-am \\\n\tuninstall-backendLTLIBRARIES\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After scavenging pass:
'# Identification\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
'LDFLAGS =\n'
'LIBS =\n'
'# Platform\n'
'OBJEXT = o\n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'libdir = /usr/lib\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../../..\n'
'top_srcdir = ../../..\n'
'subdir = modules/printbackends/file\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(noinst_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS =\n'
'# conftrol variables end here\n'
'-include ../../../config.mk\n'
'\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
'am__DEPENDENCIES_1 =\n'
'libprintbackend_file_la_DEPENDENCIES =  \\\n\t$(top_builddir)/gtk/$(gtktargetlib) \\\n\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
'am_libprintbackend_file_la_OBJECTS =  \\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
'libprintbackend_file_la_OBJECTS =  \\\n\t$(am_libprintbackend_file_la_OBJECTS)\n'
'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'HEADERS = $(noinst_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'EXTRA_DIST =\n'
'TEST_PROGS =\n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
'backend_LTLIBRARIES = libprintbackend-file.la\n'
'libprintbackend_file_la_SOURCES = \\\n\tgtkprintbackendfile.c\n'
'\n'
'libprintbackend_file_la_CPPFLAGS = \\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n\n'
'libprintbackend_file_la_CFLAGS = \\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n\n'
'libprintbackend_file_la_LDFLAGS = \\\n\t-avoid-version -module $(no_undefined)\n'
'\n'
'libprintbackend_file_la_LIBADD = \\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)\n'
'\n'
'noinst_HEADERS = \\\n\tgtkprintbackendfile.h\n'
'\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .o .obj\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tlist2=; for p in $$list; do \\\n'
'\t  if test -f $$p; then \\\n'
'\t    list2="$$list2 $$p"; \\\n'
'\t  else :; fi; \\\n'
'\tdone; \\\n'
'\ttest -z "$$list2" || { \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
'\t}\n'
'\n'
'uninstall-backendLTLIBRARIES:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tfor p in $$list; do \\\n'
'\t  $(am__strip_dir) \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
'\tdone\n'
'\n'
'clean-backendLTLIBRARIES:\n'
'\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
"\t@list='$(backend_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
'\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no\n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes\n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
"#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
"\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-local\n'
'check: check-am\n'
'all-am: $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n\tmostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'install-data-am: install-backendLTLIBRARIES\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'install-man:\n'
'\n'
'installcheck-am:\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'uninstall-am: uninstall-backendLTLIBRARIES\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags distdir html html-am \\\n\tinstall install-am install-backendLTLIBRARIES install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-man \\\n\tinstall-strip installcheck \\\n\tinstallcheck-am installdirs \\\n\tmostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool \\\n\ttags tags-am uninstall uninstall-am \\\n\tuninstall-backendLTLIBRARIES\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After reordering pass:
'# Identification\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
'LDFLAGS =\n'
'LIBS =\n'
'# Platform\n'
'OBJEXT = o\n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'libdir = /usr/lib\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../../..\n'
'top_srcdir = ../../..\n'
'subdir = modules/printbackends/file\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(noinst_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS =\n'
'# conftrol variables end here\n'
'-include ../../../config.mk\n'
'-include ../../../config.mk\n'
'\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
'am__DEPENDENCIES_1 =\n'
'libprintbackend_file_la_DEPENDENCIES =  \\\n\t$(top_builddir)/gtk/$(gtktargetlib) \\\n\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
'am_libprintbackend_file_la_OBJECTS =  \\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
'libprintbackend_file_la_OBJECTS =  \\\n\t$(am_libprintbackend_file_la_OBJECTS)\n'
'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'HEADERS = $(noinst_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'EXTRA_DIST =\n'
'TEST_PROGS =\n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
'backend_LTLIBRARIES = libprintbackend-file.la\n'
'libprintbackend_file_la_SOURCES = \\\n\tgtkprintbackendfile.c\n'
'\n'
'libprintbackend_file_la_CPPFLAGS = \\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n\n'
'libprintbackend_file_la_CFLAGS = \\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n\n'
'libprintbackend_file_la_LDFLAGS = \\\n\t-avoid-version -module $(no_undefined)\n'
'\n'
'libprintbackend_file_la_LIBADD = \\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)\n'
'\n'
'noinst_HEADERS = \\\n\tgtkprintbackendfile.h\n'
'\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .o .obj\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tlist2=; for p in $$list; do \\\n'
'\t  if test -f $$p; then \\\n'
'\t    list2="$$list2 $$p"; \\\n'
'\t  else :; fi; \\\n'
'\tdone; \\\n'
'\ttest -z "$$list2" || { \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
'\t}\n'
'\n'
'uninstall-backendLTLIBRARIES:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tfor p in $$list; do \\\n'
'\t  $(am__strip_dir) \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
'\tdone\n'
'\n'
'clean-backendLTLIBRARIES:\n'
'\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
"\t@list='$(backend_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
'\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no\n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes\n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
"#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
"\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-local\n'
'check: check-am\n'
'all-am: $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n\tmostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'install-data-am: install-backendLTLIBRARIES\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'install-man:\n'
'\n'
'installcheck-am:\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'uninstall-am: uninstall-backendLTLIBRARIES\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags distdir html html-am \\\n\tinstall install-am install-backendLTLIBRARIES install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-man \\\n\tinstall-strip installcheck \\\n\tinstallcheck-am installdirs \\\n\tmostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool \\\n\ttags tags-am uninstall uninstall-am \\\n\tuninstall-backendLTLIBRARIES\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: definitions: {'GTK_BINARY_VERSION': '2.10.0', 'CC': 'gcc', 'CFLAGS': '-g -O2 -Wall', 'CPPFLAGS': '-DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES', 'LDFLAGS': '', 'LIBS': '', 'OBJEXT': 'o', 'srcdir': '.', 'libdir': '/usr/lib', 'NORMAL_INSTALL': ':', 'NORMAL_UNINSTALL': ':', 'top_builddir': '../../..', 'top_srcdir': '../../..', 'subdir': 'modules/printbackends/file', 'SHELL': '/bin/sh', 'DIST_COMMON': '$(noinst_HEADERS) $(am__DIST_COMMON)', 'DISTFILES': '$(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)', 'SOURCES': '$(libprintbackend_file_la_SOURCES)', 'DIST_SOURCES': '$(libprintbackend_file_la_SOURCES)', 'LIBTOOL': 'libtool # $(SHELL) $(top_builddir)/libtool', 'CYGPATH_W': 'echo', 'CONFIG_CLEAN_VPATH_FILES': '', 'am__strip_dir': "f=`echo $$p | sed -e 's|^.*/||'`;", 'LTLIBRARIES': '$(backend_LTLIBRARIES)', 'am__DEPENDENCIES_1': '', 'libprintbackend_file_la_DEPENDENCIES': '\\\n\t$(top_builddir)/gtk/$(gtktargetlib) $(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)', 'am_libprintbackend_file_la_OBJECTS': '\\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo', 'libprintbackend_file_la_OBJECTS': '\\\n\t$(am_libprintbackend_file_la_OBJECTS)', 'libprintbackend_file_la_LINK': '$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=link $(CC) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) $(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@', 'DEFAULT_INCLUDES': '-I. -I$(top_builddir)', 'COMPILE': '$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)', 'LTCOMPILE': '$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)', 'HEADERS': '$(noinst_HEADERS)', 'am__tagged_files': '$(HEADERS) $(SOURCES) $(TAGS_FILES)', 'am__uniquify_input': "awk '\\\n BEGIN { nonempty = 0; } { items[$$0] = 1; nonempty = 1; } END { if (nonempty) { for (i in items) print i; }; } '", 'am__define_uniq_tagged_files': '\\\n list=\'$(am__tagged_files)\'; unique=`for i in $$list; do if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; done | $(am__uniquify_input)`', 'am__DIST_COMMON': '$(top_srcdir)/Makefile.decl $(top_srcdir)/depcomp', 'GTK_DEP_CFLAGS': '-I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1', 'GTK_DEP_LIBS': '-lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm', 'gdktarget': 'x11', 'gdktargetlib': 'libgdk-x11-2.0.la', 'gtktargetlib': 'libgtk-x11-2.0.la', 'GTESTER': 'gtester\t\t# in $PATH for non-GLIB packages', 'GTESTER_REPORT': 'gtester-report\t\t# in $PATH for non-GLIB packages', 'EXTRA_DIST': '', 'TEST_PROGS': '', 'XVFB': 'Xvfb -ac -noreset -screen 0 800x600x16', 'XIDS': '101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 9995 9996 9997 9998 9999', 'SKIP_GDKTARGET': '\\\n\ttest "$(gdktarget)" != "x11" && echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."', 'XVFB_START': '\\\n\t${XVFB} -help 2>/dev/null 1>&2 && XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` && { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } || { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } && DISPLAY=:$$XID && export DISPLAY', 'backenddir': '$(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends', 'backend_LTLIBRARIES': 'libprintbackend-file.la', 'libprintbackend_file_la_SOURCES': '\\\n\tgtkprintbackendfile.c', 'libprintbackend_file_la_CPPFLAGS': '\\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\', 'libprintbackend_file_la_CFLAGS': '\\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\', 'libprintbackend_file_la_LDFLAGS': '\\\n\t-avoid-version -module $(no_undefined)', 'libprintbackend_file_la_LIBADD': '\\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)', 'noinst_HEADERS': '\\\n\tgtkprintbackendfile.h'}
DEBUG: After dealiasing pass pass:
'# Identification\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES\n'
'LDFLAGS =\n'
'LIBS =\n'
'# Platform\n'
'OBJEXT = o\n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'libdir = /usr/lib\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../../..\n'
'top_srcdir = ../../..\n'
'subdir = modules/printbackends/file\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(noinst_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'DIST_SOURCES = $(libprintbackend_file_la_SOURCES)\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS =\n'
'# conftrol variables end here\n'
'-include ../../../config.mk\n'
'-include ../../../config.mk\n'
'\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'LTLIBRARIES = $(backend_LTLIBRARIES)\n'
'am__DEPENDENCIES_1 =\n'
'libprintbackend_file_la_DEPENDENCIES =  \\\n\t$(top_builddir)/gtk/$(gtktargetlib) \\\n\t$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)\n'
'am_libprintbackend_file_la_OBJECTS =  \\\n\tlibprintbackend_file_la-gtkprintbackendfile.lo\n'
'libprintbackend_file_la_OBJECTS =  \\\n\t$(am_libprintbackend_file_la_OBJECTS)\n'
'libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \\\n\t $(LIBTOOLFLAGS) --mode=link $(CC) \\\n\t$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \\\n\t$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'HEADERS = $(noinst_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'EXTRA_DIST =\n'
'TEST_PROGS =\n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends\n'
'backend_LTLIBRARIES = libprintbackend-file.la\n'
'libprintbackend_file_la_SOURCES = \\\n\tgtkprintbackendfile.c\n'
'\n'
'libprintbackend_file_la_CPPFLAGS = \\\n\t-I$(top_srcdir) \t\t\t\t\\\n\t-I$(top_srcdir)/gtk\t\t\t\t\\\n\t-I$(top_builddir)/gtk\t\t\t\t\\\n\t-I$(top_srcdir)/gdk\t\t\t\t\\\n\t-I$(top_builddir)/gdk\t\t\t\t\\\n\t-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED\t\t\\\n\n'
'libprintbackend_file_la_CFLAGS = \\\n\t$(GTK_DEP_CFLAGS)\t\t\t\t\\\n\n'
'libprintbackend_file_la_LDFLAGS = \\\n\t-avoid-version -module $(no_undefined)\n'
'\n'
'libprintbackend_file_la_LIBADD = \\\n\t$(top_builddir)/gtk/$(gtktargetlib)\t\t\\\n\t$(top_builddir)/gdk/$(gdktargetlib)\t\t\\\n\t$(GTK_DEP_LIBS)\n'
'\n'
'noinst_HEADERS = \\\n\tgtkprintbackendfile.h\n'
'\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .o .obj\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'install-backendLTLIBRARIES: $(backend_LTLIBRARIES)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tlist2=; for p in $$list; do \\\n'
'\t  if test -f $$p; then \\\n'
'\t    list2="$$list2 $$p"; \\\n'
'\t  else :; fi; \\\n'
'\tdone; \\\n'
'\ttest -z "$$list2" || { \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 \'$(DESTDIR)$(backenddir)\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \\\n'
'\t}\n'
'\n'
'uninstall-backendLTLIBRARIES:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(backend_LTLIBRARIES)\'; test -n "$(backenddir)" || list=; \\\n'
'\tfor p in $$list; do \\\n'
'\t  $(am__strip_dir) \\\n'
'\t  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f \'$(DESTDIR)$(backenddir)/$$f\'"; \\\n'
'\t  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \\\n'
'\tdone\n'
'\n'
'clean-backendLTLIBRARIES:\n'
'\t-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)\n'
"\t@list='$(backend_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)\n'
'\t$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no\n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes\n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c\n'
"#\tsource='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes\n"
"\t$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c\n"
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-local\n'
'check: check-am\n'
'all-am: $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(backenddir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \\\n\tmostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'install-data-am: install-backendLTLIBRARIES\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'install-man:\n'
'\n'
'installcheck-am:\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'uninstall-am: uninstall-backendLTLIBRARIES\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-am \\\n\tcheck-local clean clean-backendLTLIBRARIES clean-generic \\\n\tclean-libtool cscopelist-am ctags ctags-am distclean \\\n\tdistclean-compile distclean-generic distclean-libtool \\\n\tdistclean-tags distdir html html-am \\\n\tinstall install-am install-backendLTLIBRARIES install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-man \\\n\tinstall-strip installcheck \\\n\tinstallcheck-am installdirs \\\n\tmostlyclean mostlyclean-compile \\\n\tmostlyclean-generic mostlyclean-libtool \\\n\ttags tags-am uninstall uninstall-am \\\n\tuninstall-backendLTLIBRARIES\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: subdir=True, skipped stub removal,
DEBUG: Output follows:
# Identification
GTK_BINARY_VERSION = 2.10.0
# Compilation flags
CC = gcc
CFLAGS = -g -O2 -Wall
CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES
LDFLAGS =
LIBS =
# Platform
OBJEXT = o
# Cross-build
srcdir = .
# # Installation directories
libdir = /usr/lib
# Installation hooks
NORMAL_INSTALL = :
NORMAL_UNINSTALL = :
# Location
top_builddir = ../../..
top_srcdir = ../../..
subdir = modules/printbackends/file
# Internals (not configuration variables)
SHELL = /bin/sh
DIST_COMMON = $(noinst_HEADERS) \
	$(am__DIST_COMMON)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)
SOURCES = $(libprintbackend_file_la_SOURCES)
DIST_SOURCES = $(libprintbackend_file_la_SOURCES)
LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool
CYGPATH_W = echo
LIBS =
# conftrol variables end here
-include ../../../config.mk
-include ../../../config.mk

CONFIG_CLEAN_VPATH_FILES =
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
LTLIBRARIES = $(backend_LTLIBRARIES)
am__DEPENDENCIES_1 =
libprintbackend_file_la_DEPENDENCIES =  \
	$(top_builddir)/gtk/$(gtktargetlib) \
	$(top_builddir)/gdk/$(gdktargetlib) $(am__DEPENDENCIES_1)
am_libprintbackend_file_la_OBJECTS =  \
	libprintbackend_file_la-gtkprintbackendfile.lo
libprintbackend_file_la_OBJECTS =  \
	$(am_libprintbackend_file_la_OBJECTS)
libprintbackend_file_la_LINK = $(LIBTOOL) --tag=CC \
	 $(LIBTOOLFLAGS) --mode=link $(CC) \
	$(libprintbackend_file_la_CFLAGS) $(CFLAGS) \
	$(libprintbackend_file_la_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I. -I$(top_builddir)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(CPPFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \
	 $(CFLAGS)
HEADERS = $(noinst_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = awk '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__DIST_COMMON = $(top_srcdir)/Makefile.decl \
	$(top_srcdir)/depcomp
GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1
GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm
gdktarget = x11
gdktargetlib = libgdk-x11-2.0.la
gtktargetlib = libgtk-x11-2.0.la
GTESTER = gtester		# in $PATH for non-GLIB packages
GTESTER_REPORT = gtester-report		# in $PATH for non-GLIB packages

# initialize variables for unconditional += appending
EXTRA_DIST =
TEST_PROGS =

# Xvfb based test rules
XVFB = Xvfb -ac -noreset -screen 0 800x600x16
XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \
   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \
   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \
  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \
  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \
  9995 9996 9997 9998 9999

SKIP_GDKTARGET = \
	test "$(gdktarget)" != "x11" \
	&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."

XVFB_START = \
	${XVFB} -help 2>/dev/null 1>&2 \
	&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \
	&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \
	       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \
	|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \
	&& DISPLAY=:$$XID && export DISPLAY

backenddir = $(libdir)/gtk-2.0/$(GTK_BINARY_VERSION)/printbackends
backend_LTLIBRARIES = libprintbackend-file.la
libprintbackend_file_la_SOURCES = \
	gtkprintbackendfile.c

libprintbackend_file_la_CPPFLAGS = \
	-I$(top_srcdir) 				\
	-I$(top_srcdir)/gtk				\
	-I$(top_builddir)/gtk				\
	-I$(top_srcdir)/gdk				\
	-I$(top_builddir)/gdk				\
	-DGTK_PRINT_BACKEND_ENABLE_UNSUPPORTED		\
libprintbackend_file_la_CFLAGS = \
	$(GTK_DEP_CFLAGS)				\
libprintbackend_file_la_LDFLAGS = \
	-avoid-version -module $(no_undefined)

libprintbackend_file_la_LIBADD = \
	$(top_builddir)/gtk/$(gtktargetlib)		\
	$(top_builddir)/gdk/$(gdktargetlib)		\
	$(GTK_DEP_LIBS)

noinst_HEADERS = \
	gtkprintbackendfile.h

all: all-am

.SUFFIXES: .c .lo .o .obj
$(top_srcdir)/Makefile.decl $(am__empty):

install-backendLTLIBRARIES: $(backend_LTLIBRARIES)
	@$(NORMAL_INSTALL)
	@list='$(backend_LTLIBRARIES)'; test -n "$(backenddir)" || list=; \
	list2=; for p in $$list; do \
	  if test -f $$p; then \
	    list2="$$list2 $$p"; \
	  else :; fi; \
	done; \
	test -z "$$list2" || { \
	  echo " mkdir -p '$(DESTDIR)$(backenddir)'"; \
	  mkdir -p "$(DESTDIR)$(backenddir)" || exit 1; \
	  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 '$(DESTDIR)$(backenddir)'"; \
	  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=install install -c $(INSTALL_STRIP_FLAG) $$list2 "$(DESTDIR)$(backenddir)"; \
	}

uninstall-backendLTLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(backend_LTLIBRARIES)'; test -n "$(backenddir)" || list=; \
	for p in $$list; do \
	  $(am__strip_dir) \
	  echo " $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f '$(DESTDIR)$(backenddir)/$$f'"; \
	  $(LIBTOOL) $(LIBTOOLFLAGS) --mode=uninstall rm -f "$(DESTDIR)$(backenddir)/$$f"; \
	done

clean-backendLTLIBRARIES:
	-test -z "$(backend_LTLIBRARIES)" || rm -f $(backend_LTLIBRARIES)
	@list='$(backend_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libprintbackend-file.la: $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_DEPENDENCIES) $(EXTRA_libprintbackend_file_la_DEPENDENCIES)
	$(libprintbackend_file_la_LINK) -rpath $(backenddir) $(libprintbackend_file_la_OBJECTS) $(libprintbackend_file_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.$(OBJEXT):
#	$(COMPILE) -c -o $@ $<

.c.obj:
#	source='$<' object='$@' libtool=no
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	source='$<' object='$@' libtool=yes
	$(LTCOMPILE) -c -o $@ $<

libprintbackend_file_la-gtkprintbackendfile.lo: gtkprintbackendfile.c
#	source='gtkprintbackendfile.c' object='libprintbackend_file_la-gtkprintbackendfile.lo' libtool=yes
	$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libprintbackend_file_la_CPPFLAGS) $(CPPFLAGS) $(libprintbackend_file_la_CFLAGS) $(CFLAGS) -c -o libprintbackend_file_la-gtkprintbackendfile.lo `test -f 'gtkprintbackendfile.c' || echo '$(srcdir)/'`gtkprintbackendfile.c

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`cd >/dev/null $(top_builddir) && pwd` \
	  && cd >/dev/null $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags
distdir: $(BUILT_SOURCES)
	$(MAKE) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) mkdir -p `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) check-local
check: check-am
all-am: $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(backenddir)"; do \
	  test -z "$$dir" || mkdir -p "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z 'strip'; then \
	  $(MAKE) INSTALL_PROGRAM="install -c -s" \
	    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) INSTALL_PROGRAM="install -c -s" \
	    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='strip'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

clean: clean-am

clean-am: clean-backendLTLIBRARIES clean-generic clean-libtool \
	mostlyclean-am

distclean: distclean-am
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

html: html-am

html-am:

install-data-am: install-backendLTLIBRARIES

install-exec-am:

install-html: install-html-am

install-html-am:

install-man:

installcheck-am:

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-backendLTLIBRARIES

.PHONY: CTAGS GTAGS TAGS all all-am check check-am \
	check-local clean clean-backendLTLIBRARIES clean-generic \
	clean-libtool cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir html html-am \
	install install-am install-backendLTLIBRARIES install-data \
	install-data-am install-exec \
	install-exec-am install-html install-html-am \
	install-man \
	install-strip installcheck \
	installcheck-am installdirs \
	mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool \
	tags tags-am uninstall uninstall-am \
	uninstall-backendLTLIBRARIES

# call as: $(XVFB_START) && someprogram

# test: run all tests in cwd and subdirs
test: test-cwd test-recurse
# test-cwd: run tests in cwd
test-cwd: ${TEST_PROGS}
	@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \
	}
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	    case $@ in \
	    test-report) test_options="-k";; \
	    perf-report) test_options="-k -m=perf";; \
	    full-report) test_options="-k -m=perf -m=slow";; \
	    esac ; \
	    $(XVFB_START) && { \
	      set -e; \
	      if test -z "$$GTESTER_LOGDIR" ; then \
	        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	      elif test -n "${TEST_PROGS}" ; then \
	        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	      fi ; \
	    }; \
	  }; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-cwd test-recurse test-report perf-report full-report
# run make test-cwd as part of make check
check-local: test-cwd

-include $(top_srcdir)/git.mk

