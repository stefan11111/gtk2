DEBUG: set  '' ground -> ground
DEBUG: line '# Makefile.in generated by automake 1.16.5 from Makefile.am.\n'
DEBUG: line '# gdk/x11/Makefile.  Generated from Makefile.in by configure.\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# Copyright (C) 1994-2021 Free Software Foundation, Inc.\n'
DEBUG: set  '# Copyright (C) 1994-2021 Free Software Foundation, Inc.\n' ground -> copyright
DEBUG: line '\n'
DEBUG: line '# This Makefile.in is free software; the Free Software Foundation\n'
DEBUG: line '# gives unlimited permission to copy and/or distribute it,\n'
DEBUG: line '# with or without modifications, as long as this notice is preserved.\n'
DEBUG: line '\n'
DEBUG: line '# This program is distributed in the hope that it will be useful,\n'
DEBUG: line '# but WITHOUT ANY WARRANTY, to the extent permitted by law; without\n'
DEBUG: line '# even the implied warranty of MERCHANTABILITY or FITNESS FOR A\n'
DEBUG: line '# PARTICULAR PURPOSE.\n'
DEBUG: line '\n'
DEBUG: line '\n'
DEBUG: line '\n'
DEBUG: line '# GTK+ - The GIMP Toolkit\n'
DEBUG: line '\n'
DEBUG: line '\n'
DEBUG: line '\n'
DEBUG: line '\n'
DEBUG: line 'am__is_gnu_make = { \\\n'
DEBUG: set  'am__is_gnu_make = { \\\n' copyright -> ground
DEBUG: push 'am__is_gnu_make = { \\\n'
DEBUG: line 'am__is_gnu_make = { \\\n'
DEBUG: set  'am__is_gnu_make = { \\\n' ground -> multidef
DEBUG: keep 'am__is_gnu_make = { \\\n'
DEBUG: line "  if test -z '$(MAKELEVEL)'; then \\\n"
DEBUG: add  "  if test -z '$(MAKELEVEL)'; then \\\n"
DEBUG: line '    false; \\\n'
DEBUG: add  '    false; \\\n'
DEBUG: line "  elif test -n '$(MAKE_HOST)'; then \\\n"
DEBUG: add  "  elif test -n '$(MAKE_HOST)'; then \\\n"
DEBUG: line '    true; \\\n'
DEBUG: add  '    true; \\\n'
DEBUG: line "  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n"
DEBUG: add  "  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n"
DEBUG: line '    true; \\\n'
DEBUG: add  '    true; \\\n'
DEBUG: line '  else \\\n'
DEBUG: add  '  else \\\n'
DEBUG: line '    false; \\\n'
DEBUG: add  '    false; \\\n'
DEBUG: line '  fi; \\\n'
DEBUG: add  '  fi; \\\n'
DEBUG: line '}\n'
DEBUG: add  '}\n'
DEBUG: set  '}\n' multidef -> ground
DEBUG: line 'am__make_running_with_option = \\\n'
DEBUG: set  'am__make_running_with_option = \\\n' ground -> multidef
DEBUG: keep 'am__make_running_with_option = \\\n'
DEBUG: line '  case $${target_option-} in \\\n'
DEBUG: add  '  case $${target_option-} in \\\n'
DEBUG: line '      ?) ;; \\\n'
DEBUG: add  '      ?) ;; \\\n'
DEBUG: line '      *) echo "am__make_running_with_option: internal error: invalid" \\\n'
DEBUG: add  '      *) echo "am__make_running_with_option: internal error: invalid" \\\n'
DEBUG: line '              "target option \'$${target_option-}\' specified" >&2; \\\n'
DEBUG: add  '              "target option \'$${target_option-}\' specified" >&2; \\\n'
DEBUG: line '         exit 1;; \\\n'
DEBUG: add  '         exit 1;; \\\n'
DEBUG: line '  esac; \\\n'
DEBUG: add  '  esac; \\\n'
DEBUG: line '  has_opt=no; \\\n'
DEBUG: add  '  has_opt=no; \\\n'
DEBUG: line '  sane_makeflags=$$MAKEFLAGS; \\\n'
DEBUG: add  '  sane_makeflags=$$MAKEFLAGS; \\\n'
DEBUG: line '  if $(am__is_gnu_make); then \\\n'
DEBUG: add  '  if $(am__is_gnu_make); then \\\n'
DEBUG: line '    sane_makeflags=$$MFLAGS; \\\n'
DEBUG: add  '    sane_makeflags=$$MFLAGS; \\\n'
DEBUG: line '  else \\\n'
DEBUG: add  '  else \\\n'
DEBUG: line '    case $$MAKEFLAGS in \\\n'
DEBUG: add  '    case $$MAKEFLAGS in \\\n'
DEBUG: line '      *\\\\[\\ \\\t]*) \\\n'
DEBUG: add  '      *\\\\[\\ \\\t]*) \\\n'
DEBUG: line '        bs=\\\\; \\\n'
DEBUG: add  '        bs=\\\\; \\\n'
DEBUG: line '        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n'
DEBUG: add  '        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n'
DEBUG: line '          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n'
DEBUG: add  '          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n'
DEBUG: line '    esac; \\\n'
DEBUG: add  '    esac; \\\n'
DEBUG: line '  fi; \\\n'
DEBUG: add  '  fi; \\\n'
DEBUG: line '  skip_next=no; \\\n'
DEBUG: add  '  skip_next=no; \\\n'
DEBUG: line '  strip_trailopt () \\\n'
DEBUG: add  '  strip_trailopt () \\\n'
DEBUG: line '  { \\\n'
DEBUG: add  '  { \\\n'
DEBUG: line '    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n'
DEBUG: add  '    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n'
DEBUG: line '  }; \\\n'
DEBUG: add  '  }; \\\n'
DEBUG: line '  for flg in $$sane_makeflags; do \\\n'
DEBUG: add  '  for flg in $$sane_makeflags; do \\\n'
DEBUG: line '    test $$skip_next = yes && { skip_next=no; continue; }; \\\n'
DEBUG: add  '    test $$skip_next = yes && { skip_next=no; continue; }; \\\n'
DEBUG: line '    case $$flg in \\\n'
DEBUG: add  '    case $$flg in \\\n'
DEBUG: line '      *=*|--*) continue;; \\\n'
DEBUG: add  '      *=*|--*) continue;; \\\n'
DEBUG: line "        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n"
DEBUG: add  "        -*I) strip_trailopt 'I'; skip_next=yes;; \\\n"
DEBUG: line "      -*I?*) strip_trailopt 'I';; \\\n"
DEBUG: add  "      -*I?*) strip_trailopt 'I';; \\\n"
DEBUG: line "        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n"
DEBUG: add  "        -*O) strip_trailopt 'O'; skip_next=yes;; \\\n"
DEBUG: line "      -*O?*) strip_trailopt 'O';; \\\n"
DEBUG: add  "      -*O?*) strip_trailopt 'O';; \\\n"
DEBUG: line "        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n"
DEBUG: add  "        -*l) strip_trailopt 'l'; skip_next=yes;; \\\n"
DEBUG: line "      -*l?*) strip_trailopt 'l';; \\\n"
DEBUG: add  "      -*l?*) strip_trailopt 'l';; \\\n"
DEBUG: line '      -[dEDm]) skip_next=yes;; \\\n'
DEBUG: add  '      -[dEDm]) skip_next=yes;; \\\n'
DEBUG: line '      -[JT]) skip_next=yes;; \\\n'
DEBUG: add  '      -[JT]) skip_next=yes;; \\\n'
DEBUG: line '    esac; \\\n'
DEBUG: add  '    esac; \\\n'
DEBUG: line '    case $$flg in \\\n'
DEBUG: add  '    case $$flg in \\\n'
DEBUG: line '      *$$target_option*) has_opt=yes; break;; \\\n'
DEBUG: add  '      *$$target_option*) has_opt=yes; break;; \\\n'
DEBUG: line '    esac; \\\n'
DEBUG: add  '    esac; \\\n'
DEBUG: line '  done; \\\n'
DEBUG: add  '  done; \\\n'
DEBUG: line '  test $$has_opt = yes\n'
DEBUG: add  '  test $$has_opt = yes\n'
DEBUG: set  '  test $$has_opt = yes\n' multidef -> ground
DEBUG: line 'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
DEBUG: keep 'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
DEBUG: line 'am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n'
DEBUG: keep 'am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n'
DEBUG: line 'pkgdatadir = $(datadir)/gtk+\n'
DEBUG: keep 'pkgdatadir = $(datadir)/gtk+\n'
DEBUG: line 'pkgincludedir = $(includedir)/gtk+\n'
DEBUG: keep 'pkgincludedir = $(includedir)/gtk+\n'
DEBUG: line 'pkglibdir = $(libdir)/gtk+\n'
DEBUG: keep 'pkglibdir = $(libdir)/gtk+\n'
DEBUG: line 'pkglibexecdir = $(libexecdir)/gtk+\n'
DEBUG: keep 'pkglibexecdir = $(libexecdir)/gtk+\n'
DEBUG: line 'am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd\n'
DEBUG: keep 'am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd\n'
DEBUG: line 'install_sh_DATA = $(install_sh) -c -m 644\n'
DEBUG: keep 'install_sh_DATA = $(install_sh) -c -m 644\n'
DEBUG: line 'install_sh_PROGRAM = $(install_sh) -c\n'
DEBUG: keep 'install_sh_PROGRAM = $(install_sh) -c\n'
DEBUG: line 'install_sh_SCRIPT = $(install_sh) -c\n'
DEBUG: keep 'install_sh_SCRIPT = $(install_sh) -c\n'
DEBUG: line 'INSTALL_HEADER = $(INSTALL_DATA)\n'
DEBUG: keep 'INSTALL_HEADER = $(INSTALL_DATA)\n'
DEBUG: line 'transform = $(program_transform_name)\n'
DEBUG: keep 'transform = $(program_transform_name)\n'
DEBUG: line 'NORMAL_INSTALL = :\n'
DEBUG: keep 'NORMAL_INSTALL = :\n'
DEBUG: line 'PRE_INSTALL = :\n'
DEBUG: keep 'PRE_INSTALL = :\n'
DEBUG: line 'POST_INSTALL = :\n'
DEBUG: keep 'POST_INSTALL = :\n'
DEBUG: line 'NORMAL_UNINSTALL = :\n'
DEBUG: keep 'NORMAL_UNINSTALL = :\n'
DEBUG: line 'PRE_UNINSTALL = :\n'
DEBUG: keep 'PRE_UNINSTALL = :\n'
DEBUG: line 'POST_UNINSTALL = :\n'
DEBUG: keep 'POST_UNINSTALL = :\n'
DEBUG: line 'build_triplet = i686-pc-linux-gnu\n'
DEBUG: keep 'build_triplet = i686-pc-linux-gnu\n'
DEBUG: line 'host_triplet = i686-pc-linux-gnu\n'
DEBUG: keep 'host_triplet = i686-pc-linux-gnu\n'
DEBUG: line '#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
DEBUG: keep '#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
DEBUG: line 'am__append_2 = gdkinput-none.c\n'
DEBUG: keep 'am__append_2 = gdkinput-none.c\n'
DEBUG: line 'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
DEBUG: keep 'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
DEBUG: line 'TESTS = checksettings$(EXEEXT)\n'
DEBUG: keep 'TESTS = checksettings$(EXEEXT)\n'
DEBUG: line 'subdir = gdk/x11\n'
DEBUG: keep 'subdir = gdk/x11\n'
DEBUG: line 'ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n'
DEBUG: keep 'ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n'
DEBUG: line 'am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \\\n'
DEBUG: set  'am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \\\n' ground -> multidef
DEBUG: keep 'am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \\\n'
DEBUG: line '\t$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \\\n'
DEBUG: add  '\t$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \\\n'
DEBUG: line '\t$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \\\n'
DEBUG: add  '\t$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \\\n'
DEBUG: line '\t$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n'
DEBUG: add  '\t$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n'
DEBUG: line '\t$(top_srcdir)/configure.ac\n'
DEBUG: add  '\t$(top_srcdir)/configure.ac\n'
DEBUG: set  '\t$(top_srcdir)/configure.ac\n' multidef -> ground
DEBUG: line 'am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n'
DEBUG: set  'am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n' ground -> multidef
DEBUG: keep 'am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n'
DEBUG: line '\t$(ACLOCAL_M4)\n'
DEBUG: add  '\t$(ACLOCAL_M4)\n'
DEBUG: set  '\t$(ACLOCAL_M4)\n' multidef -> ground
DEBUG: line 'DIST_COMMON = $(srcdir)/Makefile.am $(libgdkinclude_HEADERS) \\\n'
DEBUG: set  'DIST_COMMON = $(srcdir)/Makefile.am $(libgdkinclude_HEADERS) \\\n' ground -> multidef
DEBUG: keep 'DIST_COMMON = $(srcdir)/Makefile.am $(libgdkinclude_HEADERS) \\\n'
DEBUG: line '\t$(am__DIST_COMMON)\n'
DEBUG: add  '\t$(am__DIST_COMMON)\n'
DEBUG: set  '\t$(am__DIST_COMMON)\n' multidef -> ground
DEBUG: line 'mkinstalldirs = $(install_sh) -d\n'
DEBUG: keep 'mkinstalldirs = $(install_sh) -d\n'
DEBUG: line 'CONFIG_HEADER = $(top_builddir)/config.h\n'
DEBUG: keep 'CONFIG_HEADER = $(top_builddir)/config.h\n'
DEBUG: line 'CONFIG_CLEAN_FILES =\n'
DEBUG: keep 'CONFIG_CLEAN_FILES =\n'
DEBUG: line 'CONFIG_CLEAN_VPATH_FILES =\n'
DEBUG: keep 'CONFIG_CLEAN_VPATH_FILES =\n'
DEBUG: line 'PROGRAMS = $(noinst_PROGRAMS)\n'
DEBUG: keep 'PROGRAMS = $(noinst_PROGRAMS)\n'
DEBUG: line 'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
DEBUG: keep 'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
DEBUG: line 'libgdk_x11_la_LIBADD =\n'
DEBUG: keep 'libgdk_x11_la_LIBADD =\n'
DEBUG: line 'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n'
DEBUG: set  'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n' ground -> multidef
DEBUG: keep 'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n'
DEBUG: line '\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n'
DEBUG: add  '\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n'
DEBUG: line '\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n'
DEBUG: add  '\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n'
DEBUG: line '\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n'
DEBUG: add  '\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n'
DEBUG: line '\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n'
DEBUG: add  '\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n'
DEBUG: line '\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n'
DEBUG: add  '\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n'
DEBUG: line '\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n'
DEBUG: add  '\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n'
DEBUG: line '\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n'
DEBUG: add  '\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n'
DEBUG: line '\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n'
DEBUG: add  '\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n'
DEBUG: line '\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n'
DEBUG: add  '\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n'
DEBUG: line '\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n'
DEBUG: add  '\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n'
DEBUG: line '\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n'
DEBUG: add  '\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n'
DEBUG: line '\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n'
DEBUG: add  '\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n'
DEBUG: line '\tgdkinput-xfree.c gdkinput-none.c\n'
DEBUG: add  '\tgdkinput-xfree.c gdkinput-none.c\n'
DEBUG: set  '\tgdkinput-xfree.c gdkinput-none.c\n' multidef -> ground
DEBUG: line '#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
DEBUG: keep '#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
DEBUG: line 'am__objects_2 = gdkinput-none.lo\n'
DEBUG: keep 'am__objects_2 = gdkinput-none.lo\n'
DEBUG: line 'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n'
DEBUG: set  'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n' ground -> multidef
DEBUG: keep 'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n'
DEBUG: line '\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n'
DEBUG: add  '\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n'
DEBUG: line '\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n'
DEBUG: add  '\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n'
DEBUG: line '\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n'
DEBUG: add  '\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n'
DEBUG: line '\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n'
DEBUG: add  '\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n'
DEBUG: line '\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n'
DEBUG: add  '\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n'
DEBUG: line '\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n'
DEBUG: add  '\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n'
DEBUG: line '\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n'
DEBUG: add  '\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n'
DEBUG: line '\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n'
DEBUG: add  '\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n'
DEBUG: line '\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n'
DEBUG: add  '\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n'
DEBUG: line '\t$(am__objects_2)\n'
DEBUG: add  '\t$(am__objects_2)\n'
DEBUG: set  '\t$(am__objects_2)\n' multidef -> ground
DEBUG: line 'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
DEBUG: keep 'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
DEBUG: line 'AM_V_lt = $(am__v_lt_$(V))\n'
DEBUG: keep 'AM_V_lt = $(am__v_lt_$(V))\n'
DEBUG: line 'am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: keep 'am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: line 'am__v_lt_0 = --silent\n'
DEBUG: keep 'am__v_lt_0 = --silent\n'
DEBUG: line 'am__v_lt_1 = \n'
DEBUG: keep 'am__v_lt_1 = \n'
DEBUG: line 'checksettings_SOURCES = checksettings.c\n'
DEBUG: keep 'checksettings_SOURCES = checksettings.c\n'
DEBUG: line 'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
DEBUG: keep 'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
DEBUG: line 'am__DEPENDENCIES_1 =\n'
DEBUG: keep 'am__DEPENDENCIES_1 =\n'
DEBUG: line 'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
DEBUG: keep 'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
DEBUG: line 'AM_V_P = $(am__v_P_$(V))\n'
DEBUG: keep 'AM_V_P = $(am__v_P_$(V))\n'
DEBUG: line 'am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: keep 'am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: line 'am__v_P_0 = false\n'
DEBUG: keep 'am__v_P_0 = false\n'
DEBUG: line 'am__v_P_1 = :\n'
DEBUG: keep 'am__v_P_1 = :\n'
DEBUG: line 'AM_V_GEN = $(am__v_GEN_$(V))\n'
DEBUG: keep 'AM_V_GEN = $(am__v_GEN_$(V))\n'
DEBUG: line 'am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: keep 'am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: line 'am__v_GEN_0 = @echo "  GEN     " $@;\n'
DEBUG: keep 'am__v_GEN_0 = @echo "  GEN     " $@;\n'
DEBUG: line 'am__v_GEN_1 = \n'
DEBUG: keep 'am__v_GEN_1 = \n'
DEBUG: line 'AM_V_at = $(am__v_at_$(V))\n'
DEBUG: keep 'AM_V_at = $(am__v_at_$(V))\n'
DEBUG: line 'am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: keep 'am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: line 'am__v_at_0 = @\n'
DEBUG: keep 'am__v_at_0 = @\n'
DEBUG: line 'am__v_at_1 = \n'
DEBUG: keep 'am__v_at_1 = \n'
DEBUG: line 'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
DEBUG: keep 'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
DEBUG: line 'depcomp = $(SHELL) $(top_srcdir)/depcomp\n'
DEBUG: line 'am__maybe_remake_depfiles = depfiles\n'
DEBUG: keep 'am__maybe_remake_depfiles = depfiles\n'
DEBUG: line 'am__depfiles_remade = ./$(DEPDIR)/checksettings.Po \\\n'
DEBUG: set  'am__depfiles_remade = ./$(DEPDIR)/checksettings.Po \\\n' ground -> multidef
DEBUG: keep 'am__depfiles_remade = ./$(DEPDIR)/checksettings.Po \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkapplaunchcontext-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkapplaunchcontext-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkasync.Plo ./$(DEPDIR)/gdkcolor-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkasync.Plo ./$(DEPDIR)/gdkcolor-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkcursor-x11.Plo ./$(DEPDIR)/gdkdisplay-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkcursor-x11.Plo ./$(DEPDIR)/gdkdisplay-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkdnd-x11.Plo ./$(DEPDIR)/gdkdrawable-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkdnd-x11.Plo ./$(DEPDIR)/gdkdrawable-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkevents-x11.Plo ./$(DEPDIR)/gdkfont-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkevents-x11.Plo ./$(DEPDIR)/gdkfont-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkgc-x11.Plo ./$(DEPDIR)/gdkgeometry-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkgc-x11.Plo ./$(DEPDIR)/gdkgeometry-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkglobals-x11.Plo ./$(DEPDIR)/gdkim-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkglobals-x11.Plo ./$(DEPDIR)/gdkim-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkimage-x11.Plo ./$(DEPDIR)/gdkinput-none.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkimage-x11.Plo ./$(DEPDIR)/gdkinput-none.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkinput-x11.Plo ./$(DEPDIR)/gdkinput-xfree.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkinput-x11.Plo ./$(DEPDIR)/gdkinput-xfree.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkinput.Plo ./$(DEPDIR)/gdkkeys-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkinput.Plo ./$(DEPDIR)/gdkkeys-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkmain-x11.Plo ./$(DEPDIR)/gdkpixmap-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkmain-x11.Plo ./$(DEPDIR)/gdkpixmap-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkproperty-x11.Plo ./$(DEPDIR)/gdkscreen-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkproperty-x11.Plo ./$(DEPDIR)/gdkscreen-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkselection-x11.Plo ./$(DEPDIR)/gdkspawn-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkselection-x11.Plo ./$(DEPDIR)/gdkspawn-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdktestutils-x11.Plo ./$(DEPDIR)/gdkvisual-x11.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdktestutils-x11.Plo ./$(DEPDIR)/gdkvisual-x11.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkwindow-x11.Plo ./$(DEPDIR)/gdkxftdefaults.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkwindow-x11.Plo ./$(DEPDIR)/gdkxftdefaults.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/gdkxid.Plo ./$(DEPDIR)/xsettings-client.Plo \\\n'
DEBUG: add  '\t./$(DEPDIR)/gdkxid.Plo ./$(DEPDIR)/xsettings-client.Plo \\\n'
DEBUG: line '\t./$(DEPDIR)/xsettings-common.Plo\n'
DEBUG: add  '\t./$(DEPDIR)/xsettings-common.Plo\n'
DEBUG: set  '\t./$(DEPDIR)/xsettings-common.Plo\n' multidef -> ground
DEBUG: line 'am__mv = mv -f\n'
DEBUG: keep 'am__mv = mv -f\n'
DEBUG: line 'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n'
DEBUG: set  'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n' ground -> multidef
DEBUG: keep 'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n'
DEBUG: line '\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n'
DEBUG: add  '\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n'
DEBUG: set  '\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n' multidef -> ground
DEBUG: line 'LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n'
DEBUG: set  'LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n' ground -> multidef
DEBUG: keep 'LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n'
DEBUG: line '\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n'
DEBUG: add  '\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n'
DEBUG: line '\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n'
DEBUG: add  '\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n'
DEBUG: line '\t$(AM_CFLAGS) $(CFLAGS)\n'
DEBUG: add  '\t$(AM_CFLAGS) $(CFLAGS)\n'
DEBUG: set  '\t$(AM_CFLAGS) $(CFLAGS)\n' multidef -> ground
DEBUG: line 'AM_V_CC = $(am__v_CC_$(V))\n'
DEBUG: keep 'AM_V_CC = $(am__v_CC_$(V))\n'
DEBUG: line 'am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: keep 'am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: line 'am__v_CC_0 = @echo "  CC      " $@;\n'
DEBUG: keep 'am__v_CC_0 = @echo "  CC      " $@;\n'
DEBUG: line 'am__v_CC_1 = \n'
DEBUG: keep 'am__v_CC_1 = \n'
DEBUG: line 'CCLD = $(CC)\n'
DEBUG: keep 'CCLD = $(CC)\n'
DEBUG: line 'LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n'
DEBUG: set  'LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n' ground -> multidef
DEBUG: keep 'LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n'
DEBUG: line '\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n'
DEBUG: add  '\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n'
DEBUG: line '\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n'
DEBUG: add  '\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n'
DEBUG: set  '\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n' multidef -> ground
DEBUG: line 'AM_V_CCLD = $(am__v_CCLD_$(V))\n'
DEBUG: keep 'AM_V_CCLD = $(am__v_CCLD_$(V))\n'
DEBUG: line 'am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: keep 'am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))\n'
DEBUG: line 'am__v_CCLD_0 = @echo "  CCLD    " $@;\n'
DEBUG: keep 'am__v_CCLD_0 = @echo "  CCLD    " $@;\n'
DEBUG: line 'am__v_CCLD_1 = \n'
DEBUG: keep 'am__v_CCLD_1 = \n'
DEBUG: line 'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
DEBUG: keep 'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
DEBUG: line 'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
DEBUG: keep 'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
DEBUG: line 'am__can_run_installinfo = \\\n'
DEBUG: set  'am__can_run_installinfo = \\\n' ground -> multidef
DEBUG: keep 'am__can_run_installinfo = \\\n'
DEBUG: line '  case $$AM_UPDATE_INFO_DIR in \\\n'
DEBUG: add  '  case $$AM_UPDATE_INFO_DIR in \\\n'
DEBUG: line '    n|no|NO) false;; \\\n'
DEBUG: add  '    n|no|NO) false;; \\\n'
DEBUG: line '    *) (install-info --version) >/dev/null 2>&1;; \\\n'
DEBUG: add  '    *) (install-info --version) >/dev/null 2>&1;; \\\n'
DEBUG: line '  esac\n'
DEBUG: add  '  esac\n'
DEBUG: set  '  esac\n' multidef -> ground
DEBUG: line 'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
DEBUG: keep 'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
DEBUG: line 'am__vpath_adj = case $$p in \\\n'
DEBUG: set  'am__vpath_adj = case $$p in \\\n' ground -> multidef
DEBUG: keep 'am__vpath_adj = case $$p in \\\n'
DEBUG: line '    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n'
DEBUG: add  '    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n'
DEBUG: line '    *) f=$$p;; \\\n'
DEBUG: add  '    *) f=$$p;; \\\n'
DEBUG: line '  esac;\n'
DEBUG: add  '  esac;\n'
DEBUG: set  '  esac;\n' multidef -> ground
DEBUG: line "am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
DEBUG: keep "am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
DEBUG: line 'am__install_max = 40\n'
DEBUG: keep 'am__install_max = 40\n'
DEBUG: line 'am__nobase_strip_setup = \\\n'
DEBUG: set  'am__nobase_strip_setup = \\\n' ground -> multidef
DEBUG: keep 'am__nobase_strip_setup = \\\n'
DEBUG: line '  srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`\n'
DEBUG: add  '  srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`\n'
DEBUG: set  '  srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`\n' multidef -> ground
DEBUG: line 'am__nobase_strip = \\\n'
DEBUG: set  'am__nobase_strip = \\\n' ground -> multidef
DEBUG: keep 'am__nobase_strip = \\\n'
DEBUG: line '  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"\n'
DEBUG: add  '  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"\n'
DEBUG: set  '  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"\n' multidef -> ground
DEBUG: line 'am__nobase_list = $(am__nobase_strip_setup); \\\n'
DEBUG: set  'am__nobase_list = $(am__nobase_strip_setup); \\\n' ground -> multidef
DEBUG: keep 'am__nobase_list = $(am__nobase_strip_setup); \\\n'
DEBUG: line '  for p in $$list; do echo "$$p $$p"; done | \\\n'
DEBUG: add  '  for p in $$list; do echo "$$p $$p"; done | \\\n'
DEBUG: line '  sed "s| $$srcdirstrip/| |;"\' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,\' | \\\n'
DEBUG: add  '  sed "s| $$srcdirstrip/| |;"\' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,\' | \\\n'
DEBUG: line '  $(AWK) \'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \\\n'
DEBUG: add  '  $(AWK) \'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \\\n'
DEBUG: line '    if (++n[$$2] == $(am__install_max)) \\\n'
DEBUG: add  '    if (++n[$$2] == $(am__install_max)) \\\n'
DEBUG: line '      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \\\n'
DEBUG: add  '      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \\\n'
DEBUG: line "    END { for (dir in files) print dir, files[dir] }'\n"
DEBUG: add  "    END { for (dir in files) print dir, files[dir] }'\n"
DEBUG: set  "    END { for (dir in files) print dir, files[dir] }'\n" multidef -> ground
DEBUG: line 'am__base_list = \\\n'
DEBUG: set  'am__base_list = \\\n' ground -> multidef
DEBUG: keep 'am__base_list = \\\n'
DEBUG: line "  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n"
DEBUG: add  "  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n"
DEBUG: line "  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
DEBUG: add  "  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
DEBUG: set  "  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n" multidef -> ground
DEBUG: line 'am__uninstall_files_from_dir = { \\\n'
DEBUG: set  'am__uninstall_files_from_dir = { \\\n' ground -> multidef
DEBUG: keep 'am__uninstall_files_from_dir = { \\\n'
DEBUG: line '  test -z "$$files" \\\n'
DEBUG: add  '  test -z "$$files" \\\n'
DEBUG: line '    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n'
DEBUG: add  '    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n'
DEBUG: line '    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n'
DEBUG: add  '    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n'
DEBUG: line '         $(am__cd) "$$dir" && rm -f $$files; }; \\\n'
DEBUG: add  '         $(am__cd) "$$dir" && rm -f $$files; }; \\\n'
DEBUG: line '  }\n'
DEBUG: add  '  }\n'
DEBUG: set  '  }\n' multidef -> ground
DEBUG: line 'am__installdirs = "$(DESTDIR)$(libgdkincludedir)"\n'
DEBUG: keep 'am__installdirs = "$(DESTDIR)$(libgdkincludedir)"\n'
DEBUG: line 'HEADERS = $(libgdkinclude_HEADERS)\n'
DEBUG: keep 'HEADERS = $(libgdkinclude_HEADERS)\n'
DEBUG: line 'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n'
DEBUG: keep 'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n'
DEBUG: line '# Read a list of newline-separated strings from the standard input,\n'
DEBUG: keep '# Read a list of newline-separated strings from the standard input,\n'
DEBUG: line '# and print each of them once, without duplicates.  Input order is\n'
DEBUG: keep '# and print each of them once, without duplicates.  Input order is\n'
DEBUG: line '# *not* preserved.\n'
DEBUG: keep '# *not* preserved.\n'
DEBUG: line "am__uniquify_input = $(AWK) '\\\n"
DEBUG: set  "am__uniquify_input = $(AWK) '\\\n" ground -> multidef
DEBUG: keep "am__uniquify_input = $(AWK) '\\\n"
DEBUG: line '  BEGIN { nonempty = 0; } \\\n'
DEBUG: add  '  BEGIN { nonempty = 0; } \\\n'
DEBUG: line '  { items[$$0] = 1; nonempty = 1; } \\\n'
DEBUG: add  '  { items[$$0] = 1; nonempty = 1; } \\\n'
DEBUG: line '  END { if (nonempty) { for (i in items) print i; }; } \\\n'
DEBUG: add  '  END { if (nonempty) { for (i in items) print i; }; } \\\n'
DEBUG: line "'\n"
DEBUG: add  "'\n"
DEBUG: set  "'\n" multidef -> ground
DEBUG: line '# Make sure the list of sources is unique.  This is necessary because,\n'
DEBUG: keep '# Make sure the list of sources is unique.  This is necessary because,\n'
DEBUG: line '# e.g., the same source file might be shared among _SOURCES variables\n'
DEBUG: keep '# e.g., the same source file might be shared among _SOURCES variables\n'
DEBUG: line '# for different programs/libraries.\n'
DEBUG: keep '# for different programs/libraries.\n'
DEBUG: line 'am__define_uniq_tagged_files = \\\n'
DEBUG: set  'am__define_uniq_tagged_files = \\\n' ground -> multidef
DEBUG: keep 'am__define_uniq_tagged_files = \\\n'
DEBUG: line "  list='$(am__tagged_files)'; \\\n"
DEBUG: add  "  list='$(am__tagged_files)'; \\\n"
DEBUG: line '  unique=`for i in $$list; do \\\n'
DEBUG: add  '  unique=`for i in $$list; do \\\n'
DEBUG: line '    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n'
DEBUG: add  '    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n'
DEBUG: line '  done | $(am__uniquify_input)`\n'
DEBUG: add  '  done | $(am__uniquify_input)`\n'
DEBUG: set  '  done | $(am__uniquify_input)`\n' multidef -> ground
DEBUG: line 'am__tty_colors_dummy = \\\n'
DEBUG: set  'am__tty_colors_dummy = \\\n' ground -> multidef
DEBUG: keep 'am__tty_colors_dummy = \\\n'
DEBUG: line '  mgn= red= grn= lgn= blu= brg= std=; \\\n'
DEBUG: add  '  mgn= red= grn= lgn= blu= brg= std=; \\\n'
DEBUG: line '  am__color_tests=no\n'
DEBUG: add  '  am__color_tests=no\n'
DEBUG: set  '  am__color_tests=no\n' multidef -> ground
DEBUG: line 'am__tty_colors = { \\\n'
DEBUG: set  'am__tty_colors = { \\\n' ground -> multidef
DEBUG: keep 'am__tty_colors = { \\\n'
DEBUG: line '  $(am__tty_colors_dummy); \\\n'
DEBUG: add  '  $(am__tty_colors_dummy); \\\n'
DEBUG: line '  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n'
DEBUG: add  '  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n'
DEBUG: line '    am__color_tests=no; \\\n'
DEBUG: add  '    am__color_tests=no; \\\n'
DEBUG: line '  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n'
DEBUG: add  '  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n'
DEBUG: line '    am__color_tests=yes; \\\n'
DEBUG: add  '    am__color_tests=yes; \\\n'
DEBUG: line '  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n'
DEBUG: add  '  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n'
DEBUG: line '    am__color_tests=yes; \\\n'
DEBUG: add  '    am__color_tests=yes; \\\n'
DEBUG: line '  fi; \\\n'
DEBUG: add  '  fi; \\\n'
DEBUG: line '  if test $$am__color_tests = yes; then \\\n'
DEBUG: add  '  if test $$am__color_tests = yes; then \\\n'
DEBUG: line "    red='\x1b[0;31m'; \\\n"
DEBUG: add  "    red='\x1b[0;31m'; \\\n"
DEBUG: line "    grn='\x1b[0;32m'; \\\n"
DEBUG: add  "    grn='\x1b[0;32m'; \\\n"
DEBUG: line "    lgn='\x1b[1;32m'; \\\n"
DEBUG: add  "    lgn='\x1b[1;32m'; \\\n"
DEBUG: line "    blu='\x1b[1;34m'; \\\n"
DEBUG: add  "    blu='\x1b[1;34m'; \\\n"
DEBUG: line "    mgn='\x1b[0;35m'; \\\n"
DEBUG: add  "    mgn='\x1b[0;35m'; \\\n"
DEBUG: line "    brg='\x1b[1m'; \\\n"
DEBUG: add  "    brg='\x1b[1m'; \\\n"
DEBUG: line "    std='\x1b[m'; \\\n"
DEBUG: add  "    std='\x1b[m'; \\\n"
DEBUG: line '  fi; \\\n'
DEBUG: add  '  fi; \\\n'
DEBUG: line '}\n'
DEBUG: add  '}\n'
DEBUG: set  '}\n' multidef -> ground
DEBUG: line 'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
DEBUG: keep 'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
DEBUG: line 'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
DEBUG: keep 'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
DEBUG: line 'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
DEBUG: keep 'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
DEBUG: line '# A command that, given a newline-separated list of test names on the\n'
DEBUG: keep '# A command that, given a newline-separated list of test names on the\n'
DEBUG: line '# standard input, print the name of the tests that are to be re-run\n'
DEBUG: keep '# standard input, print the name of the tests that are to be re-run\n'
DEBUG: line '# upon "make recheck".\n'
DEBUG: keep '# upon "make recheck".\n'
DEBUG: line "am__list_recheck_tests = $(AWK) '{ \\\n"
DEBUG: set  "am__list_recheck_tests = $(AWK) '{ \\\n" ground -> multidef
DEBUG: keep "am__list_recheck_tests = $(AWK) '{ \\\n"
DEBUG: line '  recheck = 1; \\\n'
DEBUG: add  '  recheck = 1; \\\n'
DEBUG: line '  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n'
DEBUG: add  '  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n'
DEBUG: line '    { \\\n'
DEBUG: add  '    { \\\n'
DEBUG: line '      if (rc < 0) \\\n'
DEBUG: add  '      if (rc < 0) \\\n'
DEBUG: line '        { \\\n'
DEBUG: add  '        { \\\n'
DEBUG: line '          if ((getline line2 < ($$0 ".log")) < 0) \\\n'
DEBUG: add  '          if ((getline line2 < ($$0 ".log")) < 0) \\\n'
DEBUG: line '\t    recheck = 0; \\\n'
DEBUG: add  '\t    recheck = 0; \\\n'
DEBUG: line '          break; \\\n'
DEBUG: add  '          break; \\\n'
DEBUG: line '        } \\\n'
DEBUG: add  '        } \\\n'
DEBUG: line '      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n'
DEBUG: add  '      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n'
DEBUG: line '        { \\\n'
DEBUG: add  '        { \\\n'
DEBUG: line '          recheck = 0; \\\n'
DEBUG: add  '          recheck = 0; \\\n'
DEBUG: line '          break; \\\n'
DEBUG: add  '          break; \\\n'
DEBUG: line '        } \\\n'
DEBUG: add  '        } \\\n'
DEBUG: line '      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n'
DEBUG: add  '      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n'
DEBUG: line '        { \\\n'
DEBUG: add  '        { \\\n'
DEBUG: line '          break; \\\n'
DEBUG: add  '          break; \\\n'
DEBUG: line '        } \\\n'
DEBUG: add  '        } \\\n'
DEBUG: line '    }; \\\n'
DEBUG: add  '    }; \\\n'
DEBUG: line '  if (recheck) \\\n'
DEBUG: add  '  if (recheck) \\\n'
DEBUG: line '    print $$0; \\\n'
DEBUG: add  '    print $$0; \\\n'
DEBUG: line '  close ($$0 ".trs"); \\\n'
DEBUG: add  '  close ($$0 ".trs"); \\\n'
DEBUG: line '  close ($$0 ".log"); \\\n'
DEBUG: add  '  close ($$0 ".log"); \\\n'
DEBUG: line "}'\n"
DEBUG: add  "}'\n"
DEBUG: set  "}'\n" multidef -> ground
DEBUG: line '# A command that, given a newline-separated list of test names on the\n'
DEBUG: keep '# A command that, given a newline-separated list of test names on the\n'
DEBUG: line '# standard input, create the global log from their .trs and .log files.\n'
DEBUG: keep '# standard input, create the global log from their .trs and .log files.\n'
DEBUG: line "am__create_global_log = $(AWK) ' \\\n"
DEBUG: set  "am__create_global_log = $(AWK) ' \\\n" ground -> multidef
DEBUG: keep "am__create_global_log = $(AWK) ' \\\n"
DEBUG: line 'function fatal(msg) \\\n'
DEBUG: add  'function fatal(msg) \\\n'
DEBUG: line '{ \\\n'
DEBUG: add  '{ \\\n'
DEBUG: line '  print "fatal: making $@: " msg | "cat >&2"; \\\n'
DEBUG: add  '  print "fatal: making $@: " msg | "cat >&2"; \\\n'
DEBUG: line '  exit 1; \\\n'
DEBUG: add  '  exit 1; \\\n'
DEBUG: line '} \\\n'
DEBUG: add  '} \\\n'
DEBUG: line 'function rst_section(header) \\\n'
DEBUG: add  'function rst_section(header) \\\n'
DEBUG: line '{ \\\n'
DEBUG: add  '{ \\\n'
DEBUG: line '  print header; \\\n'
DEBUG: add  '  print header; \\\n'
DEBUG: line '  len = length(header); \\\n'
DEBUG: add  '  len = length(header); \\\n'
DEBUG: line '  for (i = 1; i <= len; i = i + 1) \\\n'
DEBUG: add  '  for (i = 1; i <= len; i = i + 1) \\\n'
DEBUG: line '    printf "="; \\\n'
DEBUG: add  '    printf "="; \\\n'
DEBUG: line '  printf "\\n\\n"; \\\n'
DEBUG: add  '  printf "\\n\\n"; \\\n'
DEBUG: line '} \\\n'
DEBUG: add  '} \\\n'
DEBUG: line '{ \\\n'
DEBUG: add  '{ \\\n'
DEBUG: line '  copy_in_global_log = 1; \\\n'
DEBUG: add  '  copy_in_global_log = 1; \\\n'
DEBUG: line '  global_test_result = "RUN"; \\\n'
DEBUG: add  '  global_test_result = "RUN"; \\\n'
DEBUG: line '  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n'
DEBUG: add  '  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n'
DEBUG: line '    { \\\n'
DEBUG: add  '    { \\\n'
DEBUG: line '      if (rc < 0) \\\n'
DEBUG: add  '      if (rc < 0) \\\n'
DEBUG: line '         fatal("failed to read from " $$0 ".trs"); \\\n'
DEBUG: add  '         fatal("failed to read from " $$0 ".trs"); \\\n'
DEBUG: line '      if (line ~ /$(am__global_test_result_rx)/) \\\n'
DEBUG: add  '      if (line ~ /$(am__global_test_result_rx)/) \\\n'
DEBUG: line '        { \\\n'
DEBUG: add  '        { \\\n'
DEBUG: line '          sub("$(am__global_test_result_rx)", "", line); \\\n'
DEBUG: add  '          sub("$(am__global_test_result_rx)", "", line); \\\n'
DEBUG: line '          sub("[ \t]*$$", "", line); \\\n'
DEBUG: add  '          sub("[ \t]*$$", "", line); \\\n'
DEBUG: line '          global_test_result = line; \\\n'
DEBUG: add  '          global_test_result = line; \\\n'
DEBUG: line '        } \\\n'
DEBUG: add  '        } \\\n'
DEBUG: line '      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n'
DEBUG: add  '      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n'
DEBUG: line '        copy_in_global_log = 0; \\\n'
DEBUG: add  '        copy_in_global_log = 0; \\\n'
DEBUG: line '    }; \\\n'
DEBUG: add  '    }; \\\n'
DEBUG: line '  if (copy_in_global_log) \\\n'
DEBUG: add  '  if (copy_in_global_log) \\\n'
DEBUG: line '    { \\\n'
DEBUG: add  '    { \\\n'
DEBUG: line '      rst_section(global_test_result ": " $$0); \\\n'
DEBUG: add  '      rst_section(global_test_result ": " $$0); \\\n'
DEBUG: line '      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n'
DEBUG: add  '      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n'
DEBUG: line '      { \\\n'
DEBUG: add  '      { \\\n'
DEBUG: line '        if (rc < 0) \\\n'
DEBUG: add  '        if (rc < 0) \\\n'
DEBUG: line '          fatal("failed to read from " $$0 ".log"); \\\n'
DEBUG: add  '          fatal("failed to read from " $$0 ".log"); \\\n'
DEBUG: line '        print line; \\\n'
DEBUG: add  '        print line; \\\n'
DEBUG: line '      }; \\\n'
DEBUG: add  '      }; \\\n'
DEBUG: line '      printf "\\n"; \\\n'
DEBUG: add  '      printf "\\n"; \\\n'
DEBUG: line '    }; \\\n'
DEBUG: add  '    }; \\\n'
DEBUG: line '  close ($$0 ".trs"); \\\n'
DEBUG: add  '  close ($$0 ".trs"); \\\n'
DEBUG: line '  close ($$0 ".log"); \\\n'
DEBUG: add  '  close ($$0 ".log"); \\\n'
DEBUG: line "}'\n"
DEBUG: add  "}'\n"
DEBUG: set  "}'\n" multidef -> ground
DEBUG: line '# Restructured Text title.\n'
DEBUG: keep '# Restructured Text title.\n'
DEBUG: line "am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
DEBUG: keep "am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
DEBUG: line "# Solaris 10 'make', and several other traditional 'make' implementations,\n"
DEBUG: keep "# Solaris 10 'make', and several other traditional 'make' implementations,\n"
DEBUG: line '# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
DEBUG: keep '# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
DEBUG: line '# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
DEBUG: keep '# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
DEBUG: line 'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
DEBUG: keep 'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
DEBUG: line '# Default flags passed to test drivers.\n'
DEBUG: keep '# Default flags passed to test drivers.\n'
DEBUG: line 'am__common_driver_flags = \\\n'
DEBUG: set  'am__common_driver_flags = \\\n' ground -> multidef
DEBUG: keep 'am__common_driver_flags = \\\n'
DEBUG: line '  --color-tests "$$am__color_tests" \\\n'
DEBUG: add  '  --color-tests "$$am__color_tests" \\\n'
DEBUG: line '  --enable-hard-errors "$$am__enable_hard_errors" \\\n'
DEBUG: add  '  --enable-hard-errors "$$am__enable_hard_errors" \\\n'
DEBUG: line '  --expect-failure "$$am__expect_failure"\n'
DEBUG: add  '  --expect-failure "$$am__expect_failure"\n'
DEBUG: set  '  --expect-failure "$$am__expect_failure"\n' multidef -> ground
DEBUG: line '# To be inserted before the command running the test.  Creates the\n'
DEBUG: keep '# To be inserted before the command running the test.  Creates the\n'
DEBUG: line '# directory for the log if needed.  Stores in $dir the directory\n'
DEBUG: keep '# directory for the log if needed.  Stores in $dir the directory\n'
DEBUG: line '# containing $f, in $tst the test, in $log the log.  Executes the\n'
DEBUG: keep '# containing $f, in $tst the test, in $log the log.  Executes the\n'
DEBUG: line '# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
DEBUG: keep '# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
DEBUG: line '# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
DEBUG: keep '# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
DEBUG: line '# will run the test scripts (or their associated LOG_COMPILER, if\n'
DEBUG: keep '# will run the test scripts (or their associated LOG_COMPILER, if\n'
DEBUG: line '# thy have one).\n'
DEBUG: keep '# thy have one).\n'
DEBUG: line 'am__check_pre = \\\n'
DEBUG: set  'am__check_pre = \\\n' ground -> multidef
DEBUG: keep 'am__check_pre = \\\n'
DEBUG: line '$(am__sh_e_setup);\t\t\t\t\t\\\n'
DEBUG: add  '$(am__sh_e_setup);\t\t\t\t\t\\\n'
DEBUG: line '$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n'
DEBUG: add  '$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n'
DEBUG: line '$(am__tty_colors);\t\t\t\t\t\\\n'
DEBUG: add  '$(am__tty_colors);\t\t\t\t\t\\\n'
DEBUG: line 'srcdir=$(srcdir); export srcdir;\t\t\t\\\n'
DEBUG: add  'srcdir=$(srcdir); export srcdir;\t\t\t\\\n'
DEBUG: line 'case "$@" in\t\t\t\t\t\t\\\n'
DEBUG: add  'case "$@" in\t\t\t\t\t\t\\\n'
DEBUG: line '  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n'
DEBUG: add  '  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n'
DEBUG: line '    *) am__odir=.;; \t\t\t\t\t\\\n'
DEBUG: add  '    *) am__odir=.;; \t\t\t\t\t\\\n'
DEBUG: line 'esac;\t\t\t\t\t\t\t\\\n'
DEBUG: add  'esac;\t\t\t\t\t\t\t\\\n'
DEBUG: line 'test "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n'
DEBUG: add  'test "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n'
DEBUG: line '  || $(MKDIR_P) "$$am__odir" || exit $$?;\t\t\\\n'
DEBUG: add  '  || $(MKDIR_P) "$$am__odir" || exit $$?;\t\t\\\n'
DEBUG: line 'if test -f "./$$f"; then dir=./;\t\t\t\\\n'
DEBUG: add  'if test -f "./$$f"; then dir=./;\t\t\t\\\n'
DEBUG: line 'elif test -f "$$f"; then dir=;\t\t\t\t\\\n'
DEBUG: add  'elif test -f "$$f"; then dir=;\t\t\t\t\\\n'
DEBUG: line 'else dir="$(srcdir)/"; fi;\t\t\t\t\\\n'
DEBUG: add  'else dir="$(srcdir)/"; fi;\t\t\t\t\\\n'
DEBUG: line "tst=$$dir$$f; log='$@'; \t\t\t\t\\\n"
DEBUG: add  "tst=$$dir$$f; log='$@'; \t\t\t\t\\\n"
DEBUG: line "if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n"
DEBUG: add  "if test -n '$(DISABLE_HARD_ERRORS)'; then\t\t\\\n"
DEBUG: line '  am__enable_hard_errors=no; \t\t\t\t\\\n'
DEBUG: add  '  am__enable_hard_errors=no; \t\t\t\t\\\n'
DEBUG: line 'else\t\t\t\t\t\t\t\\\n'
DEBUG: add  'else\t\t\t\t\t\t\t\\\n'
DEBUG: line '  am__enable_hard_errors=yes; \t\t\t\t\\\n'
DEBUG: add  '  am__enable_hard_errors=yes; \t\t\t\t\\\n'
DEBUG: line 'fi; \t\t\t\t\t\t\t\\\n'
DEBUG: add  'fi; \t\t\t\t\t\t\t\\\n'
DEBUG: line 'case " $(XFAIL_TESTS) " in\t\t\t\t\\\n'
DEBUG: add  'case " $(XFAIL_TESTS) " in\t\t\t\t\\\n'
DEBUG: line '  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n'
DEBUG: add  '  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n'
DEBUG: line '    am__expect_failure=yes;;\t\t\t\t\\\n'
DEBUG: add  '    am__expect_failure=yes;;\t\t\t\t\\\n'
DEBUG: line '  *)\t\t\t\t\t\t\t\\\n'
DEBUG: add  '  *)\t\t\t\t\t\t\t\\\n'
DEBUG: line '    am__expect_failure=no;;\t\t\t\t\\\n'
DEBUG: add  '    am__expect_failure=no;;\t\t\t\t\\\n'
DEBUG: line 'esac; \t\t\t\t\t\t\t\\\n'
DEBUG: add  'esac; \t\t\t\t\t\t\t\\\n'
DEBUG: line '$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
DEBUG: add  '$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
DEBUG: set  '$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n' multidef -> ground
DEBUG: line '# A shell command to get the names of the tests scripts with any registered\n'
DEBUG: keep '# A shell command to get the names of the tests scripts with any registered\n'
DEBUG: line '# extension removed (i.e., equivalently, the names of the test logs, with\n'
DEBUG: keep '# extension removed (i.e., equivalently, the names of the test logs, with\n'
DEBUG: line "# the '.log' extension removed).  The result is saved in the shell variable\n"
DEBUG: keep "# the '.log' extension removed).  The result is saved in the shell variable\n"
DEBUG: line "# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
DEBUG: keep "# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
DEBUG: line '# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
DEBUG: keep '# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
DEBUG: line '# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
DEBUG: keep '# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
DEBUG: line "# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
DEBUG: keep "# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
DEBUG: line 'am__set_TESTS_bases = \\\n'
DEBUG: set  'am__set_TESTS_bases = \\\n' ground -> multidef
DEBUG: keep 'am__set_TESTS_bases = \\\n'
DEBUG: line "  bases='$(TEST_LOGS)'; \\\n"
DEBUG: add  "  bases='$(TEST_LOGS)'; \\\n"
DEBUG: line "  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n"
DEBUG: add  "  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n"
DEBUG: line '  bases=`echo $$bases`\n'
DEBUG: add  '  bases=`echo $$bases`\n'
DEBUG: set  '  bases=`echo $$bases`\n' multidef -> ground
DEBUG: line "AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
DEBUG: keep "AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
DEBUG: line 'RECHECK_LOGS = $(TEST_LOGS)\n'
DEBUG: keep 'RECHECK_LOGS = $(TEST_LOGS)\n'
DEBUG: line 'AM_RECURSIVE_TARGETS = check recheck\n'
DEBUG: keep 'AM_RECURSIVE_TARGETS = check recheck\n'
DEBUG: line 'TEST_SUITE_LOG = test-suite.log\n'
DEBUG: keep 'TEST_SUITE_LOG = test-suite.log\n'
DEBUG: line 'TEST_EXTENSIONS =  .test\n'
DEBUG: keep 'TEST_EXTENSIONS =  .test\n'
DEBUG: line 'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
DEBUG: keep 'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
DEBUG: line 'LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n'
DEBUG: keep 'LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n'
DEBUG: line 'am__set_b = \\\n'
DEBUG: set  'am__set_b = \\\n' ground -> multidef
DEBUG: keep 'am__set_b = \\\n'
DEBUG: line "  case '$@' in \\\n"
DEBUG: add  "  case '$@' in \\\n"
DEBUG: line '    */*) \\\n'
DEBUG: add  '    */*) \\\n'
DEBUG: line "      case '$*' in \\\n"
DEBUG: add  "      case '$*' in \\\n"
DEBUG: line "        */*) b='$*';; \\\n"
DEBUG: add  "        */*) b='$*';; \\\n"
DEBUG: line "          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n"
DEBUG: add  "          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n"
DEBUG: line '       esac;; \\\n'
DEBUG: add  '       esac;; \\\n'
DEBUG: line '    *) \\\n'
DEBUG: add  '    *) \\\n'
DEBUG: line "      b='$*';; \\\n"
DEBUG: add  "      b='$*';; \\\n"
DEBUG: line '  esac\n'
DEBUG: add  '  esac\n'
DEBUG: set  '  esac\n' multidef -> ground
DEBUG: line 'am__test_logs1 = $(TESTS:=.log)\n'
DEBUG: keep 'am__test_logs1 = $(TESTS:=.log)\n'
DEBUG: line 'am__test_logs2 = $(am__test_logs1:.log=.log)\n'
DEBUG: keep 'am__test_logs2 = $(am__test_logs1:.log=.log)\n'
DEBUG: line 'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
DEBUG: keep 'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
DEBUG: line 'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
DEBUG: keep 'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
DEBUG: line 'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n'
DEBUG: set  'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n' ground -> multidef
DEBUG: keep 'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n'
DEBUG: line '\t$(TEST_LOG_FLAGS)\n'
DEBUG: add  '\t$(TEST_LOG_FLAGS)\n'
DEBUG: set  '\t$(TEST_LOG_FLAGS)\n' multidef -> ground
DEBUG: line 'am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.decl \\\n'
DEBUG: set  'am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.decl \\\n' ground -> multidef
DEBUG: keep 'am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.decl \\\n'
DEBUG: line '\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
DEBUG: add  '\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
DEBUG: set  '\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n' multidef -> ground
DEBUG: line 'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n'
DEBUG: keep 'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n'
DEBUG: line "ACLOCAL = ${SHELL} '/home/stefan/gtk2-test/missing' aclocal-1.16 \n"
DEBUG: keep "ACLOCAL = ${SHELL} '/home/stefan/gtk2-test/missing' aclocal-1.16 \n"
DEBUG: line 'AMTAR = $${TAR-tar}\n'
DEBUG: keep 'AMTAR = $${TAR-tar}\n'
DEBUG: line 'AM_DEFAULT_VERBOSITY = 1\n'
DEBUG: keep 'AM_DEFAULT_VERBOSITY = 1\n'
DEBUG: line 'AR = ar\n'
DEBUG: keep 'AR = ar\n'
DEBUG: line 'AS = as\n'
DEBUG: keep 'AS = as\n'
DEBUG: line "AUTOCONF = ${SHELL} '/home/stefan/gtk2-test/missing' autoconf\n"
DEBUG: keep "AUTOCONF = ${SHELL} '/home/stefan/gtk2-test/missing' autoconf\n"
DEBUG: line "AUTOHEADER = ${SHELL} '/home/stefan/gtk2-test/missing' autoheader\n"
DEBUG: keep "AUTOHEADER = ${SHELL} '/home/stefan/gtk2-test/missing' autoheader\n"
DEBUG: line "AUTOMAKE = ${SHELL} '/home/stefan/gtk2-test/missing' automake-1.16\n"
DEBUG: keep "AUTOMAKE = ${SHELL} '/home/stefan/gtk2-test/missing' automake-1.16\n"
DEBUG: line 'AWK = gawk\n'
DEBUG: keep 'AWK = gawk\n'
DEBUG: line 'BASE_DEPENDENCIES_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
DEBUG: keep 'BASE_DEPENDENCIES_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
DEBUG: line 'BASE_DEPENDENCIES_LIBS = -lpango-1.0 -lharfbuzz -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
DEBUG: keep 'BASE_DEPENDENCIES_LIBS = -lpango-1.0 -lharfbuzz -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
DEBUG: line 'CAIRO_BACKEND_CFLAGS = -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
DEBUG: keep 'CAIRO_BACKEND_CFLAGS = -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
DEBUG: line 'CAIRO_BACKEND_LIBS = -lcairo -lX11 -lXext\n'
DEBUG: keep 'CAIRO_BACKEND_LIBS = -lcairo -lX11 -lXext\n'
DEBUG: line 'CAIRO_PREFIX = /usr\n'
DEBUG: keep 'CAIRO_PREFIX = /usr\n'
DEBUG: line 'CC = gcc\n'
DEBUG: keep 'CC = gcc\n'
DEBUG: line 'CCAS = gcc\n'
DEBUG: keep 'CCAS = gcc\n'
DEBUG: line 'CCASDEPMODE = depmode=none\n'
DEBUG: keep 'CCASDEPMODE = depmode=none\n'
DEBUG: line 'CCASFLAGS = -g -O2\n'
DEBUG: keep 'CCASFLAGS = -g -O2\n'
DEBUG: line 'CCDEPMODE = depmode=none\n'
DEBUG: keep 'CCDEPMODE = depmode=none\n'
DEBUG: line 'CFLAGS = -g -O2 -Wall\n'
DEBUG: keep 'CFLAGS = -g -O2 -Wall\n'
DEBUG: line 'CPP = gcc -E\n'
DEBUG: keep 'CPP = gcc -E\n'
DEBUG: line 'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
DEBUG: keep 'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
DEBUG: line 'CSCOPE = cscope\n'
DEBUG: keep 'CSCOPE = cscope\n'
DEBUG: line 'CTAGS = ctags\n'
DEBUG: keep 'CTAGS = ctags\n'
DEBUG: line 'CUPS_API_MAJOR = \n'
DEBUG: keep 'CUPS_API_MAJOR = \n'
DEBUG: line 'CUPS_API_MINOR = \n'
DEBUG: keep 'CUPS_API_MINOR = \n'
DEBUG: line 'CUPS_CFLAGS = \n'
DEBUG: keep 'CUPS_CFLAGS = \n'
DEBUG: line 'CUPS_CONFIG = no\n'
DEBUG: keep 'CUPS_CONFIG = no\n'
DEBUG: line 'CUPS_LIBS = \n'
DEBUG: keep 'CUPS_LIBS = \n'
DEBUG: line 'CXX = c++\n'
DEBUG: keep 'CXX = c++\n'
DEBUG: line 'CXXCPP = c++ -E\n'
DEBUG: keep 'CXXCPP = c++ -E\n'
DEBUG: line 'CXXDEPMODE = depmode=none\n'
DEBUG: keep 'CXXDEPMODE = depmode=none\n'
DEBUG: line 'CXXFLAGS = -g -O2\n'
DEBUG: keep 'CXXFLAGS = -g -O2\n'
DEBUG: line 'CYGPATH_W = echo\n'
DEBUG: keep 'CYGPATH_W = echo\n'
DEBUG: line 'DB2HTML = false\n'
DEBUG: keep 'DB2HTML = false\n'
DEBUG: line 'DEFS = -DHAVE_CONFIG_H\n'
DEBUG: keep 'DEFS = -DHAVE_CONFIG_H\n'
DEBUG: line 'DEPDIR = .deps\n'
DEBUG: keep 'DEPDIR = .deps\n'
DEBUG: line 'DIRECTFB_CFLAGS = \n'
DEBUG: keep 'DIRECTFB_CFLAGS = \n'
DEBUG: line 'DIRECTFB_LIBS = \n'
DEBUG: keep 'DIRECTFB_LIBS = \n'
DEBUG: line 'DLLTOOL = dlltool\n'
DEBUG: keep 'DLLTOOL = dlltool\n'
DEBUG: line 'DSYMUTIL = \n'
DEBUG: keep 'DSYMUTIL = \n'
DEBUG: line 'DUMPBIN = \n'
DEBUG: keep 'DUMPBIN = \n'
DEBUG: line 'ECHO_C = \n'
DEBUG: keep 'ECHO_C = \n'
DEBUG: line 'ECHO_N = -n\n'
DEBUG: keep 'ECHO_N = -n\n'
DEBUG: line 'ECHO_T = \n'
DEBUG: keep 'ECHO_T = \n'
DEBUG: line 'EGREP = /bin/grep -E\n'
DEBUG: keep 'EGREP = /bin/grep -E\n'
DEBUG: line 'ETAGS = etags\n'
DEBUG: keep 'ETAGS = etags\n'
DEBUG: line 'EXEEXT = \n'
DEBUG: keep 'EXEEXT = \n'
DEBUG: line 'EXE_MANIFEST_ARCHITECTURE = X86\n'
DEBUG: keep 'EXE_MANIFEST_ARCHITECTURE = X86\n'
DEBUG: line 'FGREP = /bin/grep -F\n'
DEBUG: keep 'FGREP = /bin/grep -F\n'
DEBUG: line 'FILECMD = file\n'
DEBUG: keep 'FILECMD = file\n'
DEBUG: line 'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
DEBUG: keep 'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
DEBUG: line 'GDK_DEP_LIBS = -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgio-2.0 -lfontconfig -lfreetype -lXrender -lXinerama -lXrandr -lXcursor -lXcomposite -lXdamage -lXfixes -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lX11 -lXext -lm\n'
DEBUG: keep 'GDK_DEP_LIBS = -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgio-2.0 -lfontconfig -lfreetype -lXrender -lXinerama -lXrandr -lXcursor -lXcomposite -lXdamage -lXfixes -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lX11 -lXext -lm\n'
DEBUG: line 'GDK_EXTRA_CFLAGS = \n'
DEBUG: keep 'GDK_EXTRA_CFLAGS = \n'
DEBUG: line 'GDK_EXTRA_LIBS = \n'
DEBUG: keep 'GDK_EXTRA_LIBS = \n'
DEBUG: line 'GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0\n'
DEBUG: keep 'GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0\n'
DEBUG: line 'GDK_PIXBUF_CSOURCE = /usr/bin/gdk-pixbuf-csource\n'
DEBUG: keep 'GDK_PIXBUF_CSOURCE = /usr/bin/gdk-pixbuf-csource\n'
DEBUG: line 'GDK_PIXBUF_LIBS = -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
DEBUG: keep 'GDK_PIXBUF_LIBS = -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
DEBUG: line 'GLIB_CFLAGS = -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
DEBUG: keep 'GLIB_CFLAGS = -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
DEBUG: line 'GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources\n'
DEBUG: keep 'GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources\n'
DEBUG: line 'GLIB_GENMARSHAL = /usr/bin/glib-genmarshal\n'
DEBUG: keep 'GLIB_GENMARSHAL = /usr/bin/glib-genmarshal\n'
DEBUG: line 'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
DEBUG: keep 'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
DEBUG: line 'GLIB_MKENUMS = /usr/bin/glib-mkenums\n'
DEBUG: keep 'GLIB_MKENUMS = /usr/bin/glib-mkenums\n'
DEBUG: line 'GLIB_PREFIX = /usr\n'
DEBUG: keep 'GLIB_PREFIX = /usr\n'
DEBUG: line 'GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
DEBUG: keep 'GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
DEBUG: line 'GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0\n'
DEBUG: keep 'GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0\n'
DEBUG: line 'GOBJECT_QUERY = /usr/bin/gobject-query\n'
DEBUG: keep 'GOBJECT_QUERY = /usr/bin/gobject-query\n'
DEBUG: line 'GREP = /bin/grep\n'
DEBUG: keep 'GREP = /bin/grep\n'
DEBUG: line 'GTKDOC_CHECK = \n'
DEBUG: keep 'GTKDOC_CHECK = \n'
DEBUG: line 'GTKDOC_CHECK_PATH = \n'
DEBUG: keep 'GTKDOC_CHECK_PATH = \n'
DEBUG: line 'GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/lib64/libffi/include\n'
DEBUG: keep 'GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/lib64/libffi/include\n'
DEBUG: line 'GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0\n'
DEBUG: keep 'GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0\n'
DEBUG: line 'GTKDOC_MKPDF = \n'
DEBUG: keep 'GTKDOC_MKPDF = \n'
DEBUG: line 'GTKDOC_REBASE = true\n'
DEBUG: keep 'GTKDOC_REBASE = true\n'
DEBUG: line 'GTK_API_VERSION = 2.0\n'
DEBUG: keep 'GTK_API_VERSION = 2.0\n'
DEBUG: line 'GTK_BINARY_AGE = 2433\n'
DEBUG: keep 'GTK_BINARY_AGE = 2433\n'
DEBUG: line 'GTK_BINARY_VERSION = 2.10.0\n'
DEBUG: keep 'GTK_BINARY_VERSION = 2.10.0\n'
DEBUG: line 'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
DEBUG: keep 'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
DEBUG: line 'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1  \n'
DEBUG: keep 'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1  \n'
DEBUG: line 'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
DEBUG: keep 'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
DEBUG: line 'GTK_EXTRA_CFLAGS = \n'
DEBUG: keep 'GTK_EXTRA_CFLAGS = \n'
DEBUG: line 'GTK_EXTRA_LIBS = \n'
DEBUG: keep 'GTK_EXTRA_LIBS = \n'
DEBUG: line 'GTK_INTERFACE_AGE = 33\n'
DEBUG: keep 'GTK_INTERFACE_AGE = 33\n'
DEBUG: line 'GTK_MAJOR_VERSION = 2\n'
DEBUG: keep 'GTK_MAJOR_VERSION = 2\n'
DEBUG: line 'GTK_MICRO_VERSION = 33\n'
DEBUG: keep 'GTK_MICRO_VERSION = 33\n'
DEBUG: line 'GTK_MINOR_VERSION = 24\n'
DEBUG: keep 'GTK_MINOR_VERSION = 24\n'
DEBUG: line 'GTK_PACKAGES = cairo gdk-pixbuf-2.0 gio-2.0 pangoft2\n'
DEBUG: keep 'GTK_PACKAGES = cairo gdk-pixbuf-2.0 gio-2.0 pangoft2\n'
DEBUG: line 'GTK_UPDATE_ICON_CACHE = no\n'
DEBUG: keep 'GTK_UPDATE_ICON_CACHE = no\n'
DEBUG: line 'GTK_VERSION = 2.24.33\n'
DEBUG: keep 'GTK_VERSION = 2.24.33\n'
DEBUG: line 'GTK_XIM_FLAGS = \n'
DEBUG: keep 'GTK_XIM_FLAGS = \n'
DEBUG: line 'HAVE_HTTP_AUTHSTRING = \n'
DEBUG: keep 'HAVE_HTTP_AUTHSTRING = \n'
DEBUG: line 'HTML_DIR = ${datadir}/gtk-doc/html\n'
DEBUG: keep 'HTML_DIR = ${datadir}/gtk-doc/html\n'
DEBUG: line 'INDENT = \n'
DEBUG: keep 'INDENT = \n'
DEBUG: line 'INSTALL = /usr/bin/install -c\n'
DEBUG: keep 'INSTALL = /usr/bin/install -c\n'
DEBUG: line 'INSTALL_DATA = ${INSTALL} -m 644\n'
DEBUG: keep 'INSTALL_DATA = ${INSTALL} -m 644\n'
DEBUG: line 'INSTALL_PROGRAM = ${INSTALL}\n'
DEBUG: keep 'INSTALL_PROGRAM = ${INSTALL}\n'
DEBUG: line 'INSTALL_SCRIPT = ${INSTALL}\n'
DEBUG: keep 'INSTALL_SCRIPT = ${INSTALL}\n'
DEBUG: line 'INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n'
DEBUG: keep 'INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n'
DEBUG: line 'INTROSPECTION_CFLAGS = \n'
DEBUG: keep 'INTROSPECTION_CFLAGS = \n'
DEBUG: line 'INTROSPECTION_COMPILER = \n'
DEBUG: keep 'INTROSPECTION_COMPILER = \n'
DEBUG: line 'INTROSPECTION_GENERATE = \n'
DEBUG: keep 'INTROSPECTION_GENERATE = \n'
DEBUG: line 'INTROSPECTION_GIRDIR = \n'
DEBUG: keep 'INTROSPECTION_GIRDIR = \n'
DEBUG: line 'INTROSPECTION_LIBS = \n'
DEBUG: keep 'INTROSPECTION_LIBS = \n'
DEBUG: line 'INTROSPECTION_MAKEFILE = \n'
DEBUG: keep 'INTROSPECTION_MAKEFILE = \n'
DEBUG: line 'INTROSPECTION_SCANNER = \n'
DEBUG: keep 'INTROSPECTION_SCANNER = \n'
DEBUG: line 'INTROSPECTION_TYPELIBDIR = \n'
DEBUG: keep 'INTROSPECTION_TYPELIBDIR = \n'
DEBUG: line 'LD = /usr/x86_64-pc-linux-gnu/bin/ld\n'
DEBUG: keep 'LD = /usr/x86_64-pc-linux-gnu/bin/ld\n'
DEBUG: line 'LDFLAGS = \n'
DEBUG: keep 'LDFLAGS = \n'
DEBUG: line 'LIBOBJS = \n'
DEBUG: keep 'LIBOBJS = \n'
DEBUG: line 'LIBS = \n'
DEBUG: keep 'LIBS = \n'
DEBUG: line 'LIBTOOL = $(SHELL) $(top_builddir)/libtool\n'
DEBUG: keep 'LIBTOOL = $(SHELL) $(top_builddir)/libtool\n'
DEBUG: line 'LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"\n'
DEBUG: keep 'LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"\n'
DEBUG: line 'LIB_EXE_MACHINE_FLAG = X86\n'
DEBUG: keep 'LIB_EXE_MACHINE_FLAG = X86\n'
DEBUG: line 'LIPO = \n'
DEBUG: keep 'LIPO = \n'
DEBUG: line 'LN_S = ln -s\n'
DEBUG: keep 'LN_S = ln -s\n'
DEBUG: line 'LTLIBOBJS = \n'
DEBUG: keep 'LTLIBOBJS = \n'
DEBUG: line 'LT_CURRENT_MINUS_AGE = 0\n'
DEBUG: keep 'LT_CURRENT_MINUS_AGE = 0\n'
DEBUG: line 'LT_SYS_LIBRARY_PATH = \n'
DEBUG: keep 'LT_SYS_LIBRARY_PATH = \n'
DEBUG: line 'LT_VERSION_INFO = 2400:33:2400\n'
DEBUG: keep 'LT_VERSION_INFO = 2400:33:2400\n'
DEBUG: line 'MAINT = \n'
DEBUG: keep 'MAINT = \n'
DEBUG: line "MAKEINFO = ${SHELL} '/home/stefan/gtk2-test/missing' makeinfo\n"
DEBUG: keep "MAKEINFO = ${SHELL} '/home/stefan/gtk2-test/missing' makeinfo\n"
DEBUG: line 'MANIFEST_TOOL = :\n'
DEBUG: keep 'MANIFEST_TOOL = :\n'
DEBUG: line 'MATH_LIB = -lm\n'
DEBUG: keep 'MATH_LIB = -lm\n'
DEBUG: line 'MKDIR_P = /bin/mkdir -p\n'
DEBUG: keep 'MKDIR_P = /bin/mkdir -p\n'
DEBUG: line 'NM = /usr/bin/nm -B\n'
DEBUG: keep 'NM = /usr/bin/nm -B\n'
DEBUG: line 'NMEDIT = \n'
DEBUG: keep 'NMEDIT = \n'
DEBUG: line 'OBJDUMP = objdump\n'
DEBUG: keep 'OBJDUMP = objdump\n'
DEBUG: line 'OBJEXT = o\n'
DEBUG: keep 'OBJEXT = o\n'
DEBUG: line 'OTOOL = \n'
DEBUG: keep 'OTOOL = \n'
DEBUG: line 'OTOOL64 = \n'
DEBUG: keep 'OTOOL64 = \n'
DEBUG: line 'PACKAGE = gtk+\n'
DEBUG: keep 'PACKAGE = gtk+\n'
DEBUG: line 'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
DEBUG: keep 'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
DEBUG: line 'PACKAGE_NAME = gtk+\n'
DEBUG: keep 'PACKAGE_NAME = gtk+\n'
DEBUG: line 'PACKAGE_STRING = gtk+ 2.24.33\n'
DEBUG: keep 'PACKAGE_STRING = gtk+ 2.24.33\n'
DEBUG: line 'PACKAGE_TARNAME = gtk+\n'
DEBUG: keep 'PACKAGE_TARNAME = gtk+\n'
DEBUG: line 'PACKAGE_URL = \n'
DEBUG: keep 'PACKAGE_URL = \n'
DEBUG: line 'PACKAGE_VERSION = 2.24.33\n'
DEBUG: keep 'PACKAGE_VERSION = 2.24.33\n'
DEBUG: line 'PANGO_PREFIX = /usr\n'
DEBUG: keep 'PANGO_PREFIX = /usr\n'
DEBUG: line 'PATH_SEPARATOR = :\n'
DEBUG: keep 'PATH_SEPARATOR = :\n'
DEBUG: line 'PERL = /usr/bin/perl\n'
DEBUG: keep 'PERL = /usr/bin/perl\n'
DEBUG: line 'PKG_CONFIG = /usr/bin/pkg-config\n'
DEBUG: keep 'PKG_CONFIG = /usr/bin/pkg-config\n'
DEBUG: line 'PKG_CONFIG_LIBDIR = \n'
DEBUG: keep 'PKG_CONFIG_LIBDIR = \n'
DEBUG: line 'PKG_CONFIG_PATH = \n'
DEBUG: keep 'PKG_CONFIG_PATH = \n'
DEBUG: line 'RANLIB = ranlib\n'
DEBUG: keep 'RANLIB = ranlib\n'
DEBUG: line 'REBUILD = \n'
DEBUG: keep 'REBUILD = \n'
DEBUG: line 'SED = /bin/sed\n'
DEBUG: keep 'SED = /bin/sed\n'
DEBUG: line 'SET_MAKE = \n'
DEBUG: keep 'SET_MAKE = \n'
DEBUG: line 'SHELL = /bin/sh\n'
DEBUG: keep 'SHELL = /bin/sh\n'
DEBUG: line 'STRIP = strip\n'
DEBUG: keep 'STRIP = strip\n'
DEBUG: line 'VERSION = 2.24.33\n'
DEBUG: keep 'VERSION = 2.24.33\n'
DEBUG: line 'WINDRES = \n'
DEBUG: keep 'WINDRES = \n'
DEBUG: line 'XMKMF = \n'
DEBUG: keep 'XMKMF = \n'
DEBUG: line 'XMLCATALOG = \n'
DEBUG: keep 'XMLCATALOG = \n'
DEBUG: line 'XML_CATALOG_FILE = \n'
DEBUG: keep 'XML_CATALOG_FILE = \n'
DEBUG: line 'XSLTPROC = \n'
DEBUG: keep 'XSLTPROC = \n'
DEBUG: line 'X_CFLAGS = \n'
DEBUG: keep 'X_CFLAGS = \n'
DEBUG: line 'X_EXTRA_LIBS = \n'
DEBUG: keep 'X_EXTRA_LIBS = \n'
DEBUG: line 'X_LIBS = \n'
DEBUG: keep 'X_LIBS = \n'
DEBUG: line 'X_PRE_LIBS = \n'
DEBUG: keep 'X_PRE_LIBS = \n'
DEBUG: line 'abs_builddir = /home/stefan/gtk2-test/gdk/x11\n'
DEBUG: keep 'abs_builddir = /home/stefan/gtk2-test/gdk/x11\n'
DEBUG: line 'abs_srcdir = /home/stefan/gtk2-test/gdk/x11\n'
DEBUG: keep 'abs_srcdir = /home/stefan/gtk2-test/gdk/x11\n'
DEBUG: line 'abs_top_builddir = /home/stefan/gtk2-test\n'
DEBUG: keep 'abs_top_builddir = /home/stefan/gtk2-test\n'
DEBUG: line 'abs_top_srcdir = /home/stefan/gtk2-test\n'
DEBUG: keep 'abs_top_srcdir = /home/stefan/gtk2-test\n'
DEBUG: line 'ac_ct_AR = ar\n'
DEBUG: keep 'ac_ct_AR = ar\n'
DEBUG: line 'ac_ct_CC = gcc\n'
DEBUG: keep 'ac_ct_CC = gcc\n'
DEBUG: line 'ac_ct_CXX = c++\n'
DEBUG: keep 'ac_ct_CXX = c++\n'
DEBUG: line 'ac_ct_DUMPBIN = \n'
DEBUG: keep 'ac_ct_DUMPBIN = \n'
DEBUG: line 'am__include = include\n'
DEBUG: keep 'am__include = include\n'
DEBUG: line 'am__leading_dot = .\n'
DEBUG: keep 'am__leading_dot = .\n'
DEBUG: line 'am__quote = \n'
DEBUG: keep 'am__quote = \n'
DEBUG: line 'am__tar = $${TAR-tar} chof - "$$tardir"\n'
DEBUG: keep 'am__tar = $${TAR-tar} chof - "$$tardir"\n'
DEBUG: line 'am__untar = $${TAR-tar} xf -\n'
DEBUG: keep 'am__untar = $${TAR-tar} xf -\n'
DEBUG: line 'bindir = ${exec_prefix}/bin\n'
DEBUG: keep 'bindir = ${exec_prefix}/bin\n'
DEBUG: line 'build = i686-pc-linux-gnu\n'
DEBUG: keep 'build = i686-pc-linux-gnu\n'
DEBUG: line 'build_alias = i686-pc-linux-gnu\n'
DEBUG: keep 'build_alias = i686-pc-linux-gnu\n'
DEBUG: line 'build_cpu = i686\n'
DEBUG: keep 'build_cpu = i686\n'
DEBUG: line 'build_os = linux-gnu\n'
DEBUG: keep 'build_os = linux-gnu\n'
DEBUG: line 'build_vendor = pc\n'
DEBUG: keep 'build_vendor = pc\n'
DEBUG: line 'builddir = .\n'
DEBUG: keep 'builddir = .\n'
DEBUG: line 'datadir = /usr/share\n'
DEBUG: keep 'datadir = /usr/share\n'
DEBUG: line 'datarootdir = /usr/share\n'
DEBUG: keep 'datarootdir = /usr/share\n'
DEBUG: line 'docdir = /usr/share/doc/gtk+-2.24.33-r4\n'
DEBUG: keep 'docdir = /usr/share/doc/gtk+-2.24.33-r4\n'
DEBUG: line 'dvidir = ${docdir}\n'
DEBUG: keep 'dvidir = ${docdir}\n'
DEBUG: line 'exec_prefix = ${prefix}\n'
DEBUG: keep 'exec_prefix = ${prefix}\n'
DEBUG: line 'gdktarget = x11\n'
DEBUG: keep 'gdktarget = x11\n'
DEBUG: line 'gdktargetlib = libgdk-x11-2.0.la\n'
DEBUG: keep 'gdktargetlib = libgdk-x11-2.0.la\n'
DEBUG: line 'gtktargetlib = libgtk-x11-2.0.la\n'
DEBUG: keep 'gtktargetlib = libgtk-x11-2.0.la\n'
DEBUG: line 'host = i686-pc-linux-gnu\n'
DEBUG: keep 'host = i686-pc-linux-gnu\n'
DEBUG: line 'host_alias = i686-pc-linux-gnu\n'
DEBUG: keep 'host_alias = i686-pc-linux-gnu\n'
DEBUG: line 'host_cpu = i686\n'
DEBUG: keep 'host_cpu = i686\n'
DEBUG: line 'host_os = linux-gnu\n'
DEBUG: keep 'host_os = linux-gnu\n'
DEBUG: line 'host_vendor = pc\n'
DEBUG: keep 'host_vendor = pc\n'
DEBUG: line 'htmldir = /usr/share/doc/gtk+-2.24.33-r4/html\n'
DEBUG: keep 'htmldir = /usr/share/doc/gtk+-2.24.33-r4/html\n'
DEBUG: line 'includedir = ${prefix}/include\n'
DEBUG: keep 'includedir = ${prefix}/include\n'
DEBUG: line 'infodir = /usr/share/info\n'
DEBUG: keep 'infodir = /usr/share/info\n'
DEBUG: line 'install_sh = ${SHELL} /home/stefan/gtk2-test/install-sh\n'
DEBUG: keep 'install_sh = ${SHELL} /home/stefan/gtk2-test/install-sh\n'
DEBUG: line 'libdir = /usr/lib\n'
DEBUG: keep 'libdir = /usr/lib\n'
DEBUG: line 'libexecdir = ${exec_prefix}/libexec\n'
DEBUG: keep 'libexecdir = ${exec_prefix}/libexec\n'
DEBUG: line 'localedir = ${datarootdir}/locale\n'
DEBUG: keep 'localedir = ${datarootdir}/locale\n'
DEBUG: line 'localstatedir = /var/lib\n'
DEBUG: keep 'localstatedir = /var/lib\n'
DEBUG: line 'mandir = /usr/share/man\n'
DEBUG: keep 'mandir = /usr/share/man\n'
DEBUG: line 'mkdir_p = $(MKDIR_P)\n'
DEBUG: keep 'mkdir_p = $(MKDIR_P)\n'
DEBUG: line 'ms_librarian = \n'
DEBUG: keep 'ms_librarian = \n'
DEBUG: line 'oldincludedir = /usr/include\n'
DEBUG: keep 'oldincludedir = /usr/include\n'
DEBUG: line 'pdfdir = ${docdir}\n'
DEBUG: keep 'pdfdir = ${docdir}\n'
DEBUG: line 'prefix = /usr\n'
DEBUG: keep 'prefix = /usr\n'
DEBUG: line 'program_transform_name = s,x,x,\n'
DEBUG: keep 'program_transform_name = s,x,x,\n'
DEBUG: line 'psdir = ${docdir}\n'
DEBUG: keep 'psdir = ${docdir}\n'
DEBUG: line 'runstatedir = ${localstatedir}/run\n'
DEBUG: keep 'runstatedir = ${localstatedir}/run\n'
DEBUG: line 'sbindir = ${exec_prefix}/sbin\n'
DEBUG: keep 'sbindir = ${exec_prefix}/sbin\n'
DEBUG: line 'sharedstatedir = ${prefix}/com\n'
DEBUG: keep 'sharedstatedir = ${prefix}/com\n'
DEBUG: line 'srcdir = .\n'
DEBUG: keep 'srcdir = .\n'
DEBUG: line 'sysconfdir = /etc\n'
DEBUG: keep 'sysconfdir = /etc\n'
DEBUG: line 'target_alias = \n'
DEBUG: keep 'target_alias = \n'
DEBUG: line 'top_build_prefix = ../../\n'
DEBUG: keep 'top_build_prefix = ../../\n'
DEBUG: line 'top_builddir = ../..\n'
DEBUG: keep 'top_builddir = ../..\n'
DEBUG: line 'top_srcdir = ../..\n'
DEBUG: keep 'top_srcdir = ../..\n'
DEBUG: line 'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
DEBUG: keep 'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
DEBUG: line 'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
DEBUG: keep 'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# initialize variables for unconditional += appending\n'
DEBUG: keep '# initialize variables for unconditional += appending\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# We need to include all these C files here since the conditionals\n'
DEBUG: keep '# We need to include all these C files here since the conditionals\n'
DEBUG: line "# don't seem to be correctly expanded for the dist files.\n"
DEBUG: keep "# don't seem to be correctly expanded for the dist files.\n"
DEBUG: line 'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n'
DEBUG: set  'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n' ground -> multidef
DEBUG: keep 'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n'
DEBUG: line '\tgdksettings.c\n'
DEBUG: add  '\tgdksettings.c\n'
DEBUG: set  '\tgdksettings.c\n' multidef -> ground
DEBUG: line 'TEST_PROGS = \n'
DEBUG: keep 'TEST_PROGS = \n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '### testing rules\n'
DEBUG: set  '### testing rules\n' ground -> header
DEBUG: line '\n'
DEBUG: set  '\n' header -> ground
DEBUG: line '# Xvfb based test rules\n'
DEBUG: keep '# Xvfb based test rules\n'
DEBUG: line 'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
DEBUG: keep 'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
DEBUG: line 'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n'
DEBUG: set  'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n' ground -> multidef
DEBUG: keep 'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n'
DEBUG: line '   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n'
DEBUG: add  '   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n'
DEBUG: line '   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n'
DEBUG: add  '   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n'
DEBUG: line '  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n'
DEBUG: add  '  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n'
DEBUG: line '  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n'
DEBUG: add  '  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n'
DEBUG: line '  9995 9996 9997 9998 9999\n'
DEBUG: add  '  9995 9996 9997 9998 9999\n'
DEBUG: set  '  9995 9996 9997 9998 9999\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'SKIP_GDKTARGET = \\\n'
DEBUG: set  'SKIP_GDKTARGET = \\\n' ground -> multidef
DEBUG: keep 'SKIP_GDKTARGET = \\\n'
DEBUG: line '\ttest "$(gdktarget)" != "x11" \\\n'
DEBUG: add  '\ttest "$(gdktarget)" != "x11" \\\n'
DEBUG: line '\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
DEBUG: add  '\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
DEBUG: set  '\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'XVFB_START = \\\n'
DEBUG: set  'XVFB_START = \\\n' ground -> multidef
DEBUG: keep 'XVFB_START = \\\n'
DEBUG: line '\t${XVFB} -help 2>/dev/null 1>&2 \\\n'
DEBUG: add  '\t${XVFB} -help 2>/dev/null 1>&2 \\\n'
DEBUG: line '\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n'
DEBUG: add  '\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n'
DEBUG: line '\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n'
DEBUG: add  '\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n'
DEBUG: line '\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n'
DEBUG: add  '\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n'
DEBUG: line '\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n'
DEBUG: add  '\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n'
DEBUG: line '\t&& DISPLAY=:$$XID && export DISPLAY\n'
DEBUG: add  '\t&& DISPLAY=:$$XID && export DISPLAY\n'
DEBUG: set  '\t&& DISPLAY=:$$XID && export DISPLAY\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
DEBUG: keep 'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
DEBUG: line 'INCLUDES = \\\n'
DEBUG: set  'INCLUDES = \\\n' ground -> multidef
DEBUG: keep 'INCLUDES = \\\n'
DEBUG: line '\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n'
DEBUG: add  '\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n'
DEBUG: line '\t-DGDK_COMPILATION\t\\\n'
DEBUG: add  '\t-DGDK_COMPILATION\t\\\n'
DEBUG: line '\t-I$(top_srcdir)\t\t\\\n'
DEBUG: add  '\t-I$(top_srcdir)\t\t\\\n'
DEBUG: line '\t-I$(top_srcdir)/gdk\t\\\n'
DEBUG: add  '\t-I$(top_srcdir)/gdk\t\\\n'
DEBUG: line '\t-I$(top_builddir)/gdk\t\\\n'
DEBUG: add  '\t-I$(top_builddir)/gdk\t\\\n'
DEBUG: line '\t$(GTK_DEBUG_FLAGS) \t\\\n'
DEBUG: add  '\t$(GTK_DEBUG_FLAGS) \t\\\n'
DEBUG: line '\t$(GDK_DEP_CFLAGS)\n'
DEBUG: add  '\t$(GDK_DEP_CFLAGS)\n'
DEBUG: set  '\t$(GDK_DEP_CFLAGS)\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'LDADDS = $(GDK_DEP_LIBS)\n'
DEBUG: keep 'LDADDS = $(GDK_DEP_LIBS)\n'
DEBUG: line 'noinst_LTLIBRARIES = libgdk-x11.la\n'
DEBUG: keep 'noinst_LTLIBRARIES = libgdk-x11.la\n'
DEBUG: line 'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n'
DEBUG: set  'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n' ground -> multidef
DEBUG: keep 'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n'
DEBUG: line '\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n'
DEBUG: add  '\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n'
DEBUG: line '\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n'
DEBUG: add  '\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n'
DEBUG: line '\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n'
DEBUG: add  '\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n'
DEBUG: line '\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n'
DEBUG: add  '\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n'
DEBUG: line '\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n'
DEBUG: add  '\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n'
DEBUG: line '\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n'
DEBUG: add  '\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n'
DEBUG: line '\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n'
DEBUG: add  '\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n'
DEBUG: line '\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n'
DEBUG: add  '\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n'
DEBUG: line '\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n'
DEBUG: add  '\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n'
DEBUG: line '\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n'
DEBUG: add  '\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n'
DEBUG: line '\txsettings-client.c xsettings-common.h xsettings-common.c \\\n'
DEBUG: add  '\txsettings-client.c xsettings-common.h xsettings-common.c \\\n'
DEBUG: line '\t$(am__append_1) $(am__append_2)\n'
DEBUG: add  '\t$(am__append_1) $(am__append_2)\n'
DEBUG: set  '\t$(am__append_1) $(am__append_2)\n' multidef -> ground
DEBUG: line 'libgdkinclude_HEADERS = \\\n'
DEBUG: set  'libgdkinclude_HEADERS = \\\n' ground -> multidef
DEBUG: keep 'libgdkinclude_HEADERS = \\\n'
DEBUG: line '\tgdkx.h\n'
DEBUG: add  '\tgdkx.h\n'
DEBUG: set  '\tgdkx.h\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
DEBUG: keep 'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
DEBUG: line 'all: all-am\n'
DEBUG: keep 'all: all-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.SUFFIXES:\n'
DEBUG: line '.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
DEBUG: keep '.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
DEBUG: line '$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)\n'
DEBUG: set  '$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(top_srcdir)/Makefile.decl $(am__configure_deps)\n' ground -> skipjunk
DEBUG: line '\t@for dep in $?; do \\\n'
DEBUG: line "\t  case '$(am__configure_deps)' in \\\n"
DEBUG: line '\t    *$$dep*) \\\n'
DEBUG: line '\t      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \\\n'
DEBUG: line '\t        && { if test -f $@; then exit 0; else break; fi; }; \\\n'
DEBUG: line '\t      exit 1;; \\\n'
DEBUG: line '\t  esac; \\\n'
DEBUG: line '\tdone; \\\n'
DEBUG: line "\techo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign gdk/x11/Makefile'; \\\n"
DEBUG: line '\t$(am__cd) $(top_srcdir) && \\\n'
DEBUG: line '\t  $(AUTOMAKE) --foreign gdk/x11/Makefile\n'
DEBUG: line 'Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status\n'
DEBUG: line "\t@case '$?' in \\\n"
DEBUG: line '\t  *config.status*) \\\n'
DEBUG: line '\t    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \\\n'
DEBUG: line '\t  *) \\\n'
DEBUG: line "\t    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \\\n"
DEBUG: line '\t    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \\\n'
DEBUG: line '\tesac;\n'
DEBUG: line '$(top_srcdir)/Makefile.decl $(am__empty):\n'
DEBUG: set  '$(top_srcdir)/Makefile.decl $(am__empty):\n' skipjunk -> ground
DEBUG: push '$(top_srcdir)/Makefile.decl $(am__empty):\n'
DEBUG: line '$(top_srcdir)/Makefile.decl $(am__empty):\n'
DEBUG: keep '$(top_srcdir)/Makefile.decl $(am__empty):\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n'
DEBUG: set  '$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)\n' ground -> skipjunk
DEBUG: line '\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n'
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '$(top_srcdir)/configure:  $(am__configure_deps)\n'
DEBUG: set  '$(top_srcdir)/configure:  $(am__configure_deps)\n' ground -> skipjunk
DEBUG: line '\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n'
DEBUG: line '$(ACLOCAL_M4):  $(am__aclocal_m4_deps)\n'
DEBUG: line '\tcd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh\n'
DEBUG: line '$(am__aclocal_m4_deps):\n'
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-noinstPROGRAMS:\n'
DEBUG: keep 'clean-noinstPROGRAMS:\n'
DEBUG: line '\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
DEBUG: keep '\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
DEBUG: line '\techo " rm -f" $$list; \\\n'
DEBUG: keep '\techo " rm -f" $$list; \\\n'
DEBUG: line '\trm -f $$list || exit $$?; \\\n'
DEBUG: keep '\trm -f $$list || exit $$?; \\\n'
DEBUG: line '\ttest -n "$(EXEEXT)" || exit 0; \\\n'
DEBUG: keep '\ttest -n "$(EXEEXT)" || exit 0; \\\n'
DEBUG: line '\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
DEBUG: keep '\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
DEBUG: line '\techo " rm -f" $$list; \\\n'
DEBUG: keep '\techo " rm -f" $$list; \\\n'
DEBUG: line '\trm -f $$list\n'
DEBUG: keep '\trm -f $$list\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-noinstLTLIBRARIES:\n'
DEBUG: keep 'clean-noinstLTLIBRARIES:\n'
DEBUG: line '\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
DEBUG: keep '\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
DEBUG: line "\t@list='$(noinst_LTLIBRARIES)'; \\\n"
DEBUG: keep "\t@list='$(noinst_LTLIBRARIES)'; \\\n"
DEBUG: line '\tlocs=`for p in $$list; do echo $$p; done | \\\n'
DEBUG: keep '\tlocs=`for p in $$list; do echo $$p; done | \\\n'
DEBUG: line "\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
DEBUG: keep "\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
DEBUG: line '\t      sort -u`; \\\n'
DEBUG: keep '\t      sort -u`; \\\n'
DEBUG: line '\ttest -z "$$locs" || { \\\n'
DEBUG: keep '\ttest -z "$$locs" || { \\\n'
DEBUG: line '\t  echo rm -f $${locs}; \\\n'
DEBUG: keep '\t  echo rm -f $${locs}; \\\n'
DEBUG: line '\t  rm -f $${locs}; \\\n'
DEBUG: keep '\t  rm -f $${locs}; \\\n'
DEBUG: line '\t}\n'
DEBUG: keep '\t}\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
DEBUG: keep 'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
DEBUG: line '\t$(AM_V_CCLD)$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
DEBUG: keep '\t$(AM_V_CCLD)$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
DEBUG: keep 'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
DEBUG: line '\t@rm -f checksettings$(EXEEXT)\n'
DEBUG: keep '\t@rm -f checksettings$(EXEEXT)\n'
DEBUG: line '\t$(AM_V_CCLD)$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
DEBUG: keep '\t$(AM_V_CCLD)$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean-compile:\n'
DEBUG: keep 'mostlyclean-compile:\n'
DEBUG: line '\t-rm -f *.$(OBJEXT)\n'
DEBUG: keep '\t-rm -f *.$(OBJEXT)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean-compile:\n'
DEBUG: keep 'distclean-compile:\n'
DEBUG: line '\t-rm -f *.tab.c\n'
DEBUG: keep '\t-rm -f *.tab.c\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '#include ./$(DEPDIR)/checksettings.Po # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkapplaunchcontext-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkasync.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkcolor-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkcursor-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkdisplay-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkdnd-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkdrawable-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkevents-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkfont-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkgc-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkgeometry-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkglobals-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkim-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkimage-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkinput-none.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkinput-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkinput-xfree.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkinput.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkkeys-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkmain-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkpixmap-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkproperty-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkscreen-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkselection-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkspawn-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdktestutils-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkvisual-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkwindow-x11.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkxftdefaults.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/gdkxid.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/xsettings-client.Plo # am--include-marker\n'
DEBUG: line '#include ./$(DEPDIR)/xsettings-common.Plo # am--include-marker\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '$(am__depfiles_remade):\n'
DEBUG: set  '$(am__depfiles_remade):\n' ground -> skipjunk
DEBUG: line '\t@$(MKDIR_P) $(@D)\n'
DEBUG: line "\t@echo '# dummy' >$@-t && $(am__mv) $@-t $@\n"
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'am--depfiles: $(am__depfiles_remade)\n'
DEBUG: set  'am--depfiles: $(am__depfiles_remade)\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.c.o:\n'
DEBUG: set  '.c.$(OBJEXT):\n' ground -> skiprule
DEBUG: keep '.c.$(OBJEXT):\n'
DEBUG: line '#\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n'
DEBUG: keep '#\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n'
DEBUG: set  '#\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n' skiprule -> skipjunk
DEBUG: line '#\t$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n'
DEBUG: line "#\t$(AM_V_CC)source='$<' object='$@' libtool=no \n"
DEBUG: line '#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \n'
DEBUG: line '\t$(AM_V_CC)$(COMPILE) -c -o $@ $<\n'
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.c.obj:\n'
DEBUG: keep '.c.obj:\n'
DEBUG: line "#\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`\n"
DEBUG: line '#\t$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po\n'
DEBUG: line "#\t$(AM_V_CC)source='$<' object='$@' libtool=no \n"
DEBUG: keep "#\t$(AM_V_CC)source='$<' object='$@' libtool=no \n"
DEBUG: line '#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \n'
DEBUG: line "\t$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
DEBUG: keep "\t$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.c.lo:\n'
DEBUG: keep '.c.lo:\n'
DEBUG: line '#\t$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n'
DEBUG: line '#\t$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo\n'
DEBUG: line "#\t$(AM_V_CC)source='$<' object='$@' libtool=yes \n"
DEBUG: keep "#\t$(AM_V_CC)source='$<' object='$@' libtool=yes \n"
DEBUG: line '#\tDEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \n'
DEBUG: line '\t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n'
DEBUG: keep '\t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean-libtool:\n'
DEBUG: keep 'mostlyclean-libtool:\n'
DEBUG: line '\t-rm -f *.lo\n'
DEBUG: keep '\t-rm -f *.lo\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-libtool:\n'
DEBUG: keep 'clean-libtool:\n'
DEBUG: line '\t-rm -rf .libs _libs\n'
DEBUG: keep '\t-rm -rf .libs _libs\n'
DEBUG: line 'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
DEBUG: keep 'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
DEBUG: line '\t@$(NORMAL_INSTALL)\n'
DEBUG: keep '\t@$(NORMAL_INSTALL)\n'
DEBUG: line '\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
DEBUG: keep '\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
DEBUG: line '\tif test -n "$$list"; then \\\n'
DEBUG: keep '\tif test -n "$$list"; then \\\n'
DEBUG: line '\t  echo " $(MKDIR_P) \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
DEBUG: keep '\t  echo " $(MKDIR_P) \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
DEBUG: line '\t  $(MKDIR_P) "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
DEBUG: keep '\t  $(MKDIR_P) "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
DEBUG: line '\tfi; \\\n'
DEBUG: keep '\tfi; \\\n'
DEBUG: line '\tfor p in $$list; do \\\n'
DEBUG: keep '\tfor p in $$list; do \\\n'
DEBUG: line '\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
DEBUG: keep '\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
DEBUG: line '\t  echo "$$d$$p"; \\\n'
DEBUG: keep '\t  echo "$$d$$p"; \\\n'
DEBUG: line '\tdone | $(am__base_list) | \\\n'
DEBUG: keep '\tdone | $(am__base_list) | \\\n'
DEBUG: line '\twhile read files; do \\\n'
DEBUG: keep '\twhile read files; do \\\n'
DEBUG: line '\t  echo " $(INSTALL_HEADER) $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
DEBUG: keep '\t  echo " $(INSTALL_HEADER) $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
DEBUG: line '\t  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
DEBUG: keep '\t  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
DEBUG: line '\tdone\n'
DEBUG: keep '\tdone\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'uninstall-libgdkincludeHEADERS:\n'
DEBUG: keep 'uninstall-libgdkincludeHEADERS:\n'
DEBUG: line '\t@$(NORMAL_UNINSTALL)\n'
DEBUG: keep '\t@$(NORMAL_UNINSTALL)\n'
DEBUG: line '\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
DEBUG: keep '\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
DEBUG: line "\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
DEBUG: keep "\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
DEBUG: line "\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
DEBUG: keep "\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'ID: $(am__tagged_files)\n'
DEBUG: set  'ID: $(am__tagged_files)\n' ground -> skipjunk
DEBUG: line '\t$(am__define_uniq_tagged_files); mkid -fID $$unique\n'
DEBUG: line 'tags: tags-am\n'
DEBUG: set  'tags: tags-am\n' skipjunk -> ground
DEBUG: push 'tags: tags-am\n'
DEBUG: line 'tags: tags-am\n'
DEBUG: keep 'tags: tags-am\n'
DEBUG: line 'TAGS: tags\n'
DEBUG: keep 'TAGS: tags\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: keep 'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: line '\tset x; \\\n'
DEBUG: keep '\tset x; \\\n'
DEBUG: line '\there=`pwd`; \\\n'
DEBUG: keep '\there=`pwd`; \\\n'
DEBUG: line '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: keep '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: line '\tshift; \\\n'
DEBUG: keep '\tshift; \\\n'
DEBUG: line '\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
DEBUG: keep '\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
DEBUG: line '\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
DEBUG: keep '\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
DEBUG: line '\t  if test $$# -gt 0; then \\\n'
DEBUG: keep '\t  if test $$# -gt 0; then \\\n'
DEBUG: line '\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: keep '\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: line '\t      "$$@" $$unique; \\\n'
DEBUG: keep '\t      "$$@" $$unique; \\\n'
DEBUG: line '\t  else \\\n'
DEBUG: keep '\t  else \\\n'
DEBUG: line '\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: keep '\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
DEBUG: line '\t      $$unique; \\\n'
DEBUG: keep '\t      $$unique; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tfi\n'
DEBUG: keep '\tfi\n'
DEBUG: line 'ctags: ctags-am\n'
DEBUG: keep 'ctags: ctags-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'CTAGS: ctags\n'
DEBUG: keep 'CTAGS: ctags\n'
DEBUG: line 'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: keep 'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
DEBUG: line '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: keep '\t$(am__define_uniq_tagged_files); \\\n'
DEBUG: line '\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
DEBUG: keep '\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
DEBUG: line '\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
DEBUG: keep '\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
DEBUG: line '\t     $$unique\n'
DEBUG: keep '\t     $$unique\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'GTAGS:\n'
DEBUG: keep 'GTAGS:\n'
DEBUG: line '\there=`$(am__cd) $(top_builddir) && pwd` \\\n'
DEBUG: keep '\there=`$(am__cd) $(top_builddir) && pwd` \\\n'
DEBUG: line '\t  && $(am__cd) $(top_srcdir) \\\n'
DEBUG: keep '\t  && $(am__cd) $(top_srcdir) \\\n'
DEBUG: line '\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
DEBUG: keep '\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
DEBUG: line 'cscopelist: cscopelist-am\n'
DEBUG: keep 'cscopelist: cscopelist-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'cscopelist-am: $(am__tagged_files)\n'
DEBUG: keep 'cscopelist-am: $(am__tagged_files)\n'
DEBUG: line "\tlist='$(am__tagged_files)'; \\\n"
DEBUG: keep "\tlist='$(am__tagged_files)'; \\\n"
DEBUG: line '\tcase "$(srcdir)" in \\\n'
DEBUG: keep '\tcase "$(srcdir)" in \\\n'
DEBUG: line '\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
DEBUG: keep '\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
DEBUG: line '\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
DEBUG: keep '\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
DEBUG: line '\tesac; \\\n'
DEBUG: keep '\tesac; \\\n'
DEBUG: line '\tfor i in $$list; do \\\n'
DEBUG: keep '\tfor i in $$list; do \\\n'
DEBUG: line '\t  if test -f "$$i"; then \\\n'
DEBUG: keep '\t  if test -f "$$i"; then \\\n'
DEBUG: line '\t    echo "$(subdir)/$$i"; \\\n'
DEBUG: keep '\t    echo "$(subdir)/$$i"; \\\n'
DEBUG: line '\t  else \\\n'
DEBUG: keep '\t  else \\\n'
DEBUG: line '\t    echo "$$sdir/$$i"; \\\n'
DEBUG: keep '\t    echo "$$sdir/$$i"; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tdone >> $(top_builddir)/cscope.files\n'
DEBUG: keep '\tdone >> $(top_builddir)/cscope.files\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean-tags:\n'
DEBUG: keep 'distclean-tags:\n'
DEBUG: line '\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n'
DEBUG: keep '\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line "# Recover from deleted '.trs' file; this should ensure that\n"
DEBUG: keep "# Recover from deleted '.trs' file; this should ensure that\n"
DEBUG: line '# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
DEBUG: keep '# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
DEBUG: line "# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
DEBUG: keep "# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
DEBUG: line '# to avoid problems with "make -n".\n'
DEBUG: keep '# to avoid problems with "make -n".\n'
DEBUG: line '.log.trs:\n'
DEBUG: keep '.log.trs:\n'
DEBUG: line '\trm -f $< $@\n'
DEBUG: keep '\trm -f $< $@\n'
DEBUG: line '\t$(MAKE) $(AM_MAKEFLAGS) $<\n'
DEBUG: keep '\t$(MAKE) $(AM_MAKEFLAGS) $<\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line "# Leading 'am--fnord' is there to ensure the list of targets does not\n"
DEBUG: keep "# Leading 'am--fnord' is there to ensure the list of targets does not\n"
DEBUG: line "# expand to empty, as could happen e.g. with make check TESTS=''.\n"
DEBUG: keep "# expand to empty, as could happen e.g. with make check TESTS=''.\n"
DEBUG: line 'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
DEBUG: keep 'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
DEBUG: line 'am--force-recheck:\n'
DEBUG: keep 'am--force-recheck:\n'
DEBUG: line '\t@:\n'
DEBUG: keep '\t@:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
DEBUG: keep '$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
DEBUG: line '\t@$(am__set_TESTS_bases); \\\n'
DEBUG: keep '\t@$(am__set_TESTS_bases); \\\n'
DEBUG: line '\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
DEBUG: keep '\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
DEBUG: line '\tredo_bases=`for i in $$bases; do \\\n'
DEBUG: keep '\tredo_bases=`for i in $$bases; do \\\n'
DEBUG: line '\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
DEBUG: keep '\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
DEBUG: line '\t            done`; \\\n'
DEBUG: keep '\t            done`; \\\n'
DEBUG: line '\tif test -n "$$redo_bases"; then \\\n'
DEBUG: keep '\tif test -n "$$redo_bases"; then \\\n'
DEBUG: line '\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
DEBUG: keep '\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
DEBUG: line '\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
DEBUG: keep '\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
DEBUG: line '\t  if $(am__make_dryrun); then :; else \\\n'
DEBUG: keep '\t  if $(am__make_dryrun); then :; else \\\n'
DEBUG: line '\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
DEBUG: keep '\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tfi; \\\n'
DEBUG: keep '\tfi; \\\n'
DEBUG: line '\tif test -n "$$am__remaking_logs"; then \\\n'
DEBUG: keep '\tif test -n "$$am__remaking_logs"; then \\\n'
DEBUG: line '\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
DEBUG: keep '\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
DEBUG: line '\t       "recursion detected" >&2; \\\n'
DEBUG: keep '\t       "recursion detected" >&2; \\\n'
DEBUG: line '\telif test -n "$$redo_logs"; then \\\n'
DEBUG: keep '\telif test -n "$$redo_logs"; then \\\n'
DEBUG: line '\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n'
DEBUG: keep '\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n'
DEBUG: line '\tfi; \\\n'
DEBUG: keep '\tfi; \\\n'
DEBUG: line '\tif $(am__make_dryrun); then :; else \\\n'
DEBUG: keep '\tif $(am__make_dryrun); then :; else \\\n'
DEBUG: line '\t  st=0;  \\\n'
DEBUG: keep '\t  st=0;  \\\n'
DEBUG: line '\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
DEBUG: keep '\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
DEBUG: line '\t  for i in $$redo_bases; do \\\n'
DEBUG: keep '\t  for i in $$redo_bases; do \\\n'
DEBUG: line '\t    test -f $$i.trs && test -r $$i.trs \\\n'
DEBUG: keep '\t    test -f $$i.trs && test -r $$i.trs \\\n'
DEBUG: line '\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
DEBUG: keep '\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
DEBUG: line '\t    test -f $$i.log && test -r $$i.log \\\n'
DEBUG: keep '\t    test -f $$i.log && test -r $$i.log \\\n'
DEBUG: line '\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
DEBUG: keep '\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
DEBUG: line '\t  done; \\\n'
DEBUG: keep '\t  done; \\\n'
DEBUG: line '\t  test $$st -eq 0 || exit 1; \\\n'
DEBUG: keep '\t  test $$st -eq 0 || exit 1; \\\n'
DEBUG: line '\tfi\n'
DEBUG: keep '\tfi\n'
DEBUG: line '\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
DEBUG: keep '\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
DEBUG: line "\tws='[ \t]'; \\\n"
DEBUG: keep "\tws='[ \t]'; \\\n"
DEBUG: line '\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
DEBUG: keep '\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
DEBUG: line '\ttest -n "$$results" || results=/dev/null; \\\n'
DEBUG: keep '\ttest -n "$$results" || results=/dev/null; \\\n'
DEBUG: line '\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
DEBUG: keep '\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
DEBUG: line '\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
DEBUG: keep '\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
DEBUG: line '\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
DEBUG: keep '\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
DEBUG: line '\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
DEBUG: keep '\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
DEBUG: line '\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
DEBUG: keep '\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
DEBUG: line '\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
DEBUG: keep '\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
DEBUG: line '\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
DEBUG: keep '\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
DEBUG: line '\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
DEBUG: keep '\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
DEBUG: line '\t  success=true; \\\n'
DEBUG: keep '\t  success=true; \\\n'
DEBUG: line '\telse \\\n'
DEBUG: keep '\telse \\\n'
DEBUG: line '\t  success=false; \\\n'
DEBUG: keep '\t  success=false; \\\n'
DEBUG: line '\tfi; \\\n'
DEBUG: keep '\tfi; \\\n'
DEBUG: line "\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
DEBUG: keep "\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
DEBUG: line '\tresult_count () \\\n'
DEBUG: keep '\tresult_count () \\\n'
DEBUG: line '\t{ \\\n'
DEBUG: keep '\t{ \\\n'
DEBUG: line '\t    if test x"$$1" = x"--maybe-color"; then \\\n'
DEBUG: keep '\t    if test x"$$1" = x"--maybe-color"; then \\\n'
DEBUG: line '\t      maybe_colorize=yes; \\\n'
DEBUG: keep '\t      maybe_colorize=yes; \\\n'
DEBUG: line '\t    elif test x"$$1" = x"--no-color"; then \\\n'
DEBUG: keep '\t    elif test x"$$1" = x"--no-color"; then \\\n'
DEBUG: line '\t      maybe_colorize=no; \\\n'
DEBUG: keep '\t      maybe_colorize=no; \\\n'
DEBUG: line '\t    else \\\n'
DEBUG: keep '\t    else \\\n'
DEBUG: line '\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
DEBUG: keep '\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
DEBUG: line '\t    fi; \\\n'
DEBUG: keep '\t    fi; \\\n'
DEBUG: line '\t    shift; \\\n'
DEBUG: keep '\t    shift; \\\n'
DEBUG: line '\t    desc=$$1 count=$$2; \\\n'
DEBUG: keep '\t    desc=$$1 count=$$2; \\\n'
DEBUG: line '\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
DEBUG: keep '\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
DEBUG: line '\t      color_start=$$3 color_end=$$std; \\\n'
DEBUG: keep '\t      color_start=$$3 color_end=$$std; \\\n'
DEBUG: line '\t    else \\\n'
DEBUG: keep '\t    else \\\n'
DEBUG: line '\t      color_start= color_end=; \\\n'
DEBUG: keep '\t      color_start= color_end=; \\\n'
DEBUG: line '\t    fi; \\\n'
DEBUG: keep '\t    fi; \\\n'
DEBUG: line '\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
DEBUG: keep '\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
DEBUG: line '\t}; \\\n'
DEBUG: keep '\t}; \\\n'
DEBUG: line '\tcreate_testsuite_report () \\\n'
DEBUG: keep '\tcreate_testsuite_report () \\\n'
DEBUG: line '\t{ \\\n'
DEBUG: keep '\t{ \\\n'
DEBUG: line '\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
DEBUG: keep '\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
DEBUG: line '\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
DEBUG: keep '\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
DEBUG: line '\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
DEBUG: keep '\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
DEBUG: line '\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
DEBUG: keep '\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
DEBUG: line '\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
DEBUG: keep '\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
DEBUG: line '\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
DEBUG: keep '\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
DEBUG: line '\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
DEBUG: keep '\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
DEBUG: line '\t}; \\\n'
DEBUG: keep '\t}; \\\n'
DEBUG: line '\t{\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t{\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
DEBUG: keep '\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
DEBUG: line '\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
DEBUG: keep '\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
DEBUG: line '\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
DEBUG: keep '\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
DEBUG: line '\t  echo;\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t  echo;\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
DEBUG: keep '\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
DEBUG: line '\t  echo;\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t  echo;\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
DEBUG: keep '\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
DEBUG: line '\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
DEBUG: keep '\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
DEBUG: line '\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
DEBUG: keep '\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
DEBUG: line '\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
DEBUG: keep '\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
DEBUG: line '\tif $$success; then\t\t\t\t\t\t\\\n'
DEBUG: keep '\tif $$success; then\t\t\t\t\t\t\\\n'
DEBUG: line '\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t else\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t else\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t  col="$$red";\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t  col="$$red";\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
DEBUG: keep '\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
DEBUG: line '\tfi;\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\tfi;\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
DEBUG: keep '\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
DEBUG: line '\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
DEBUG: keep '\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
DEBUG: line '\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
DEBUG: keep '\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
DEBUG: line '\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
DEBUG: keep '\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
DEBUG: line '\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
DEBUG: keep '\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
DEBUG: line '\tif $$success; then :; else\t\t\t\t\t\\\n'
DEBUG: keep '\tif $$success; then :; else\t\t\t\t\t\\\n'
DEBUG: line '\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
DEBUG: keep '\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
DEBUG: line '\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
DEBUG: keep '\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
DEBUG: line '\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
DEBUG: keep '\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
DEBUG: line '\t  fi;\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\t  fi;\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
DEBUG: keep '\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
DEBUG: line '\tfi;\t\t\t\t\t\t\t\t\\\n'
DEBUG: keep '\tfi;\t\t\t\t\t\t\t\t\\\n'
DEBUG: line '\t$$success || exit 1\n'
DEBUG: keep '\t$$success || exit 1\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'check-TESTS: \n'
DEBUG: keep 'check-TESTS: \n'
DEBUG: line '\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
DEBUG: keep '\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
DEBUG: line '\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
DEBUG: keep '\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
DEBUG: line '\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
DEBUG: keep '\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
DEBUG: line '\t@set +e; $(am__set_TESTS_bases); \\\n'
DEBUG: keep '\t@set +e; $(am__set_TESTS_bases); \\\n'
DEBUG: line '\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
DEBUG: keep '\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
DEBUG: line '\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
DEBUG: keep '\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
DEBUG: line '\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
DEBUG: keep '\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
DEBUG: line '\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
DEBUG: keep '\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
DEBUG: line '\texit $$?;\n'
DEBUG: keep '\texit $$?;\n'
DEBUG: line 'recheck: all \n'
DEBUG: keep 'recheck: all \n'
DEBUG: line '\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
DEBUG: keep '\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
DEBUG: line '\t@set +e; $(am__set_TESTS_bases); \\\n'
DEBUG: keep '\t@set +e; $(am__set_TESTS_bases); \\\n'
DEBUG: line '\tbases=`for i in $$bases; do echo $$i; done \\\n'
DEBUG: keep '\tbases=`for i in $$bases; do echo $$i; done \\\n'
DEBUG: line '\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
DEBUG: keep '\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
DEBUG: line '\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
DEBUG: keep '\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
DEBUG: line '\tlog_list=`echo $$log_list`; \\\n'
DEBUG: keep '\tlog_list=`echo $$log_list`; \\\n'
DEBUG: line '\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n'
DEBUG: keep '\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n'
DEBUG: line '\t        am__force_recheck=am--force-recheck \\\n'
DEBUG: keep '\t        am__force_recheck=am--force-recheck \\\n'
DEBUG: line '\t        TEST_LOGS="$$log_list"; \\\n'
DEBUG: keep '\t        TEST_LOGS="$$log_list"; \\\n'
DEBUG: line '\texit $$?\n'
DEBUG: keep '\texit $$?\n'
DEBUG: line 'checksettings.log: checksettings$(EXEEXT)\n'
DEBUG: keep 'checksettings.log: checksettings$(EXEEXT)\n'
DEBUG: line "\t@p='checksettings$(EXEEXT)'; \\\n"
DEBUG: keep "\t@p='checksettings$(EXEEXT)'; \\\n"
DEBUG: line "\tb='checksettings'; \\\n"
DEBUG: keep "\tb='checksettings'; \\\n"
DEBUG: line '\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
DEBUG: keep '\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
DEBUG: line '\t--log-file $$b.log --trs-file $$b.trs \\\n'
DEBUG: keep '\t--log-file $$b.log --trs-file $$b.trs \\\n'
DEBUG: line '\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
DEBUG: keep '\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
DEBUG: line '\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
DEBUG: keep '\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
DEBUG: line '.test.log:\n'
DEBUG: keep '.test.log:\n'
DEBUG: line "\t@p='$<'; \\\n"
DEBUG: keep "\t@p='$<'; \\\n"
DEBUG: line '\t$(am__set_b); \\\n'
DEBUG: keep '\t$(am__set_b); \\\n'
DEBUG: line '\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
DEBUG: keep '\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
DEBUG: line '\t--log-file $$b.log --trs-file $$b.trs \\\n'
DEBUG: keep '\t--log-file $$b.log --trs-file $$b.trs \\\n'
DEBUG: line '\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
DEBUG: keep '\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
DEBUG: line '\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
DEBUG: keep '\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
DEBUG: line '#.test$(EXEEXT).log:\n'
DEBUG: keep '#.test$(EXEEXT).log:\n'
DEBUG: line "#\t@p='$<'; \\\n"
DEBUG: keep "#\t@p='$<'; \\\n"
DEBUG: line '#\t$(am__set_b); \\\n'
DEBUG: keep '#\t$(am__set_b); \\\n'
DEBUG: line '#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
DEBUG: keep '#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
DEBUG: line '#\t--log-file $$b.log --trs-file $$b.trs \\\n'
DEBUG: keep '#\t--log-file $$b.log --trs-file $$b.trs \\\n'
DEBUG: line '#\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
DEBUG: keep '#\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
DEBUG: line '#\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
DEBUG: keep '#\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
DEBUG: line 'distdir: $(BUILT_SOURCES)\n'
DEBUG: keep 'distdir: $(BUILT_SOURCES)\n'
DEBUG: line '\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n'
DEBUG: keep '\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distdir-am: $(DISTFILES)\n'
DEBUG: keep 'distdir-am: $(DISTFILES)\n'
DEBUG: line '\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: keep '\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: line '\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: keep '\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
DEBUG: line "\tlist='$(DISTFILES)'; \\\n"
DEBUG: keep "\tlist='$(DISTFILES)'; \\\n"
DEBUG: line '\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
DEBUG: keep '\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
DEBUG: line '\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
DEBUG: keep '\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
DEBUG: line '\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
DEBUG: keep '\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
DEBUG: line '\tcase $$dist_files in \\\n'
DEBUG: keep '\tcase $$dist_files in \\\n'
DEBUG: line '\t  */*) $(MKDIR_P) `echo "$$dist_files" | \\\n'
DEBUG: keep '\t  */*) $(MKDIR_P) `echo "$$dist_files" | \\\n'
DEBUG: line "\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
DEBUG: keep "\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
DEBUG: line '\t\t\t   sort -u` ;; \\\n'
DEBUG: keep '\t\t\t   sort -u` ;; \\\n'
DEBUG: line '\tesac; \\\n'
DEBUG: keep '\tesac; \\\n'
DEBUG: line '\tfor file in $$dist_files; do \\\n'
DEBUG: keep '\tfor file in $$dist_files; do \\\n'
DEBUG: line '\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
DEBUG: keep '\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
DEBUG: line '\t  if test -d $$d/$$file; then \\\n'
DEBUG: keep '\t  if test -d $$d/$$file; then \\\n'
DEBUG: line '\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
DEBUG: keep '\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
DEBUG: line '\t    if test -d "$(distdir)/$$file"; then \\\n'
DEBUG: keep '\t    if test -d "$(distdir)/$$file"; then \\\n'
DEBUG: line '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: keep '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: line '\t    fi; \\\n'
DEBUG: keep '\t    fi; \\\n'
DEBUG: line '\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
DEBUG: keep '\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
DEBUG: line '\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: keep '\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: line '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: keep '\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
DEBUG: line '\t    fi; \\\n'
DEBUG: keep '\t    fi; \\\n'
DEBUG: line '\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: keep '\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
DEBUG: line '\t  else \\\n'
DEBUG: keep '\t  else \\\n'
DEBUG: line '\t    test -f "$(distdir)/$$file" \\\n'
DEBUG: keep '\t    test -f "$(distdir)/$$file" \\\n'
DEBUG: line '\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
DEBUG: keep '\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
DEBUG: line '\t    || exit 1; \\\n'
DEBUG: keep '\t    || exit 1; \\\n'
DEBUG: line '\t  fi; \\\n'
DEBUG: keep '\t  fi; \\\n'
DEBUG: line '\tdone\n'
DEBUG: keep '\tdone\n'
DEBUG: line 'check-am: all-am\n'
DEBUG: keep 'check-am: all-am\n'
DEBUG: line '\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local\n'
DEBUG: keep '\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local\n'
DEBUG: line 'check: check-am\n'
DEBUG: keep 'check: check-am\n'
DEBUG: line 'all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
DEBUG: keep 'all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
DEBUG: line 'installdirs:\n'
DEBUG: keep 'installdirs:\n'
DEBUG: line '\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
DEBUG: keep '\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
DEBUG: line '\t  test -z "$$dir" || $(MKDIR_P) "$$dir"; \\\n'
DEBUG: keep '\t  test -z "$$dir" || $(MKDIR_P) "$$dir"; \\\n'
DEBUG: line '\tdone\n'
DEBUG: keep '\tdone\n'
DEBUG: line 'install: install-am\n'
DEBUG: keep 'install: install-am\n'
DEBUG: line 'install-exec: install-exec-am\n'
DEBUG: keep 'install-exec: install-exec-am\n'
DEBUG: line 'install-data: install-data-am\n'
DEBUG: keep 'install-data: install-data-am\n'
DEBUG: line 'uninstall: uninstall-am\n'
DEBUG: keep 'uninstall: uninstall-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-am: all-am\n'
DEBUG: keep 'install-am: all-am\n'
DEBUG: line '\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n'
DEBUG: keep '\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'installcheck: installcheck-am\n'
DEBUG: keep 'installcheck: installcheck-am\n'
DEBUG: line 'install-strip:\n'
DEBUG: keep 'install-strip:\n'
DEBUG: line "\tif test -z '$(STRIP)'; then \\\n"
DEBUG: keep "\tif test -z '$(STRIP)'; then \\\n"
DEBUG: line '\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\\n'
DEBUG: keep '\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\\n'
DEBUG: line '\t    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: keep '\t    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: line '\t      install; \\\n'
DEBUG: keep '\t      install; \\\n'
DEBUG: line '\telse \\\n'
DEBUG: keep '\telse \\\n'
DEBUG: line '\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\\n'
DEBUG: keep '\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\\n'
DEBUG: line '\t    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: keep '\t    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\\n'
DEBUG: line '\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'$(STRIP)\'" install; \\\n'
DEBUG: keep '\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'$(STRIP)\'" install; \\\n'
DEBUG: line '\tfi\n'
DEBUG: keep '\tfi\n'
DEBUG: line 'mostlyclean-generic:\n'
DEBUG: keep 'mostlyclean-generic:\n'
DEBUG: line '\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
DEBUG: keep '\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
DEBUG: line '\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
DEBUG: keep '\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
DEBUG: line '\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
DEBUG: keep '\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-generic:\n'
DEBUG: keep 'clean-generic:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean-generic:\n'
DEBUG: keep 'distclean-generic:\n'
DEBUG: line '\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
DEBUG: keep '\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
DEBUG: line '\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
DEBUG: keep '\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'maintainer-clean-generic:\n'
DEBUG: set  'maintainer-clean-generic:\n' ground -> skipjunk
DEBUG: line '\t@echo "This command is intended for maintainers to use"\n'
DEBUG: line '\t@echo "it deletes files that may require special tools to rebuild."\n'
DEBUG: line 'clean: clean-am\n'
DEBUG: set  'clean: clean-am\n' skipjunk -> ground
DEBUG: push 'clean: clean-am\n'
DEBUG: line 'clean: clean-am\n'
DEBUG: keep 'clean: clean-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n'
DEBUG: set  'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n' ground -> multidef
DEBUG: keep 'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n'
DEBUG: line '\tclean-noinstPROGRAMS mostlyclean-am\n'
DEBUG: add  '\tclean-noinstPROGRAMS mostlyclean-am\n'
DEBUG: set  '\tclean-noinstPROGRAMS mostlyclean-am\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'distclean: distclean-am\n'
DEBUG: keep 'distclean: distclean-am\n'
DEBUG: line '\t\t-rm -f ./$(DEPDIR)/checksettings.Po\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkapplaunchcontext-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkasync.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkcolor-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkcursor-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkdisplay-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkdnd-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkdrawable-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkevents-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkfont-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkgc-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkgeometry-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkglobals-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkim-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkimage-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput-none.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput-xfree.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkkeys-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkmain-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkpixmap-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkproperty-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkscreen-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkselection-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkspawn-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdktestutils-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkvisual-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkwindow-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkxftdefaults.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkxid.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/xsettings-client.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/xsettings-common.Plo\n'
DEBUG: line '\t-rm -f Makefile\n'
DEBUG: keep '\t-rm -f Makefile\n'
DEBUG: line 'distclean-am: clean-am distclean-compile distclean-generic \\\n'
DEBUG: set  'distclean-am: clean-am distclean-compile distclean-generic \\\n' ground -> multidef
DEBUG: keep 'distclean-am: clean-am distclean-compile distclean-generic \\\n'
DEBUG: line '\tdistclean-tags\n'
DEBUG: add  '\tdistclean-tags\n'
DEBUG: set  '\tdistclean-tags\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'dvi: dvi-am\n'
DEBUG: set  'dvi: dvi-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'dvi-am:\n'
DEBUG: set  'dvi-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'html: html-am\n'
DEBUG: keep 'html: html-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'html-am:\n'
DEBUG: keep 'html-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'info: info-am\n'
DEBUG: set  'info: info-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'info-am:\n'
DEBUG: set  'info-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-data-am: install-libgdkincludeHEADERS\n'
DEBUG: keep 'install-data-am: install-libgdkincludeHEADERS\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-dvi: install-dvi-am\n'
DEBUG: set  'install-dvi: install-dvi-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-dvi-am:\n'
DEBUG: set  'install-dvi-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-exec-am:\n'
DEBUG: keep 'install-exec-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-html: install-html-am\n'
DEBUG: keep 'install-html: install-html-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-html-am:\n'
DEBUG: keep 'install-html-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-info: install-info-am\n'
DEBUG: set  'install-info: install-info-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-info-am:\n'
DEBUG: set  'install-info-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-man:\n'
DEBUG: keep 'install-man:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-pdf: install-pdf-am\n'
DEBUG: set  'install-pdf: install-pdf-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-pdf-am:\n'
DEBUG: set  'install-pdf-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-ps: install-ps-am\n'
DEBUG: set  'install-ps: install-ps-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'install-ps-am:\n'
DEBUG: set  'install-ps-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'installcheck-am:\n'
DEBUG: keep 'installcheck-am:\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'maintainer-clean: maintainer-clean-am\n'
DEBUG: set  'maintainer-clean: maintainer-clean-am\n' ground -> skipjunk
DEBUG: line '\t\t-rm -f ./$(DEPDIR)/checksettings.Po\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkapplaunchcontext-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkasync.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkcolor-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkcursor-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkdisplay-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkdnd-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkdrawable-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkevents-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkfont-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkgc-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkgeometry-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkglobals-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkim-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkimage-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput-none.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput-xfree.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkinput.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkkeys-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkmain-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkpixmap-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkproperty-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkscreen-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkselection-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkspawn-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdktestutils-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkvisual-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkwindow-x11.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkxftdefaults.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/gdkxid.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/xsettings-client.Plo\n'
DEBUG: line '\t-rm -f ./$(DEPDIR)/xsettings-common.Plo\n'
DEBUG: line '\t-rm -f Makefile\n'
DEBUG: line 'maintainer-clean-am: distclean-am maintainer-clean-generic\n'
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean: mostlyclean-am\n'
DEBUG: keep 'mostlyclean: mostlyclean-am\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n'
DEBUG: set  'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n' ground -> multidef
DEBUG: keep 'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n'
DEBUG: line '\tmostlyclean-libtool\n'
DEBUG: add  '\tmostlyclean-libtool\n'
DEBUG: set  '\tmostlyclean-libtool\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'pdf: pdf-am\n'
DEBUG: set  'pdf: pdf-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'pdf-am:\n'
DEBUG: set  'pdf-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'ps: ps-am\n'
DEBUG: set  'ps: ps-am\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'ps-am:\n'
DEBUG: set  'ps-am:\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line 'uninstall-am: uninstall-libgdkincludeHEADERS\n'
DEBUG: keep 'uninstall-am: uninstall-libgdkincludeHEADERS\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.MAKE: check-am install-am install-strip\n'
DEBUG: set  '.MAKE: check-am install-am install-strip\n' ground -> skipjunk
DEBUG: line '\n'
DEBUG: set  '\n' skipjunk -> ground
DEBUG: push '\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \\\n'
DEBUG: set  '.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \\\n' ground -> multidef
DEBUG: keep '.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \\\n'
DEBUG: line '\tcheck-am check-local clean clean-generic clean-libtool \\\n'
DEBUG: add  '\tcheck-am check-local clean clean-generic clean-libtool \\\n'
DEBUG: line '\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n'
DEBUG: add  '\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n'
DEBUG: line '\tctags ctags-am distclean distclean-compile distclean-generic \\\n'
DEBUG: add  '\tctags ctags-am distclean distclean-compile distclean-generic \\\n'
DEBUG: line '\tdistclean-libtool distclean-tags distdir dvi dvi-am html \\\n'
DEBUG: add  '\tdistclean-libtool distclean-tags distdir dvi dvi-am html \\\n'
DEBUG: line '\thtml-am info info-am install install-am install-data \\\n'
DEBUG: add  '\thtml-am info info-am install install-am install-data \\\n'
DEBUG: line '\tinstall-data-am install-dvi install-dvi-am install-exec \\\n'
DEBUG: add  '\tinstall-data-am install-dvi install-dvi-am install-exec \\\n'
DEBUG: line '\tinstall-exec-am install-html install-html-am install-info \\\n'
DEBUG: add  '\tinstall-exec-am install-html install-html-am install-info \\\n'
DEBUG: line '\tinstall-info-am install-libgdkincludeHEADERS install-man \\\n'
DEBUG: add  '\tinstall-info-am install-libgdkincludeHEADERS install-man \\\n'
DEBUG: line '\tinstall-pdf install-pdf-am install-ps install-ps-am \\\n'
DEBUG: add  '\tinstall-pdf install-pdf-am install-ps install-ps-am \\\n'
DEBUG: line '\tinstall-strip installcheck installcheck-am installdirs \\\n'
DEBUG: add  '\tinstall-strip installcheck installcheck-am installdirs \\\n'
DEBUG: line '\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n'
DEBUG: add  '\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n'
DEBUG: line '\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n'
DEBUG: add  '\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n'
DEBUG: line '\tpdf pdf-am ps ps-am recheck tags tags-am uninstall \\\n'
DEBUG: add  '\tpdf pdf-am ps ps-am recheck tags tags-am uninstall \\\n'
DEBUG: line '\tuninstall-am uninstall-libgdkincludeHEADERS\n'
DEBUG: add  '\tuninstall-am uninstall-libgdkincludeHEADERS\n'
DEBUG: set  '\tuninstall-am uninstall-libgdkincludeHEADERS\n' multidef -> ground
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '.PRECIOUS: Makefile\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# call as: $(XVFB_START) && someprogram\n'
DEBUG: keep '# call as: $(XVFB_START) && someprogram\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# test: run all tests in cwd and subdirs\n'
DEBUG: keep '# test: run all tests in cwd and subdirs\n'
DEBUG: line 'test: test-cwd test-recurse\n'
DEBUG: keep 'test: test-cwd test-recurse\n'
DEBUG: line '# test-cwd: run tests in cwd\n'
DEBUG: keep '# test-cwd: run tests in cwd\n'
DEBUG: line 'test-cwd: ${TEST_PROGS}\n'
DEBUG: keep 'test-cwd: ${TEST_PROGS}\n'
DEBUG: line '\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: keep '\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: line '\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
DEBUG: keep '\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
DEBUG: line '\t}\n'
DEBUG: keep '\t}\n'
DEBUG: line '# test-report: run tests in subdirs and generate report\n'
DEBUG: keep '# test-report: run tests in subdirs and generate report\n'
DEBUG: line '# perf-report: run tests in subdirs with -m perf and generate report\n'
DEBUG: keep '# perf-report: run tests in subdirs with -m perf and generate report\n'
DEBUG: line '# full-report: like test-report: with -m perf and -m slow\n'
DEBUG: keep '# full-report: like test-report: with -m perf and -m slow\n'
DEBUG: line 'test-report perf-report full-report:\t${TEST_PROGS}\n'
DEBUG: keep 'test-report perf-report full-report:\t${TEST_PROGS}\n'
DEBUG: line '\t@ ignore_logdir=true ; \\\n'
DEBUG: keep '\t@ ignore_logdir=true ; \\\n'
DEBUG: line '\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: keep '\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: line '\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
DEBUG: keep '\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
DEBUG: line '\t    ignore_logdir=false ; \\\n'
DEBUG: keep '\t    ignore_logdir=false ; \\\n'
DEBUG: line '\t  fi ; \\\n'
DEBUG: keep '\t  fi ; \\\n'
DEBUG: line '\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: keep '\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
DEBUG: line '\t    case $@ in \\\n'
DEBUG: keep '\t    case $@ in \\\n'
DEBUG: line '\t    test-report) test_options="-k";; \\\n'
DEBUG: keep '\t    test-report) test_options="-k";; \\\n'
DEBUG: line '\t    perf-report) test_options="-k -m=perf";; \\\n'
DEBUG: keep '\t    perf-report) test_options="-k -m=perf";; \\\n'
DEBUG: line '\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
DEBUG: keep '\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
DEBUG: line '\t    esac ; \\\n'
DEBUG: keep '\t    esac ; \\\n'
DEBUG: line '\t    $(XVFB_START) && { \\\n'
DEBUG: keep '\t    $(XVFB_START) && { \\\n'
DEBUG: line '\t      set -e; \\\n'
DEBUG: keep '\t      set -e; \\\n'
DEBUG: line '\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: keep '\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
DEBUG: line '\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
DEBUG: keep '\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
DEBUG: line '\t      elif test -n "${TEST_PROGS}" ; then \\\n'
DEBUG: keep '\t      elif test -n "${TEST_PROGS}" ; then \\\n'
DEBUG: line '\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
DEBUG: keep '\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
DEBUG: line '\t      fi ; \\\n'
DEBUG: keep '\t      fi ; \\\n'
DEBUG: line '\t    }; \\\n'
DEBUG: keep '\t    }; \\\n'
DEBUG: line '\t  }; \\\n'
DEBUG: keep '\t  }; \\\n'
DEBUG: line '\t  $$ignore_logdir || { \\\n'
DEBUG: keep '\t  $$ignore_logdir || { \\\n'
DEBUG: line '\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
DEBUG: keep '\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
DEBUG: line "\t    echo '<report-collection>'  >> $@.xml ; \\\n"
DEBUG: keep "\t    echo '<report-collection>'  >> $@.xml ; \\\n"
DEBUG: line '\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
DEBUG: keep '\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
DEBUG: line '\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
DEBUG: keep '\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
DEBUG: line '\t    done ; \\\n'
DEBUG: keep '\t    done ; \\\n'
DEBUG: line '\t    echo >> $@.xml ; \\\n'
DEBUG: keep '\t    echo >> $@.xml ; \\\n'
DEBUG: line "\t    echo '</report-collection>' >> $@.xml ; \\\n"
DEBUG: keep "\t    echo '</report-collection>' >> $@.xml ; \\\n"
DEBUG: line '\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
DEBUG: keep '\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
DEBUG: line '\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
DEBUG: keep '\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
DEBUG: line '\t  }\n'
DEBUG: keep '\t  }\n'
DEBUG: line '.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
DEBUG: keep '.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
DEBUG: line '# run make test-cwd as part of make check\n'
DEBUG: keep '# run make test-cwd as part of make check\n'
DEBUG: line 'check-local: test-cwd\n'
DEBUG: keep 'check-local: test-cwd\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '-include $(top_srcdir)/git.mk\n'
DEBUG: keep '-include $(top_srcdir)/git.mk\n'
DEBUG: line '\n'
DEBUG: keep '\n'
DEBUG: line '# Tell versions [3.59,3.63) of GNU make to not export all variables.\n'
DEBUG: line '# Otherwise a system limit (for SysV at least) may be exceeded.\n'
DEBUG: line '.NOEXPORT:\n'
DEBUG: line ''
DEBUG: dangling references: {'am--depfiles', 'info', '.MAKE', 'dvi', 'ps-am', 'ps', 'install-info', 'pdf-am', 'install-pdf-am', 'info-am', '$(top_srcdir)/configure', '$(top_builddir)/config.status', 'ID', '$(srcdir)/Makefile.in', 'maintainer-clean', 'pdf', 'install-dvi', '$(am__depfiles_remade)', 'install-pdf', 'install-ps-am', 'install-info-am', 'dvi-am', 'maintainer-clean-generic', 'install-ps', 'install-dvi-am'}
DEBUG: After scanning pass:
'\n'
"am__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\n"
'am__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo "am__make_running_with_option: internal error: invalid" \\\n              "target option \'$${target_option-}\' specified" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt \'I\'; skip_next=yes;; \\\n      -*I?*) strip_trailopt \'I\';; \\\n        -*O) strip_trailopt \'O\'; skip_next=yes;; \\\n      -*O?*) strip_trailopt \'O\';; \\\n        -*l) strip_trailopt \'l\'; skip_next=yes;; \\\n      -*l?*) strip_trailopt \'l\';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\n'
'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
'am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n'
'pkgdatadir = $(datadir)/gtk+\n'
'pkgincludedir = $(includedir)/gtk+\n'
'pkglibdir = $(libdir)/gtk+\n'
'pkglibexecdir = $(libexecdir)/gtk+\n'
'am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd\n'
'install_sh_DATA = $(install_sh) -c -m 644\n'
'install_sh_PROGRAM = $(install_sh) -c\n'
'install_sh_SCRIPT = $(install_sh) -c\n'
'INSTALL_HEADER = $(INSTALL_DATA)\n'
'transform = $(program_transform_name)\n'
'NORMAL_INSTALL = :\n'
'PRE_INSTALL = :\n'
'POST_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'PRE_UNINSTALL = :\n'
'POST_UNINSTALL = :\n'
'build_triplet = i686-pc-linux-gnu\n'
'host_triplet = i686-pc-linux-gnu\n'
'#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
'am__append_2 = gdkinput-none.c\n'
'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
'TESTS = checksettings$(EXEEXT)\n'
'subdir = gdk/x11\n'
'ACLOCAL_M4 = $(top_srcdir)/aclocal.m4\n'
'am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \\\n\t$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \\\n\t$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \\\n\t$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n\t$(top_srcdir)/configure.ac\n'
'am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \\\n\t$(ACLOCAL_M4)\n'
'DIST_COMMON = $(srcdir)/Makefile.am $(libgdkinclude_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'mkinstalldirs = $(install_sh) -d\n'
'CONFIG_HEADER = $(top_builddir)/config.h\n'
'CONFIG_CLEAN_FILES =\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
'PROGRAMS = $(noinst_PROGRAMS)\n'
'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
'libgdk_x11_la_LIBADD =\n'
'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n\tgdkinput-xfree.c gdkinput-none.c\n'
'#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
'am__objects_2 = gdkinput-none.lo\n'
'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n\t$(am__objects_2)\n'
'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
'AM_V_lt = $(am__v_lt_$(V))\n'
'am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_lt_0 = --silent\n'
'am__v_lt_1 = \n'
'checksettings_SOURCES = checksettings.c\n'
'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
'am__DEPENDENCIES_1 =\n'
'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
'AM_V_P = $(am__v_P_$(V))\n'
'am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_P_0 = false\n'
'am__v_P_1 = :\n'
'AM_V_GEN = $(am__v_GEN_$(V))\n'
'am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_GEN_0 = @echo "  GEN     " $@;\n'
'am__v_GEN_1 = \n'
'AM_V_at = $(am__v_at_$(V))\n'
'am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_at_0 = @\n'
'am__v_at_1 = \n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'am__maybe_remake_depfiles = depfiles\n'
'am__depfiles_remade = ./$(DEPDIR)/checksettings.Po \\\n\t./$(DEPDIR)/gdkapplaunchcontext-x11.Plo \\\n\t./$(DEPDIR)/gdkasync.Plo ./$(DEPDIR)/gdkcolor-x11.Plo \\\n\t./$(DEPDIR)/gdkcursor-x11.Plo ./$(DEPDIR)/gdkdisplay-x11.Plo \\\n\t./$(DEPDIR)/gdkdnd-x11.Plo ./$(DEPDIR)/gdkdrawable-x11.Plo \\\n\t./$(DEPDIR)/gdkevents-x11.Plo ./$(DEPDIR)/gdkfont-x11.Plo \\\n\t./$(DEPDIR)/gdkgc-x11.Plo ./$(DEPDIR)/gdkgeometry-x11.Plo \\\n\t./$(DEPDIR)/gdkglobals-x11.Plo ./$(DEPDIR)/gdkim-x11.Plo \\\n\t./$(DEPDIR)/gdkimage-x11.Plo ./$(DEPDIR)/gdkinput-none.Plo \\\n\t./$(DEPDIR)/gdkinput-x11.Plo ./$(DEPDIR)/gdkinput-xfree.Plo \\\n\t./$(DEPDIR)/gdkinput.Plo ./$(DEPDIR)/gdkkeys-x11.Plo \\\n\t./$(DEPDIR)/gdkmain-x11.Plo ./$(DEPDIR)/gdkpixmap-x11.Plo \\\n\t./$(DEPDIR)/gdkproperty-x11.Plo ./$(DEPDIR)/gdkscreen-x11.Plo \\\n\t./$(DEPDIR)/gdkselection-x11.Plo ./$(DEPDIR)/gdkspawn-x11.Plo \\\n\t./$(DEPDIR)/gdktestutils-x11.Plo ./$(DEPDIR)/gdkvisual-x11.Plo \\\n\t./$(DEPDIR)/gdkwindow-x11.Plo ./$(DEPDIR)/gdkxftdefaults.Plo \\\n\t./$(DEPDIR)/gdkxid.Plo ./$(DEPDIR)/xsettings-client.Plo \\\n\t./$(DEPDIR)/xsettings-common.Plo\n'
'am__mv = mv -f\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n\t$(AM_CFLAGS) $(CFLAGS)\n'
'AM_V_CC = $(am__v_CC_$(V))\n'
'am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_CC_0 = @echo "  CC      " $@;\n'
'am__v_CC_1 = \n'
'CCLD = $(CC)\n'
'LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n'
'AM_V_CCLD = $(am__v_CCLD_$(V))\n'
'am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_CCLD_0 = @echo "  CCLD    " $@;\n'
'am__v_CCLD_1 = \n'
'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
'am__can_run_installinfo = \\\n  case $$AM_UPDATE_INFO_DIR in \\\n    n|no|NO) false;; \\\n    *) (install-info --version) >/dev/null 2>&1;; \\\n  esac\n'
'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
'am__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n    *) f=$$p;; \\\n  esac;\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'am__install_max = 40\n'
'am__nobase_strip_setup = \\\n  srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`\n'
'am__nobase_strip = \\\n  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"\n'
'am__nobase_list = $(am__nobase_strip_setup); \\\n  for p in $$list; do echo "$$p $$p"; done | \\\n  sed "s| $$srcdirstrip/| |;"\' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,\' | \\\n  $(AWK) \'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \\\n    if (++n[$$2] == $(am__install_max)) \\\n      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \\\n    END { for (dir in files) print dir, files[dir] }\'\n'
"am__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
'am__uninstall_files_from_dir = { \\\n  test -z "$$files" \\\n    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n         $(am__cd) "$$dir" && rm -f $$files; }; \\\n  }\n'
'am__installdirs = "$(DESTDIR)$(libgdkincludedir)"\n'
'HEADERS = $(libgdkinclude_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = $(AWK) '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\n'
'am__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n    am__color_tests=no; \\\n  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red=\'\x1b[0;31m\'; \\\n    grn=\'\x1b[0;32m\'; \\\n    lgn=\'\x1b[1;32m\'; \\\n    blu=\'\x1b[1;34m\'; \\\n    mgn=\'\x1b[0;35m\'; \\\n    brg=\'\x1b[1m\'; \\\n    std=\'\x1b[m\'; \\\n  fi; \\\n}\n'
'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, print the name of the tests that are to be re-run\n'
'# upon "make recheck".\n'
'am__list_recheck_tests = $(AWK) \'{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 ".log")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, create the global log from their .trs and .log files.\n'
'am__create_global_log = $(AWK) \' \\\nfunction fatal(msg) \\\n{ \\\n  print "fatal: making $@: " msg | "cat >&2"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf "="; \\\n  printf "\\n\\n"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = "RUN"; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal("failed to read from " $$0 ".trs"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub("$(am__global_test_result_rx)", "", line); \\\n          sub("[ \t]*$$", "", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result ": " $$0); \\\n      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal("failed to read from " $$0 ".log"); \\\n        print line; \\\n      }; \\\n      printf "\\n"; \\\n    }; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# Restructured Text title.\n'
"am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
"# Solaris 10 'make', and several other traditional 'make' implementations,\n"
'# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
'# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
'# Default flags passed to test drivers.\n'
'am__common_driver_flags = \\\n  --color-tests "$$am__color_tests" \\\n  --enable-hard-errors "$$am__enable_hard_errors" \\\n  --expect-failure "$$am__expect_failure"\n'
'# To be inserted before the command running the test.  Creates the\n'
'# directory for the log if needed.  Stores in $dir the directory\n'
'# containing $f, in $tst the test, in $log the log.  Executes the\n'
'# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
'# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
'# will run the test scripts (or their associated LOG_COMPILER, if\n'
'# thy have one).\n'
'am__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n  || $(MKDIR_P) "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
'# A shell command to get the names of the tests scripts with any registered\n'
'# extension removed (i.e., equivalently, the names of the test logs, with\n'
"# the '.log' extension removed).  The result is saved in the shell variable\n"
"# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
'# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
'# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
"# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
"am__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\n"
"AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
'RECHECK_LOGS = $(TEST_LOGS)\n'
'AM_RECURSIVE_TARGETS = check recheck\n'
'TEST_SUITE_LOG = test-suite.log\n'
'TEST_EXTENSIONS =  .test\n'
'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n'
"am__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\n"
'am__test_logs1 = $(TESTS:=.log)\n'
'am__test_logs2 = $(am__test_logs1:.log=.log)\n'
'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n\t$(TEST_LOG_FLAGS)\n'
'am__DIST_COMMON = $(srcdir)/Makefile.in $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n'
"ACLOCAL = ${SHELL} '/home/stefan/gtk2-test/missing' aclocal-1.16 \n"
'AMTAR = $${TAR-tar}\n'
'AM_DEFAULT_VERBOSITY = 1\n'
'AR = ar\n'
'AS = as\n'
"AUTOCONF = ${SHELL} '/home/stefan/gtk2-test/missing' autoconf\n"
"AUTOHEADER = ${SHELL} '/home/stefan/gtk2-test/missing' autoheader\n"
"AUTOMAKE = ${SHELL} '/home/stefan/gtk2-test/missing' automake-1.16\n"
'AWK = gawk\n'
'BASE_DEPENDENCIES_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'BASE_DEPENDENCIES_LIBS = -lpango-1.0 -lharfbuzz -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
'CAIRO_BACKEND_CFLAGS = -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'CAIRO_BACKEND_LIBS = -lcairo -lX11 -lXext\n'
'CAIRO_PREFIX = /usr\n'
'CC = gcc\n'
'CCAS = gcc\n'
'CCASDEPMODE = depmode=none\n'
'CCASFLAGS = -g -O2\n'
'CCDEPMODE = depmode=none\n'
'CFLAGS = -g -O2 -Wall\n'
'CPP = gcc -E\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
'CSCOPE = cscope\n'
'CTAGS = ctags\n'
'CUPS_API_MAJOR = \n'
'CUPS_API_MINOR = \n'
'CUPS_CFLAGS = \n'
'CUPS_CONFIG = no\n'
'CUPS_LIBS = \n'
'CXX = c++\n'
'CXXCPP = c++ -E\n'
'CXXDEPMODE = depmode=none\n'
'CXXFLAGS = -g -O2\n'
'CYGPATH_W = echo\n'
'DB2HTML = false\n'
'DEFS = -DHAVE_CONFIG_H\n'
'DEPDIR = .deps\n'
'DIRECTFB_CFLAGS = \n'
'DIRECTFB_LIBS = \n'
'DLLTOOL = dlltool\n'
'DSYMUTIL = \n'
'DUMPBIN = \n'
'ECHO_C = \n'
'ECHO_N = -n\n'
'ECHO_T = \n'
'EGREP = /bin/grep -E\n'
'ETAGS = etags\n'
'EXEEXT = \n'
'EXE_MANIFEST_ARCHITECTURE = X86\n'
'FGREP = /bin/grep -F\n'
'FILECMD = file\n'
'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
'GDK_DEP_LIBS = -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgio-2.0 -lfontconfig -lfreetype -lXrender -lXinerama -lXrandr -lXcursor -lXcomposite -lXdamage -lXfixes -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lX11 -lXext -lm\n'
'GDK_EXTRA_CFLAGS = \n'
'GDK_EXTRA_LIBS = \n'
'GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0\n'
'GDK_PIXBUF_CSOURCE = /usr/bin/gdk-pixbuf-csource\n'
'GDK_PIXBUF_LIBS = -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
'GLIB_CFLAGS = -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources\n'
'GLIB_GENMARSHAL = /usr/bin/glib-genmarshal\n'
'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
'GLIB_MKENUMS = /usr/bin/glib-mkenums\n'
'GLIB_PREFIX = /usr\n'
'GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0\n'
'GOBJECT_QUERY = /usr/bin/gobject-query\n'
'GREP = /bin/grep\n'
'GTKDOC_CHECK = \n'
'GTKDOC_CHECK_PATH = \n'
'GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/lib64/libffi/include\n'
'GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0\n'
'GTKDOC_MKPDF = \n'
'GTKDOC_REBASE = true\n'
'GTK_API_VERSION = 2.0\n'
'GTK_BINARY_AGE = 2433\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1  \n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'GTK_EXTRA_CFLAGS = \n'
'GTK_EXTRA_LIBS = \n'
'GTK_INTERFACE_AGE = 33\n'
'GTK_MAJOR_VERSION = 2\n'
'GTK_MICRO_VERSION = 33\n'
'GTK_MINOR_VERSION = 24\n'
'GTK_PACKAGES = cairo gdk-pixbuf-2.0 gio-2.0 pangoft2\n'
'GTK_UPDATE_ICON_CACHE = no\n'
'GTK_VERSION = 2.24.33\n'
'GTK_XIM_FLAGS = \n'
'HAVE_HTTP_AUTHSTRING = \n'
'HTML_DIR = ${datadir}/gtk-doc/html\n'
'INDENT = \n'
'INSTALL = /usr/bin/install -c\n'
'INSTALL_DATA = ${INSTALL} -m 644\n'
'INSTALL_PROGRAM = ${INSTALL}\n'
'INSTALL_SCRIPT = ${INSTALL}\n'
'INSTALL_STRIP_PROGRAM = $(install_sh) -c -s\n'
'INTROSPECTION_CFLAGS = \n'
'INTROSPECTION_COMPILER = \n'
'INTROSPECTION_GENERATE = \n'
'INTROSPECTION_GIRDIR = \n'
'INTROSPECTION_LIBS = \n'
'INTROSPECTION_MAKEFILE = \n'
'INTROSPECTION_SCANNER = \n'
'INTROSPECTION_TYPELIBDIR = \n'
'LD = /usr/x86_64-pc-linux-gnu/bin/ld\n'
'LDFLAGS = \n'
'LIBOBJS = \n'
'LIBS = \n'
'LIBTOOL = $(SHELL) $(top_builddir)/libtool\n'
'LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"\n'
'LIB_EXE_MACHINE_FLAG = X86\n'
'LIPO = \n'
'LN_S = ln -s\n'
'LTLIBOBJS = \n'
'LT_CURRENT_MINUS_AGE = 0\n'
'LT_SYS_LIBRARY_PATH = \n'
'LT_VERSION_INFO = 2400:33:2400\n'
'MAINT = \n'
"MAKEINFO = ${SHELL} '/home/stefan/gtk2-test/missing' makeinfo\n"
'MANIFEST_TOOL = :\n'
'MATH_LIB = -lm\n'
'MKDIR_P = /bin/mkdir -p\n'
'NM = /usr/bin/nm -B\n'
'NMEDIT = \n'
'OBJDUMP = objdump\n'
'OBJEXT = o\n'
'OTOOL = \n'
'OTOOL64 = \n'
'PACKAGE = gtk+\n'
'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
'PACKAGE_NAME = gtk+\n'
'PACKAGE_STRING = gtk+ 2.24.33\n'
'PACKAGE_TARNAME = gtk+\n'
'PACKAGE_URL = \n'
'PACKAGE_VERSION = 2.24.33\n'
'PANGO_PREFIX = /usr\n'
'PATH_SEPARATOR = :\n'
'PERL = /usr/bin/perl\n'
'PKG_CONFIG = /usr/bin/pkg-config\n'
'PKG_CONFIG_LIBDIR = \n'
'PKG_CONFIG_PATH = \n'
'RANLIB = ranlib\n'
'REBUILD = \n'
'SED = /bin/sed\n'
'SET_MAKE = \n'
'SHELL = /bin/sh\n'
'STRIP = strip\n'
'VERSION = 2.24.33\n'
'WINDRES = \n'
'XMKMF = \n'
'XMLCATALOG = \n'
'XML_CATALOG_FILE = \n'
'XSLTPROC = \n'
'X_CFLAGS = \n'
'X_EXTRA_LIBS = \n'
'X_LIBS = \n'
'X_PRE_LIBS = \n'
'abs_builddir = /home/stefan/gtk2-test/gdk/x11\n'
'abs_srcdir = /home/stefan/gtk2-test/gdk/x11\n'
'abs_top_builddir = /home/stefan/gtk2-test\n'
'abs_top_srcdir = /home/stefan/gtk2-test\n'
'ac_ct_AR = ar\n'
'ac_ct_CC = gcc\n'
'ac_ct_CXX = c++\n'
'ac_ct_DUMPBIN = \n'
'am__include = include\n'
'am__leading_dot = .\n'
'am__quote = \n'
'am__tar = $${TAR-tar} chof - "$$tardir"\n'
'am__untar = $${TAR-tar} xf -\n'
'bindir = ${exec_prefix}/bin\n'
'build = i686-pc-linux-gnu\n'
'build_alias = i686-pc-linux-gnu\n'
'build_cpu = i686\n'
'build_os = linux-gnu\n'
'build_vendor = pc\n'
'builddir = .\n'
'datadir = /usr/share\n'
'datarootdir = /usr/share\n'
'docdir = /usr/share/doc/gtk+-2.24.33-r4\n'
'dvidir = ${docdir}\n'
'exec_prefix = ${prefix}\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'host = i686-pc-linux-gnu\n'
'host_alias = i686-pc-linux-gnu\n'
'host_cpu = i686\n'
'host_os = linux-gnu\n'
'host_vendor = pc\n'
'htmldir = /usr/share/doc/gtk+-2.24.33-r4/html\n'
'includedir = ${prefix}/include\n'
'infodir = /usr/share/info\n'
'install_sh = ${SHELL} /home/stefan/gtk2-test/install-sh\n'
'libdir = /usr/lib\n'
'libexecdir = ${exec_prefix}/libexec\n'
'localedir = ${datarootdir}/locale\n'
'localstatedir = /var/lib\n'
'mandir = /usr/share/man\n'
'mkdir_p = $(MKDIR_P)\n'
'ms_librarian = \n'
'oldincludedir = /usr/include\n'
'pdfdir = ${docdir}\n'
'prefix = /usr\n'
'program_transform_name = s,x,x,\n'
'psdir = ${docdir}\n'
'runstatedir = ${localstatedir}/run\n'
'sbindir = ${exec_prefix}/sbin\n'
'sharedstatedir = ${prefix}/com\n'
'srcdir = .\n'
'sysconfdir = /etc\n'
'target_alias = \n'
'top_build_prefix = ../../\n'
'top_builddir = ../..\n'
'top_srcdir = ../..\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'\n'
'# We need to include all these C files here since the conditionals\n'
"# don't seem to be correctly expanded for the dist files.\n"
'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n\tgdksettings.c\n'
'TEST_PROGS = \n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
'INCLUDES = \\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)\n'
'\n'
'LDADDS = $(GDK_DEP_LIBS)\n'
'noinst_LTLIBRARIES = libgdk-x11.la\n'
'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n\txsettings-client.c xsettings-common.h xsettings-common.c \\\n\t$(am__append_1) $(am__append_2)\n'
'libgdkinclude_HEADERS = \\\n\tgdkx.h\n'
'\n'
'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'\n'
'\n'
'clean-noinstPROGRAMS:\n'
'\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list || exit $$?; \\\n'
'\ttest -n "$(EXEEXT)" || exit 0; \\\n'
'\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list\n'
'\n'
'clean-noinstLTLIBRARIES:\n'
'\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
"\t@list='$(noinst_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
'\t$(AM_V_CCLD)$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
'\n'
'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
'\t@rm -f checksettings$(EXEEXT)\n'
'\t$(AM_V_CCLD)$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'\n'
'\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\t$(AM_V_CC)source='$<' object='$@' libtool=no \n"
"\t$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\t$(AM_V_CC)source='$<' object='$@' libtool=yes \n"
'\t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
'\tif test -n "$$list"; then \\\n'
'\t  echo " $(MKDIR_P) \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  $(MKDIR_P) "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
'\tfi; \\\n'
'\tfor p in $$list; do \\\n'
'\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
'\t  echo "$$d$$p"; \\\n'
'\tdone | $(am__base_list) | \\\n'
'\twhile read files; do \\\n'
'\t  echo " $(INSTALL_HEADER) $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  $(INSTALL_HEADER) $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
'\tdone\n'
'\n'
'uninstall-libgdkincludeHEADERS:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
"\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
"\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`$(am__cd) $(top_builddir) && pwd` \\\n'
'\t  && $(am__cd) $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags\n'
'\n'
"# Recover from deleted '.trs' file; this should ensure that\n"
'# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
"# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
'# to avoid problems with "make -n".\n'
'.log.trs:\n'
'\trm -f $< $@\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $<\n'
'\n'
"# Leading 'am--fnord' is there to ensure the list of targets does not\n"
"# expand to empty, as could happen e.g. with make check TESTS=''.\n"
'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
'am--force-recheck:\n'
'\t@:\n'
'\n'
'$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
'\t@$(am__set_TESTS_bases); \\\n'
'\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
'\tredo_bases=`for i in $$bases; do \\\n'
'\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
'\t            done`; \\\n'
'\tif test -n "$$redo_bases"; then \\\n'
'\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
'\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
'\t  if $(am__make_dryrun); then :; else \\\n'
'\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
'\t  fi; \\\n'
'\tfi; \\\n'
'\tif test -n "$$am__remaking_logs"; then \\\n'
'\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
'\t       "recursion detected" >&2; \\\n'
'\telif test -n "$$redo_logs"; then \\\n'
'\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n'
'\tfi; \\\n'
'\tif $(am__make_dryrun); then :; else \\\n'
'\t  st=0;  \\\n'
'\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
'\t  for i in $$redo_bases; do \\\n'
'\t    test -f $$i.trs && test -r $$i.trs \\\n'
'\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
'\t    test -f $$i.log && test -r $$i.log \\\n'
'\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
'\t  done; \\\n'
'\t  test $$st -eq 0 || exit 1; \\\n'
'\tfi\n'
'\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
"\tws='[ \t]'; \\\n"
'\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
'\ttest -n "$$results" || results=/dev/null; \\\n'
'\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
'\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
'\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
'\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
'\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
'\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
'\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
'\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
'\t  success=true; \\\n'
'\telse \\\n'
'\t  success=false; \\\n'
'\tfi; \\\n'
"\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
'\tresult_count () \\\n'
'\t{ \\\n'
'\t    if test x"$$1" = x"--maybe-color"; then \\\n'
'\t      maybe_colorize=yes; \\\n'
'\t    elif test x"$$1" = x"--no-color"; then \\\n'
'\t      maybe_colorize=no; \\\n'
'\t    else \\\n'
'\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
'\t    fi; \\\n'
'\t    shift; \\\n'
'\t    desc=$$1 count=$$2; \\\n'
'\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
'\t      color_start=$$3 color_end=$$std; \\\n'
'\t    else \\\n'
'\t      color_start= color_end=; \\\n'
'\t    fi; \\\n'
'\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
'\t}; \\\n'
'\tcreate_testsuite_report () \\\n'
'\t{ \\\n'
'\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
'\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
'\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
'\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
'\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
'\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
'\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
'\t}; \\\n'
'\t{\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
'\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
'\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
'\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
'\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
'\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
'\tif $$success; then\t\t\t\t\t\t\\\n'
'\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
'\t else\t\t\t\t\t\t\t\t\\\n'
'\t  col="$$red";\t\t\t\t\t\t\t\\\n'
'\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
'\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
'\tif $$success; then :; else\t\t\t\t\t\\\n'
'\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
'\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
'\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
'\t  fi;\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\t$$success || exit 1\n'
'\n'
'check-TESTS: \n'
'\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
'\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
'\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
'\texit $$?;\n'
'recheck: all \n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tbases=`for i in $$bases; do echo $$i; done \\\n'
'\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\tlog_list=`echo $$log_list`; \\\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n'
'\t        am__force_recheck=am--force-recheck \\\n'
'\t        TEST_LOGS="$$log_list"; \\\n'
'\texit $$?\n'
'checksettings.log: checksettings$(EXEEXT)\n'
"\t@p='checksettings$(EXEEXT)'; \\\n"
"\tb='checksettings'; \\\n"
'\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
'\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'.test.log:\n'
"\t@p='$<'; \\\n"
'\t$(am__set_b); \\\n'
'\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'#.test$(EXEEXT).log:\n'
"#\t@p='$<'; \\\n"
'#\t$(am__set_b); \\\n'
'#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'#\t--log-file $$b.log --trs-file $$b.trs \\\n'
'#\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'#\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) $(MKDIR_P) `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local\n'
'check: check-am\n'
'all-am: Makefile $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
'\t  test -z "$$dir" || $(MKDIR_P) "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z '$(STRIP)'; then \\\n"
'\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\\n'
'\t    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \\\n'
'\t    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'$(STRIP)\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
'\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
'\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS mostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'\t-rm -f Makefile\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'\n'
'\n'
'install-data-am: install-libgdkincludeHEADERS\n'
'\n'
'\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'\n'
'\n'
'install-man:\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'installcheck-am:\n'
'\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'uninstall-am: uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-TESTS \\\n\tcheck-am check-local clean clean-generic clean-libtool \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n\tctags ctags-am distclean distclean-compile distclean-generic \\\n\tdistclean-libtool distclean-tags distdir dvi dvi-am html \\\n\thtml-am info info-am install install-am install-data \\\n\tinstall-data-am install-dvi install-dvi-am install-exec \\\n\tinstall-exec-am install-html install-html-am install-info \\\n\tinstall-info-am install-libgdkincludeHEADERS install-man \\\n\tinstall-pdf install-pdf-am install-ps install-ps-am \\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tmaintainer-clean maintainer-clean-generic mostlyclean \\\n\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n\tpdf pdf-am ps ps-am recheck tags tags-am uninstall \\\n\tuninstall-am uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After substitution pass:
'\n'
"am__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\n"
'am__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo "am__make_running_with_option: internal error: invalid" \\\n              "target option \'$${target_option-}\' specified" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt \'I\'; skip_next=yes;; \\\n      -*I?*) strip_trailopt \'I\';; \\\n        -*O) strip_trailopt \'O\'; skip_next=yes;; \\\n      -*O?*) strip_trailopt \'O\';; \\\n        -*l) strip_trailopt \'l\'; skip_next=yes;; \\\n      -*l?*) strip_trailopt \'l\';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\n'
'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
'am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n'
'pkgdatadir = $(datadir)/gtk+\n'
'pkgincludedir = $(includedir)/gtk+\n'
'pkglibdir = $(libdir)/gtk+\n'
'pkglibexecdir = $(libexecdir)/gtk+\n'
'am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd\n'
'install_sh_DATA = install -c -m 644\n'
'install_sh_PROGRAM = install -c\n'
'install_sh_SCRIPT = install -c\n'
'INSTALL_HEADER = install -c -m 644\n'
'transform = $(program_transform_name)\n'
'NORMAL_INSTALL = :\n'
'PRE_INSTALL = :\n'
'POST_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'PRE_UNINSTALL = :\n'
'POST_UNINSTALL = :\n'
'build_triplet = $(build_cpu)-$(build_vendor)-$(build_os)\n'
'host_triplet = $(host_cpu)-$(host_vendor)-$(host_os)\n'
'#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
'am__append_2 = gdkinput-none.c\n'
'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
'TESTS = checksettings$(EXEEXT)\n'
'subdir = gdk/x11\n'
'am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \\\n\t$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \\\n\t$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \\\n\t$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n\t$(top_srcdir)/configure.ac\n'
'DIST_COMMON = $(libgdkinclude_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'mkinstalldirs = install -d\n'
'CONFIG_HEADER = $(top_builddir)/config.h\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
'PROGRAMS = $(noinst_PROGRAMS)\n'
'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
'libgdk_x11_la_LIBADD =\n'
'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n\tgdkinput-xfree.c gdkinput-none.c\n'
'#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
'am__objects_2 = gdkinput-none.lo\n'
'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n\t$(am__objects_2)\n'
'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
'am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_lt_0 = --silent\n'
'am__v_lt_1 = \n'
'checksettings_SOURCES = checksettings.c\n'
'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
'am__DEPENDENCIES_1 =\n'
'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
'AM_V_P = $(am__v_P_$(V))\n'
'am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_P_0 = false\n'
'am__v_P_1 = :\n'
'AM_V_GEN = $(am__v_GEN_$(V))\n'
'am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_GEN_0 = @echo "  GEN     " $@;\n'
'am__v_GEN_1 = \n'
'am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_at_0 = @\n'
'am__v_at_1 = \n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'am__maybe_remake_depfiles = depfiles\n'
'am__mv = mv -f\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n\t$(AM_CFLAGS) $(CFLAGS)\n'
'am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_CC_0 = @echo "  CC      " $@;\n'
'am__v_CC_1 = \n'
'CCLD = $(CC)\n'
'LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n'
'am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_CCLD_0 = @echo "  CCLD    " $@;\n'
'am__v_CCLD_1 = \n'
'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
'am__can_run_installinfo = \\\n  case $$AM_UPDATE_INFO_DIR in \\\n    n|no|NO) false;; \\\n    *) (install-info --version) >/dev/null 2>&1;; \\\n  esac\n'
'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
'am__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n    *) f=$$p;; \\\n  esac;\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'am__install_max = 40\n'
'am__nobase_strip_setup = \\\n  srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`\n'
'am__nobase_strip = \\\n  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"\n'
'am__nobase_list = $(am__nobase_strip_setup); \\\n  for p in $$list; do echo "$$p $$p"; done | \\\n  sed "s| $$srcdirstrip/| |;"\' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,\' | \\\n  awk \'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \\\n    if (++n[$$2] == $(am__install_max)) \\\n      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \\\n    END { for (dir in files) print dir, files[dir] }\'\n'
"am__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
'am__uninstall_files_from_dir = { \\\n  test -z "$$files" \\\n    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n         cd >/dev/null "$$dir" && rm -f $$files; }; \\\n  }\n'
'am__installdirs = "$(DESTDIR)$(libgdkincludedir)"\n'
'HEADERS = $(libgdkinclude_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\n'
'am__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n    am__color_tests=no; \\\n  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red=\'\x1b[0;31m\'; \\\n    grn=\'\x1b[0;32m\'; \\\n    lgn=\'\x1b[1;32m\'; \\\n    blu=\'\x1b[1;34m\'; \\\n    mgn=\'\x1b[0;35m\'; \\\n    brg=\'\x1b[1m\'; \\\n    std=\'\x1b[m\'; \\\n  fi; \\\n}\n'
'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, print the name of the tests that are to be re-run\n'
'# upon "make recheck".\n'
'am__list_recheck_tests = awk \'{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 ".log")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, create the global log from their .trs and .log files.\n'
'am__create_global_log = awk \' \\\nfunction fatal(msg) \\\n{ \\\n  print "fatal: making $@: " msg | "cat >&2"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf "="; \\\n  printf "\\n\\n"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = "RUN"; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal("failed to read from " $$0 ".trs"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub("$(am__global_test_result_rx)", "", line); \\\n          sub("[ \t]*$$", "", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result ": " $$0); \\\n      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal("failed to read from " $$0 ".log"); \\\n        print line; \\\n      }; \\\n      printf "\\n"; \\\n    }; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# Restructured Text title.\n'
"am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
"# Solaris 10 'make', and several other traditional 'make' implementations,\n"
'# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
'# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
'# Default flags passed to test drivers.\n'
'am__common_driver_flags = \\\n  --color-tests "$$am__color_tests" \\\n  --enable-hard-errors "$$am__enable_hard_errors" \\\n  --expect-failure "$$am__expect_failure"\n'
'# To be inserted before the command running the test.  Creates the\n'
'# directory for the log if needed.  Stores in $dir the directory\n'
'# containing $f, in $tst the test, in $log the log.  Executes the\n'
'# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
'# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
'# will run the test scripts (or their associated LOG_COMPILER, if\n'
'# thy have one).\n'
'am__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n  || mkdir -p "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
'# A shell command to get the names of the tests scripts with any registered\n'
'# extension removed (i.e., equivalently, the names of the test logs, with\n'
"# the '.log' extension removed).  The result is saved in the shell variable\n"
"# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
'# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
'# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
"# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
"am__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\n"
"AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
'RECHECK_LOGS = $(TEST_LOGS)\n'
'AM_RECURSIVE_TARGETS = check recheck\n'
'TEST_SUITE_LOG = test-suite.log\n'
'TEST_EXTENSIONS =  .test\n'
'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n'
"am__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\n"
'am__test_logs1 = $(TESTS:=.log)\n'
'am__test_logs2 = $(am__test_logs1:.log=.log)\n'
'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n\t$(TEST_LOG_FLAGS)\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n'
'AMTAR = $${TAR-tar}\n'
'AM_DEFAULT_VERBOSITY = 1\n'
'AR = ar\n'
'AS = as\n'
'AWK = gawk\n'
'BASE_DEPENDENCIES_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'BASE_DEPENDENCIES_LIBS = -lpango-1.0 -lharfbuzz -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
'CAIRO_BACKEND_CFLAGS = -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'CAIRO_BACKEND_LIBS = -lcairo -lX11 -lXext\n'
'CAIRO_PREFIX = /usr\n'
'CC = gcc\n'
'CCAS = gcc\n'
'CCASDEPMODE = depmode=none\n'
'CCASFLAGS = -g -O2\n'
'CCDEPMODE = depmode=none\n'
'CFLAGS = -g -O2 -Wall\n'
'CPP = gcc -E\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
'CSCOPE = cscope\n'
'CTAGS = ctags\n'
'CUPS_API_MAJOR = \n'
'CUPS_API_MINOR = \n'
'CUPS_CFLAGS = \n'
'CUPS_CONFIG = no\n'
'CUPS_LIBS = \n'
'CXX = c++\n'
'CXXCPP = c++ -E\n'
'CXXDEPMODE = depmode=none\n'
'CXXFLAGS = -g -O2\n'
'CYGPATH_W = echo\n'
'DB2HTML = false\n'
'DEFS = -DHAVE_CONFIG_H\n'
'DEPDIR = .deps\n'
'DIRECTFB_CFLAGS = \n'
'DIRECTFB_LIBS = \n'
'DLLTOOL = dlltool\n'
'DSYMUTIL = \n'
'DUMPBIN = \n'
'ECHO_C = \n'
'ECHO_N = -n\n'
'ECHO_T = \n'
'EGREP = /bin/grep -E\n'
'ETAGS = etags\n'
'EXEEXT = \n'
'EXE_MANIFEST_ARCHITECTURE = X86\n'
'FGREP = /bin/grep -F\n'
'FILECMD = file\n'
'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
'GDK_DEP_LIBS = -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgio-2.0 -lfontconfig -lfreetype -lXrender -lXinerama -lXrandr -lXcursor -lXcomposite -lXdamage -lXfixes -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lX11 -lXext -lm\n'
'GDK_EXTRA_CFLAGS = \n'
'GDK_EXTRA_LIBS = \n'
'GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0\n'
'GDK_PIXBUF_CSOURCE = /usr/bin/gdk-pixbuf-csource\n'
'GDK_PIXBUF_LIBS = -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
'GLIB_CFLAGS = -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources\n'
'GLIB_GENMARSHAL = /usr/bin/glib-genmarshal\n'
'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
'GLIB_MKENUMS = /usr/bin/glib-mkenums\n'
'GLIB_PREFIX = /usr\n'
'GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0\n'
'GOBJECT_QUERY = /usr/bin/gobject-query\n'
'GREP = /bin/grep\n'
'GTKDOC_CHECK = \n'
'GTKDOC_CHECK_PATH = \n'
'GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/lib64/libffi/include\n'
'GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0\n'
'GTKDOC_MKPDF = \n'
'GTKDOC_REBASE = true\n'
'GTK_API_VERSION = 2.0\n'
'GTK_BINARY_AGE = 2433\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1  \n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'GTK_EXTRA_CFLAGS = \n'
'GTK_EXTRA_LIBS = \n'
'GTK_INTERFACE_AGE = 33\n'
'GTK_MAJOR_VERSION = 2\n'
'GTK_MICRO_VERSION = 33\n'
'GTK_MINOR_VERSION = 24\n'
'GTK_PACKAGES = cairo gdk-pixbuf-2.0 gio-2.0 pangoft2\n'
'GTK_UPDATE_ICON_CACHE = no\n'
'GTK_VERSION = 2.24.33\n'
'GTK_XIM_FLAGS = \n'
'HAVE_HTTP_AUTHSTRING = \n'
'HTML_DIR = ${datadir}/gtk-doc/html\n'
'INDENT = \n'
'INSTALL = /usr/bin/install -c\n'
'INSTALL_DATA = install -c -m 644\n'
'INSTALL_PROGRAM = install -c\n'
'INSTALL_SCRIPT = install -c\n'
'INSTALL_STRIP_PROGRAM = install -c -s\n'
'INTROSPECTION_CFLAGS = \n'
'INTROSPECTION_COMPILER = \n'
'INTROSPECTION_GENERATE = \n'
'INTROSPECTION_GIRDIR = \n'
'INTROSPECTION_LIBS = \n'
'INTROSPECTION_MAKEFILE = \n'
'INTROSPECTION_SCANNER = \n'
'INTROSPECTION_TYPELIBDIR = \n'
'LD = /usr/x86_64-pc-linux-gnu/bin/ld\n'
'LDFLAGS = \n'
'LIBOBJS = \n'
'LIBS = \n'
'LIBTOOL = $(SHELL) $(top_builddir)/libtool\n'
'LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"\n'
'LIB_EXE_MACHINE_FLAG = X86\n'
'LIPO = \n'
'LN_S = ln -s\n'
'LTLIBOBJS = \n'
'LT_CURRENT_MINUS_AGE = 0\n'
'LT_SYS_LIBRARY_PATH = \n'
'LT_VERSION_INFO = 2400:33:2400\n'
'MAINT = \n'
"MAKEINFO = ${SHELL} '/home/stefan/gtk2-test/missing' makeinfo\n"
'MANIFEST_TOOL = :\n'
'MATH_LIB = -lm\n'
'MKDIR_P = /bin/mkdir -p\n'
'NM = /usr/bin/nm -B\n'
'NMEDIT = \n'
'OBJDUMP = objdump\n'
'OBJEXT = o\n'
'OTOOL = \n'
'OTOOL64 = \n'
'PACKAGE = gtk+\n'
'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
'PACKAGE_NAME = $(PACKAGE)\n'
'PACKAGE_STRING = $(PACKAGE) $(VERSION)\n'
'PACKAGE_TARNAME = $(PACKAGE)\n'
'PACKAGE_URL = \n'
'PACKAGE_VERSION = $(VERSION)\n'
'PANGO_PREFIX = /usr\n'
'PATH_SEPARATOR = :\n'
'PERL = /usr/bin/perl\n'
'PKG_CONFIG = /usr/bin/pkg-config\n'
'PKG_CONFIG_LIBDIR = \n'
'PKG_CONFIG_PATH = \n'
'RANLIB = ranlib\n'
'REBUILD = \n'
'SED = /bin/sed\n'
'SHELL = /bin/sh\n'
'STRIP = strip\n'
'VERSION = 2.24.33\n'
'WINDRES = \n'
'XMKMF = \n'
'XMLCATALOG = \n'
'XML_CATALOG_FILE = \n'
'XSLTPROC = \n'
'X_CFLAGS = \n'
'X_EXTRA_LIBS = \n'
'X_LIBS = \n'
'X_PRE_LIBS = \n'
'abs_builddir = /home/stefan/gtk2-test/gdk/x11\n'
'abs_srcdir = /home/stefan/gtk2-test/gdk/x11\n'
'abs_top_builddir = /home/stefan/gtk2-test\n'
'abs_top_srcdir = /home/stefan/gtk2-test\n'
'ac_ct_AR = ar\n'
'ac_ct_CC = gcc\n'
'ac_ct_CXX = c++\n'
'ac_ct_DUMPBIN = \n'
'am__include = include\n'
'am__leading_dot = .\n'
'am__quote = \n'
'am__tar = $${TAR-tar} chof - "$$tardir"\n'
'am__untar = $${TAR-tar} xf -\n'
'bindir = ${exec_prefix}/bin\n'
'build = $(build_cpu)-$(build_vendor)-$(build_os)\n'
'build_alias = i686-pc-linux-gnu\n'
'build_cpu = i686\n'
'build_os = linux-gnu\n'
'build_vendor = pc\n'
'builddir = .\n'
'datadir = /usr/share\n'
'datarootdir = /usr/share\n'
'docdir = /usr/share/doc/gtk+-2.24.33-r4\n'
'dvidir = ${docdir}\n'
'exec_prefix = ${prefix}\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'host = $(host_cpu)-$(host_vendor)-$(host_os)\n'
'host_alias = i686-pc-linux-gnu\n'
'host_cpu = i686\n'
'host_os = linux-gnu\n'
'host_vendor = pc\n'
'htmldir = /usr/share/doc/gtk+-2.24.33-r4/html\n'
'includedir = ${prefix}/include\n'
'infodir = /usr/share/info\n'
'libdir = /usr/lib\n'
'libexecdir = ${exec_prefix}/libexec\n'
'localedir = ${datarootdir}/locale\n'
'localstatedir = /var/lib\n'
'mandir = /usr/share/man\n'
'mkdir_p = mkdir -p\n'
'ms_librarian = \n'
'oldincludedir = /usr/include\n'
'pdfdir = ${docdir}\n'
'prefix = /usr\n'
'program_transform_name = s,x,x,\n'
'psdir = ${docdir}\n'
'runstatedir = ${localstatedir}/run\n'
'sbindir = ${exec_prefix}/sbin\n'
'sharedstatedir = ${prefix}/com\n'
'srcdir = .\n'
'sysconfdir = /etc\n'
'target_alias = \n'
'top_build_prefix = ../../\n'
'top_builddir = ../..\n'
'top_srcdir = ../..\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'\n'
'# We need to include all these C files here since the conditionals\n'
"# don't seem to be correctly expanded for the dist files.\n"
'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n\tgdksettings.c\n'
'TEST_PROGS = \n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
'INCLUDES = \\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)\n'
'\n'
'LDADDS = $(GDK_DEP_LIBS)\n'
'noinst_LTLIBRARIES = libgdk-x11.la\n'
'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n\txsettings-client.c xsettings-common.h xsettings-common.c \\\n\t$(am__append_1) $(am__append_2)\n'
'libgdkinclude_HEADERS = \\\n\tgdkx.h\n'
'\n'
'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'\n'
'\n'
'clean-noinstPROGRAMS:\n'
'\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list || exit $$?; \\\n'
'\ttest -n "$(EXEEXT)" || exit 0; \\\n'
'\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list\n'
'\n'
'clean-noinstLTLIBRARIES:\n'
'\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
"\t@list='$(noinst_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
'\t$(AM_V_CCLD)$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
'\n'
'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
'\t@rm -f checksettings$(EXEEXT)\n'
'\t$(AM_V_CCLD)$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'\n'
'\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(AM_V_CC)$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\t$(AM_V_CC)source='$<' object='$@' libtool=no \n"
"\t$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\t$(AM_V_CC)source='$<' object='$@' libtool=yes \n"
'\t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
'\tif test -n "$$list"; then \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
'\tfi; \\\n'
'\tfor p in $$list; do \\\n'
'\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
'\t  echo "$$d$$p"; \\\n'
'\tdone | $(am__base_list) | \\\n'
'\twhile read files; do \\\n'
'\t  echo " install -c -m 644 $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  install -c -m 644 $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
'\tdone\n'
'\n'
'uninstall-libgdkincludeHEADERS:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
"\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
"\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'\n'
"# Recover from deleted '.trs' file; this should ensure that\n"
'# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
"# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
'# to avoid problems with "make -n".\n'
'.log.trs:\n'
'\trm -f $< $@\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $<\n'
'\n'
"# Leading 'am--fnord' is there to ensure the list of targets does not\n"
"# expand to empty, as could happen e.g. with make check TESTS=''.\n"
'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
'am--force-recheck:\n'
'\t@:\n'
'\n'
'$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
'\t@$(am__set_TESTS_bases); \\\n'
'\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
'\tredo_bases=`for i in $$bases; do \\\n'
'\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
'\t            done`; \\\n'
'\tif test -n "$$redo_bases"; then \\\n'
'\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
'\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
'\t  if $(am__make_dryrun); then :; else \\\n'
'\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
'\t  fi; \\\n'
'\tfi; \\\n'
'\tif test -n "$$am__remaking_logs"; then \\\n'
'\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
'\t       "recursion detected" >&2; \\\n'
'\telif test -n "$$redo_logs"; then \\\n'
'\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n'
'\tfi; \\\n'
'\tif $(am__make_dryrun); then :; else \\\n'
'\t  st=0;  \\\n'
'\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
'\t  for i in $$redo_bases; do \\\n'
'\t    test -f $$i.trs && test -r $$i.trs \\\n'
'\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
'\t    test -f $$i.log && test -r $$i.log \\\n'
'\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
'\t  done; \\\n'
'\t  test $$st -eq 0 || exit 1; \\\n'
'\tfi\n'
'\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
"\tws='[ \t]'; \\\n"
'\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
'\ttest -n "$$results" || results=/dev/null; \\\n'
'\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
'\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
'\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
'\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
'\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
'\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
'\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
'\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
'\t  success=true; \\\n'
'\telse \\\n'
'\t  success=false; \\\n'
'\tfi; \\\n'
"\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
'\tresult_count () \\\n'
'\t{ \\\n'
'\t    if test x"$$1" = x"--maybe-color"; then \\\n'
'\t      maybe_colorize=yes; \\\n'
'\t    elif test x"$$1" = x"--no-color"; then \\\n'
'\t      maybe_colorize=no; \\\n'
'\t    else \\\n'
'\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
'\t    fi; \\\n'
'\t    shift; \\\n'
'\t    desc=$$1 count=$$2; \\\n'
'\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
'\t      color_start=$$3 color_end=$$std; \\\n'
'\t    else \\\n'
'\t      color_start= color_end=; \\\n'
'\t    fi; \\\n'
'\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
'\t}; \\\n'
'\tcreate_testsuite_report () \\\n'
'\t{ \\\n'
'\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
'\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
'\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
'\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
'\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
'\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
'\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
'\t}; \\\n'
'\t{\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
'\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
'\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
'\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
'\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
'\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
'\tif $$success; then\t\t\t\t\t\t\\\n'
'\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
'\t else\t\t\t\t\t\t\t\t\\\n'
'\t  col="$$red";\t\t\t\t\t\t\t\\\n'
'\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
'\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
'\tif $$success; then :; else\t\t\t\t\t\\\n'
'\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
'\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
'\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
'\t  fi;\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\t$$success || exit 1\n'
'\n'
'check-TESTS: \n'
'\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
'\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
'\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
'\texit $$?;\n'
'recheck: all \n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tbases=`for i in $$bases; do echo $$i; done \\\n'
'\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\tlog_list=`echo $$log_list`; \\\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n'
'\t        am__force_recheck=am--force-recheck \\\n'
'\t        TEST_LOGS="$$log_list"; \\\n'
'\texit $$?\n'
'checksettings.log: checksettings$(EXEEXT)\n'
"\t@p='checksettings$(EXEEXT)'; \\\n"
"\tb='checksettings'; \\\n"
'\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
'\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'.test.log:\n'
"\t@p='$<'; \\\n"
'\t$(am__set_b); \\\n'
'\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'#.test$(EXEEXT).log:\n'
"#\t@p='$<'; \\\n"
'#\t$(am__set_b); \\\n'
'#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'#\t--log-file $$b.log --trs-file $$b.trs \\\n'
'#\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'#\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local\n'
'check: check-am\n'
'all-am: $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
'\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
'\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS mostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'\n'
'\n'
'install-data-am: install-libgdkincludeHEADERS\n'
'\n'
'\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'\n'
'\n'
'install-man:\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'installcheck-am:\n'
'\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'uninstall-am: uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS \\\n\tcheck-am check-local clean clean-generic clean-libtool \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n\tctags ctags-am distclean distclean-compile distclean-generic \\\n\tdistclean-libtool distclean-tags distdir html \\\n\thtml-am install install-am install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-libgdkincludeHEADERS install-man \\\n\t\\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tmostlyclean \\\n\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n\trecheck tags tags-am uninstall \\\n\tuninstall-am uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After de-libtoolization pass:
'\n'
"am__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\n"
'am__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo "am__make_running_with_option: internal error: invalid" \\\n              "target option \'$${target_option-}\' specified" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt \'I\'; skip_next=yes;; \\\n      -*I?*) strip_trailopt \'I\';; \\\n        -*O) strip_trailopt \'O\'; skip_next=yes;; \\\n      -*O?*) strip_trailopt \'O\';; \\\n        -*l) strip_trailopt \'l\'; skip_next=yes;; \\\n      -*l?*) strip_trailopt \'l\';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\n'
'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
'am__make_keepgoing = (target_option=k; $(am__make_running_with_option))\n'
'pkgdatadir = $(datadir)/gtk+\n'
'pkgincludedir = $(includedir)/gtk+\n'
'pkglibdir = $(libdir)/gtk+\n'
'pkglibexecdir = $(libexecdir)/gtk+\n'
'am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd\n'
'install_sh_DATA = install -c -m 644\n'
'install_sh_PROGRAM = install -c\n'
'install_sh_SCRIPT = install -c\n'
'INSTALL_HEADER = install -c -m 644\n'
'transform = $(program_transform_name)\n'
'NORMAL_INSTALL = :\n'
'PRE_INSTALL = :\n'
'POST_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'PRE_UNINSTALL = :\n'
'POST_UNINSTALL = :\n'
'build_triplet = $(build_cpu)-$(build_vendor)-$(build_os)\n'
'host_triplet = $(host_cpu)-$(host_vendor)-$(host_os)\n'
'#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
'am__append_2 = gdkinput-none.c\n'
'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
'TESTS = checksettings$(EXEEXT)\n'
'subdir = gdk/x11\n'
'am__aclocal_m4_deps = $(top_srcdir)/m4/introspection.m4 \\\n\t$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/ltoptions.m4 \\\n\t$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \\\n\t$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/acinclude.m4 \\\n\t$(top_srcdir)/configure.ac\n'
'DIST_COMMON = $(libgdkinclude_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'mkinstalldirs = install -d\n'
'CONFIG_HEADER = $(top_builddir)/config.h\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
'PROGRAMS = $(noinst_PROGRAMS)\n'
'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
'libgdk_x11_la_LIBADD =\n'
'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n\tgdkinput-xfree.c gdkinput-none.c\n'
'#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
'am__objects_2 = gdkinput-none.lo\n'
'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n\t$(am__objects_2)\n'
'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
'am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_lt_0 = --silent\n'
'am__v_lt_1 = \n'
'checksettings_SOURCES = checksettings.c\n'
'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
'am__DEPENDENCIES_1 =\n'
'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
'AM_V_P = $(am__v_P_$(V))\n'
'am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_P_0 = false\n'
'am__v_P_1 = :\n'
'AM_V_GEN = $(am__v_GEN_$(V))\n'
'am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_GEN_0 = @echo "  GEN     " $@;\n'
'am__v_GEN_1 = \n'
'am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_at_0 = @\n'
'am__v_at_1 = \n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'am__maybe_remake_depfiles = depfiles\n'
'am__mv = mv -f\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \\\n\t$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \\\n\t$(AM_CFLAGS) $(CFLAGS)\n'
'am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_CC_0 = @echo "  CC      " $@;\n'
'am__v_CC_1 = \n'
'CCLD = $(CC)\n'
'LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \\\n\t$(AM_LDFLAGS) $(LDFLAGS) -o $@\n'
'am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))\n'
'am__v_CCLD_0 = @echo "  CCLD    " $@;\n'
'am__v_CCLD_1 = \n'
'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
'am__can_run_installinfo = \\\n  case $$AM_UPDATE_INFO_DIR in \\\n    n|no|NO) false;; \\\n    *) (install-info --version) >/dev/null 2>&1;; \\\n  esac\n'
'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
'am__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n    *) f=$$p;; \\\n  esac;\n'
"am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;\n"
'am__install_max = 40\n'
'am__nobase_strip_setup = \\\n  srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*|]/\\\\\\\\&/g\'`\n'
'am__nobase_strip = \\\n  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"\n'
'am__nobase_list = $(am__nobase_strip_setup); \\\n  for p in $$list; do echo "$$p $$p"; done | \\\n  sed "s| $$srcdirstrip/| |;"\' / .*\\//!s/ .*/ ./; s,\\( .*\\)/[^/]*$$,\\1,\' | \\\n  awk \'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \\\n    if (++n[$$2] == $(am__install_max)) \\\n      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \\\n    END { for (dir in files) print dir, files[dir] }\'\n'
"am__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
'am__uninstall_files_from_dir = { \\\n  test -z "$$files" \\\n    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n         cd >/dev/null "$$dir" && rm -f $$files; }; \\\n  }\n'
'am__installdirs = "$(DESTDIR)$(libgdkincludedir)"\n'
'HEADERS = $(libgdkinclude_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\n'
'am__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n    am__color_tests=no; \\\n  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red=\'\x1b[0;31m\'; \\\n    grn=\'\x1b[0;32m\'; \\\n    lgn=\'\x1b[1;32m\'; \\\n    blu=\'\x1b[1;34m\'; \\\n    mgn=\'\x1b[0;35m\'; \\\n    brg=\'\x1b[1m\'; \\\n    std=\'\x1b[m\'; \\\n  fi; \\\n}\n'
'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, print the name of the tests that are to be re-run\n'
'# upon "make recheck".\n'
'am__list_recheck_tests = awk \'{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 ".log")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, create the global log from their .trs and .log files.\n'
'am__create_global_log = awk \' \\\nfunction fatal(msg) \\\n{ \\\n  print "fatal: making $@: " msg | "cat >&2"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf "="; \\\n  printf "\\n\\n"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = "RUN"; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal("failed to read from " $$0 ".trs"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub("$(am__global_test_result_rx)", "", line); \\\n          sub("[ \t]*$$", "", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result ": " $$0); \\\n      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal("failed to read from " $$0 ".log"); \\\n        print line; \\\n      }; \\\n      printf "\\n"; \\\n    }; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# Restructured Text title.\n'
"am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
"# Solaris 10 'make', and several other traditional 'make' implementations,\n"
'# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
'# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
'# Default flags passed to test drivers.\n'
'am__common_driver_flags = \\\n  --color-tests "$$am__color_tests" \\\n  --enable-hard-errors "$$am__enable_hard_errors" \\\n  --expect-failure "$$am__expect_failure"\n'
'# To be inserted before the command running the test.  Creates the\n'
'# directory for the log if needed.  Stores in $dir the directory\n'
'# containing $f, in $tst the test, in $log the log.  Executes the\n'
'# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
'# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
'# will run the test scripts (or their associated LOG_COMPILER, if\n'
'# thy have one).\n'
'am__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n  || mkdir -p "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
'# A shell command to get the names of the tests scripts with any registered\n'
'# extension removed (i.e., equivalently, the names of the test logs, with\n'
"# the '.log' extension removed).  The result is saved in the shell variable\n"
"# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
'# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
'# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
"# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
"am__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\n"
"AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
'RECHECK_LOGS = $(TEST_LOGS)\n'
'AM_RECURSIVE_TARGETS = check recheck\n'
'TEST_SUITE_LOG = test-suite.log\n'
'TEST_EXTENSIONS =  .test\n'
'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)\n'
"am__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\n"
'am__test_logs1 = $(TESTS:=.log)\n'
'am__test_logs2 = $(am__test_logs1:.log=.log)\n'
'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \\\n\t$(TEST_LOG_FLAGS)\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)\n'
'AMTAR = $${TAR-tar}\n'
'AM_DEFAULT_VERBOSITY = 1\n'
'AR = ar\n'
'AS = as\n'
'AWK = gawk\n'
'BASE_DEPENDENCIES_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/harfbuzz -I/usr/include/fribidi -I/usr/include/cairo -I/usr/include/freetype2 -I/usr/include/pixman-1 -I/usr/include/gdk-pixbuf-2.0 -I/usr/include/libpng16 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'BASE_DEPENDENCIES_LIBS = -lpango-1.0 -lharfbuzz -lcairo -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
'CAIRO_BACKEND_CFLAGS = -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1\n'
'CAIRO_BACKEND_LIBS = -lcairo -lX11 -lXext\n'
'CAIRO_PREFIX = /usr\n'
'CC = gcc\n'
'CCAS = gcc\n'
'CCASDEPMODE = depmode=none\n'
'CCASFLAGS = -g -O2\n'
'CCDEPMODE = depmode=none\n'
'CFLAGS = -g -O2 -Wall\n'
'CPP = gcc -E\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
'CSCOPE = cscope\n'
'CTAGS = ctags\n'
'CUPS_API_MAJOR = \n'
'CUPS_API_MINOR = \n'
'CUPS_CFLAGS = \n'
'CUPS_CONFIG = no\n'
'CUPS_LIBS = \n'
'CXX = c++\n'
'CXXCPP = c++ -E\n'
'CXXDEPMODE = depmode=none\n'
'CXXFLAGS = -g -O2\n'
'CYGPATH_W = echo\n'
'DB2HTML = false\n'
'DEFS = -DHAVE_CONFIG_H\n'
'DEPDIR = .deps\n'
'DIRECTFB_CFLAGS = \n'
'DIRECTFB_LIBS = \n'
'DLLTOOL = dlltool\n'
'DSYMUTIL = \n'
'DUMPBIN = \n'
'ECHO_C = \n'
'ECHO_N = -n\n'
'ECHO_T = \n'
'EGREP = /bin/grep -E\n'
'ETAGS = etags\n'
'EXEEXT = \n'
'EXE_MANIFEST_ARCHITECTURE = X86\n'
'FGREP = /bin/grep -F\n'
'FILECMD = file\n'
'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
'GDK_DEP_LIBS = -lpangocairo-1.0 -lpango-1.0 -lharfbuzz -lgio-2.0 -lfontconfig -lfreetype -lXrender -lXinerama -lXrandr -lXcursor -lXcomposite -lXdamage -lXfixes -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0 -lcairo -lX11 -lXext -lm\n'
'GDK_EXTRA_CFLAGS = \n'
'GDK_EXTRA_LIBS = \n'
'GDK_PACKAGES = pango pangocairo gdk-pixbuf-2.0\n'
'GDK_PIXBUF_CSOURCE = /usr/bin/gdk-pixbuf-csource\n'
'GDK_PIXBUF_LIBS = -lgdk_pixbuf-2.0 -lgobject-2.0 -lglib-2.0\n'
'GLIB_CFLAGS = -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'GLIB_COMPILE_RESOURCES = /usr/bin/glib-compile-resources\n'
'GLIB_GENMARSHAL = /usr/bin/glib-genmarshal\n'
'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
'GLIB_MKENUMS = /usr/bin/glib-mkenums\n'
'GLIB_PREFIX = /usr\n'
'GMODULE_CFLAGS = -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include\n'
'GMODULE_LIBS = -Wl,--export-dynamic -lgmodule-2.0 -pthread -lglib-2.0\n'
'GOBJECT_QUERY = /usr/bin/gobject-query\n'
'GREP = /bin/grep\n'
'GTKDOC_CHECK = \n'
'GTKDOC_CHECK_PATH = \n'
'GTKDOC_DEPS_CFLAGS = -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/lib64/libffi/include\n'
'GTKDOC_DEPS_LIBS = -lgobject-2.0 -lglib-2.0\n'
'GTKDOC_MKPDF = \n'
'GTKDOC_REBASE = true\n'
'GTK_API_VERSION = 2.0\n'
'GTK_BINARY_AGE = 2433\n'
'GTK_BINARY_VERSION = 2.10.0\n'
'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
'GTK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1  \n'
'GTK_DEP_LIBS = -lpangocairo-1.0 -lX11 -lXcomposite -lXdamage -lXfixes -lcairo -lgdk_pixbuf-2.0 -lgio-2.0 -lpangoft2-1.0 -lpango-1.0 -lgobject-2.0 -lglib-2.0 -lharfbuzz -lfontconfig -lfreetype -lm\n'
'GTK_EXTRA_CFLAGS = \n'
'GTK_EXTRA_LIBS = \n'
'GTK_INTERFACE_AGE = 33\n'
'GTK_MAJOR_VERSION = 2\n'
'GTK_MICRO_VERSION = 33\n'
'GTK_MINOR_VERSION = 24\n'
'GTK_PACKAGES = cairo gdk-pixbuf-2.0 gio-2.0 pangoft2\n'
'GTK_UPDATE_ICON_CACHE = no\n'
'GTK_VERSION = 2.24.33\n'
'GTK_XIM_FLAGS = \n'
'HAVE_HTTP_AUTHSTRING = \n'
'HTML_DIR = ${datadir}/gtk-doc/html\n'
'INDENT = \n'
'INSTALL = /usr/bin/install -c\n'
'INSTALL_DATA = install -c -m 644\n'
'INSTALL_PROGRAM = install -c\n'
'INSTALL_SCRIPT = install -c\n'
'INSTALL_STRIP_PROGRAM = install -c -s\n'
'INTROSPECTION_CFLAGS = \n'
'INTROSPECTION_COMPILER = \n'
'INTROSPECTION_GENERATE = \n'
'INTROSPECTION_GIRDIR = \n'
'INTROSPECTION_LIBS = \n'
'INTROSPECTION_MAKEFILE = \n'
'INTROSPECTION_SCANNER = \n'
'INTROSPECTION_TYPELIBDIR = \n'
'LD = /usr/x86_64-pc-linux-gnu/bin/ld\n'
'LDFLAGS = \n'
'LIBOBJS = \n'
'LIBS = \n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'LIBTOOL_EXPORT_OPTIONS = -export-symbols-regex "^[^_].*"\n'
'LIB_EXE_MACHINE_FLAG = X86\n'
'LIPO = \n'
'LN_S = ln -s\n'
'LTLIBOBJS = \n'
'LT_CURRENT_MINUS_AGE = 0\n'
'LT_SYS_LIBRARY_PATH = \n'
'LT_VERSION_INFO = 2400:33:2400\n'
'MAINT = \n'
"MAKEINFO = ${SHELL} '/home/stefan/gtk2-test/missing' makeinfo\n"
'MANIFEST_TOOL = :\n'
'MATH_LIB = -lm\n'
'MKDIR_P = /bin/mkdir -p\n'
'NM = /usr/bin/nm -B\n'
'NMEDIT = \n'
'OBJDUMP = objdump\n'
'OBJEXT = o\n'
'OTOOL = \n'
'OTOOL64 = \n'
'PACKAGE = gtk+\n'
'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
'PACKAGE_NAME = $(PACKAGE)\n'
'PACKAGE_STRING = $(PACKAGE) $(VERSION)\n'
'PACKAGE_TARNAME = $(PACKAGE)\n'
'PACKAGE_URL = \n'
'PACKAGE_VERSION = $(VERSION)\n'
'PANGO_PREFIX = /usr\n'
'PATH_SEPARATOR = :\n'
'PERL = /usr/bin/perl\n'
'PKG_CONFIG = /usr/bin/pkg-config\n'
'PKG_CONFIG_LIBDIR = \n'
'PKG_CONFIG_PATH = \n'
'RANLIB = ranlib\n'
'REBUILD = \n'
'SED = /bin/sed\n'
'SHELL = /bin/sh\n'
'STRIP = strip\n'
'VERSION = 2.24.33\n'
'WINDRES = \n'
'XMKMF = \n'
'XMLCATALOG = \n'
'XML_CATALOG_FILE = \n'
'XSLTPROC = \n'
'X_CFLAGS = \n'
'X_EXTRA_LIBS = \n'
'X_LIBS = \n'
'X_PRE_LIBS = \n'
'abs_builddir = /home/stefan/gtk2-test/gdk/x11\n'
'abs_srcdir = /home/stefan/gtk2-test/gdk/x11\n'
'abs_top_builddir = /home/stefan/gtk2-test\n'
'abs_top_srcdir = /home/stefan/gtk2-test\n'
'ac_ct_AR = ar\n'
'ac_ct_CC = gcc\n'
'ac_ct_CXX = c++\n'
'ac_ct_DUMPBIN = \n'
'am__include = include\n'
'am__leading_dot = .\n'
'am__quote = \n'
'am__tar = $${TAR-tar} chof - "$$tardir"\n'
'am__untar = $${TAR-tar} xf -\n'
'bindir = ${exec_prefix}/bin\n'
'build = $(build_cpu)-$(build_vendor)-$(build_os)\n'
'build_alias = i686-pc-linux-gnu\n'
'build_cpu = i686\n'
'build_os = linux-gnu\n'
'build_vendor = pc\n'
'builddir = .\n'
'datadir = /usr/share\n'
'datarootdir = /usr/share\n'
'docdir = /usr/share/doc/gtk+-2.24.33-r4\n'
'dvidir = ${docdir}\n'
'exec_prefix = ${prefix}\n'
'gdktarget = x11\n'
'gdktargetlib = libgdk-x11-2.0.la\n'
'gtktargetlib = libgtk-x11-2.0.la\n'
'host = $(host_cpu)-$(host_vendor)-$(host_os)\n'
'host_alias = i686-pc-linux-gnu\n'
'host_cpu = i686\n'
'host_os = linux-gnu\n'
'host_vendor = pc\n'
'htmldir = /usr/share/doc/gtk+-2.24.33-r4/html\n'
'includedir = ${prefix}/include\n'
'infodir = /usr/share/info\n'
'libdir = /usr/lib\n'
'libexecdir = ${exec_prefix}/libexec\n'
'localedir = ${datarootdir}/locale\n'
'localstatedir = /var/lib\n'
'mandir = /usr/share/man\n'
'mkdir_p = mkdir -p\n'
'ms_librarian = \n'
'oldincludedir = /usr/include\n'
'pdfdir = ${docdir}\n'
'prefix = /usr\n'
'program_transform_name = s,x,x,\n'
'psdir = ${docdir}\n'
'runstatedir = ${localstatedir}/run\n'
'sbindir = ${exec_prefix}/sbin\n'
'sharedstatedir = ${prefix}/com\n'
'srcdir = .\n'
'sysconfdir = /etc\n'
'target_alias = \n'
'top_build_prefix = ../../\n'
'top_builddir = ../..\n'
'top_srcdir = ../..\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'\n'
'# We need to include all these C files here since the conditionals\n'
"# don't seem to be correctly expanded for the dist files.\n"
'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n\tgdksettings.c\n'
'TEST_PROGS = \n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
'INCLUDES = \\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)\n'
'\n'
'LDADDS = $(GDK_DEP_LIBS)\n'
'noinst_LTLIBRARIES = libgdk-x11.la\n'
'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n\txsettings-client.c xsettings-common.h xsettings-common.c \\\n\t$(am__append_1) $(am__append_2)\n'
'libgdkinclude_HEADERS = \\\n\tgdkx.h\n'
'\n'
'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'\n'
'\n'
'clean-noinstPROGRAMS:\n'
'\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list || exit $$?; \\\n'
'\ttest -n "$(EXEEXT)" || exit 0; \\\n'
'\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list\n'
'\n'
'clean-noinstLTLIBRARIES:\n'
'\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
"\t@list='$(noinst_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
'\t$(AM_V_CCLD)$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
'\n'
'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
'\t@rm -f checksettings$(EXEEXT)\n'
'\t$(AM_V_CCLD)$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'\n'
'\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(AM_V_CC)$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\t$(AM_V_CC)source='$<' object='$@' libtool=no \n"
"\t$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\t$(AM_V_CC)source='$<' object='$@' libtool=yes \n"
'\t$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
'\tif test -n "$$list"; then \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
'\tfi; \\\n'
'\tfor p in $$list; do \\\n'
'\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
'\t  echo "$$d$$p"; \\\n'
'\tdone | $(am__base_list) | \\\n'
'\twhile read files; do \\\n'
'\t  echo " install -c -m 644 $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  install -c -m 644 $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
'\tdone\n'
'\n'
'uninstall-libgdkincludeHEADERS:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
"\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
"\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'\n'
"# Recover from deleted '.trs' file; this should ensure that\n"
'# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
"# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
'# to avoid problems with "make -n".\n'
'.log.trs:\n'
'\trm -f $< $@\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $<\n'
'\n'
"# Leading 'am--fnord' is there to ensure the list of targets does not\n"
"# expand to empty, as could happen e.g. with make check TESTS=''.\n"
'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
'am--force-recheck:\n'
'\t@:\n'
'\n'
'$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
'\t@$(am__set_TESTS_bases); \\\n'
'\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
'\tredo_bases=`for i in $$bases; do \\\n'
'\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
'\t            done`; \\\n'
'\tif test -n "$$redo_bases"; then \\\n'
'\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
'\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
'\t  if $(am__make_dryrun); then :; else \\\n'
'\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
'\t  fi; \\\n'
'\tfi; \\\n'
'\tif test -n "$$am__remaking_logs"; then \\\n'
'\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
'\t       "recursion detected" >&2; \\\n'
'\telif test -n "$$redo_logs"; then \\\n'
'\t  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \\\n'
'\tfi; \\\n'
'\tif $(am__make_dryrun); then :; else \\\n'
'\t  st=0;  \\\n'
'\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
'\t  for i in $$redo_bases; do \\\n'
'\t    test -f $$i.trs && test -r $$i.trs \\\n'
'\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
'\t    test -f $$i.log && test -r $$i.log \\\n'
'\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
'\t  done; \\\n'
'\t  test $$st -eq 0 || exit 1; \\\n'
'\tfi\n'
'\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
"\tws='[ \t]'; \\\n"
'\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
'\ttest -n "$$results" || results=/dev/null; \\\n'
'\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
'\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
'\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
'\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
'\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
'\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
'\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
'\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
'\t  success=true; \\\n'
'\telse \\\n'
'\t  success=false; \\\n'
'\tfi; \\\n'
"\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
'\tresult_count () \\\n'
'\t{ \\\n'
'\t    if test x"$$1" = x"--maybe-color"; then \\\n'
'\t      maybe_colorize=yes; \\\n'
'\t    elif test x"$$1" = x"--no-color"; then \\\n'
'\t      maybe_colorize=no; \\\n'
'\t    else \\\n'
'\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
'\t    fi; \\\n'
'\t    shift; \\\n'
'\t    desc=$$1 count=$$2; \\\n'
'\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
'\t      color_start=$$3 color_end=$$std; \\\n'
'\t    else \\\n'
'\t      color_start= color_end=; \\\n'
'\t    fi; \\\n'
'\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
'\t}; \\\n'
'\tcreate_testsuite_report () \\\n'
'\t{ \\\n'
'\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
'\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
'\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
'\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
'\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
'\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
'\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
'\t}; \\\n'
'\t{\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
'\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
'\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
'\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
'\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
'\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
'\tif $$success; then\t\t\t\t\t\t\\\n'
'\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
'\t else\t\t\t\t\t\t\t\t\\\n'
'\t  col="$$red";\t\t\t\t\t\t\t\\\n'
'\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
'\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
'\tif $$success; then :; else\t\t\t\t\t\\\n'
'\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
'\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
'\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
'\t  fi;\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\t$$success || exit 1\n'
'\n'
'check-TESTS: \n'
'\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
'\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
'\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
'\texit $$?;\n'
'recheck: all \n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tbases=`for i in $$bases; do echo $$i; done \\\n'
'\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\tlog_list=`echo $$log_list`; \\\n'
'\t$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \\\n'
'\t        am__force_recheck=am--force-recheck \\\n'
'\t        TEST_LOGS="$$log_list"; \\\n'
'\texit $$?\n'
'checksettings.log: checksettings$(EXEEXT)\n'
"\t@p='checksettings$(EXEEXT)'; \\\n"
"\tb='checksettings'; \\\n"
'\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
'\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'.test.log:\n'
"\t@p='$<'; \\\n"
'\t$(am__set_b); \\\n'
'\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'#.test$(EXEEXT).log:\n'
"#\t@p='$<'; \\\n"
'#\t$(am__set_b); \\\n'
'#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'#\t--log-file $$b.log --trs-file $$b.trs \\\n'
'#\t$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'#\t"$$tst" $(AM_TESTS_FD_REDIRECT)\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) $(AM_MAKEFLAGS) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local\n'
'check: check-am\n'
'all-am: $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
'\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
'\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS mostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'\n'
'\n'
'install-data-am: install-libgdkincludeHEADERS\n'
'\n'
'\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'\n'
'\n'
'install-man:\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'installcheck-am:\n'
'\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'uninstall-am: uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS \\\n\tcheck-am check-local clean clean-generic clean-libtool \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n\tctags ctags-am distclean distclean-compile distclean-generic \\\n\tdistclean-libtool distclean-tags distdir html \\\n\thtml-am install install-am install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-libgdkincludeHEADERS install-man \\\n\t\\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tmostlyclean \\\n\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n\trecheck tags tags-am uninstall \\\n\tuninstall-am uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After scavenging pass:
'\n'
"am__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\n"
'am__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo "am__make_running_with_option: internal error: invalid" \\\n              "target option \'$${target_option-}\' specified" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt \'I\'; skip_next=yes;; \\\n      -*I?*) strip_trailopt \'I\';; \\\n        -*O) strip_trailopt \'O\'; skip_next=yes;; \\\n      -*O?*) strip_trailopt \'O\';; \\\n        -*l) strip_trailopt \'l\'; skip_next=yes;; \\\n      -*l?*) strip_trailopt \'l\';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\n'
'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
'am__append_2 = gdkinput-none.c\n'
'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
'subdir = gdk/x11\n'
'DIST_COMMON = $(libgdkinclude_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
'PROGRAMS = $(noinst_PROGRAMS)\n'
'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
'libgdk_x11_la_LIBADD =\n'
'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n\tgdkinput-xfree.c gdkinput-none.c\n'
'#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
'am__objects_2 = gdkinput-none.lo\n'
'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n\t$(am__objects_2)\n'
'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
'am__DEPENDENCIES_1 =\n'
'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'CCLD = $(CC)\n'
'LINK = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(CFLAGS) \\\n\t $(LDFLAGS) -o $@\n'
'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
'am__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n    *) f=$$p;; \\\n  esac;\n'
"am__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
'am__uninstall_files_from_dir = { \\\n  test -z "$$files" \\\n    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n         cd >/dev/null "$$dir" && rm -f $$files; }; \\\n  }\n'
'HEADERS = $(libgdkinclude_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\n'
'am__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n    am__color_tests=no; \\\n  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red=\'\x1b[0;31m\'; \\\n    grn=\'\x1b[0;32m\'; \\\n    lgn=\'\x1b[1;32m\'; \\\n    blu=\'\x1b[1;34m\'; \\\n    mgn=\'\x1b[0;35m\'; \\\n    brg=\'\x1b[1m\'; \\\n    std=\'\x1b[m\'; \\\n  fi; \\\n}\n'
'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, print the name of the tests that are to be re-run\n'
'# upon "make recheck".\n'
'am__list_recheck_tests = awk \'{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 ".log")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, create the global log from their .trs and .log files.\n'
'am__create_global_log = awk \' \\\nfunction fatal(msg) \\\n{ \\\n  print "fatal: making $@: " msg | "cat >&2"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf "="; \\\n  printf "\\n\\n"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = "RUN"; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal("failed to read from " $$0 ".trs"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub("$(am__global_test_result_rx)", "", line); \\\n          sub("[ \t]*$$", "", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result ": " $$0); \\\n      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal("failed to read from " $$0 ".log"); \\\n        print line; \\\n      }; \\\n      printf "\\n"; \\\n    }; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# Restructured Text title.\n'
"am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
"# Solaris 10 'make', and several other traditional 'make' implementations,\n"
'# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
'# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
'# Default flags passed to test drivers.\n'
'am__common_driver_flags = \\\n  --color-tests "$$am__color_tests" \\\n  --enable-hard-errors "$$am__enable_hard_errors" \\\n  --expect-failure "$$am__expect_failure"\n'
'# To be inserted before the command running the test.  Creates the\n'
'# directory for the log if needed.  Stores in $dir the directory\n'
'# containing $f, in $tst the test, in $log the log.  Executes the\n'
'# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
'# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
'# will run the test scripts (or their associated LOG_COMPILER, if\n'
'# thy have one).\n'
'am__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n  || mkdir -p "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
'# A shell command to get the names of the tests scripts with any registered\n'
'# extension removed (i.e., equivalently, the names of the test logs, with\n'
"# the '.log' extension removed).  The result is saved in the shell variable\n"
"# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
'# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
'# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
"# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
"am__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\n"
"AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
'RECHECK_LOGS = $(TEST_LOGS)\n'
'TEST_SUITE_LOG = test-suite.log\n'
'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'LOG_COMPILE = $(LOG_COMPILER) $(LOG_FLAGS)\n'
"am__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\n"
'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) \\\n\t$(TEST_LOG_FLAGS)\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
'CYGPATH_W = echo\n'
'DEFS = -DHAVE_CONFIG_H\n'
'EXEEXT = \n'
'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
'LDFLAGS = \n'
'LIBS = \n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'OBJEXT = o\n'
'PACKAGE = gtk+\n'
'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
'PACKAGE_STRING = $(PACKAGE) $(VERSION)\n'
'SHELL = /bin/sh\n'
'VERSION = 2.24.33\n'
'gdktarget = x11\n'
'includedir = ${prefix}/include\n'
'prefix = /usr\n'
'srcdir = .\n'
'top_builddir = ../..\n'
'top_srcdir = ../..\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'\n'
'# We need to include all these C files here since the conditionals\n'
"# don't seem to be correctly expanded for the dist files.\n"
'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n\tgdksettings.c\n'
'TEST_PROGS = \n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
'INCLUDES = \\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)\n'
'\n'
'noinst_LTLIBRARIES = libgdk-x11.la\n'
'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n\txsettings-client.c xsettings-common.h xsettings-common.c \\\n\t$(am__append_1) $(am__append_2)\n'
'libgdkinclude_HEADERS = \\\n\tgdkx.h\n'
'\n'
'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'\n'
'\n'
'clean-noinstPROGRAMS:\n'
'\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list || exit $$?; \\\n'
'\ttest -n "$(EXEEXT)" || exit 0; \\\n'
'\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list\n'
'\n'
'clean-noinstLTLIBRARIES:\n'
'\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
"\t@list='$(noinst_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
'\t$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
'\n'
'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
'\t@rm -f checksettings$(EXEEXT)\n'
'\t$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'\n'
'\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no \n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes \n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
'\tif test -n "$$list"; then \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
'\tfi; \\\n'
'\tfor p in $$list; do \\\n'
'\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
'\t  echo "$$d$$p"; \\\n'
'\tdone | $(am__base_list) | \\\n'
'\twhile read files; do \\\n'
'\t  echo " install -c -m 644 $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  install -c -m 644 $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
'\tdone\n'
'\n'
'uninstall-libgdkincludeHEADERS:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
"\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
"\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'\n'
"# Recover from deleted '.trs' file; this should ensure that\n"
'# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
"# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
'# to avoid problems with "make -n".\n'
'.log.trs:\n'
'\trm -f $< $@\n'
'\t$(MAKE) $<\n'
'\n'
"# Leading 'am--fnord' is there to ensure the list of targets does not\n"
"# expand to empty, as could happen e.g. with make check TESTS=''.\n"
'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
'am--force-recheck:\n'
'\t@:\n'
'\n'
'$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
'\t@$(am__set_TESTS_bases); \\\n'
'\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
'\tredo_bases=`for i in $$bases; do \\\n'
'\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
'\t            done`; \\\n'
'\tif test -n "$$redo_bases"; then \\\n'
'\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
'\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
'\t  if $(am__make_dryrun); then :; else \\\n'
'\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
'\t  fi; \\\n'
'\tfi; \\\n'
'\tif test -n "$$am__remaking_logs"; then \\\n'
'\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
'\t       "recursion detected" >&2; \\\n'
'\telif test -n "$$redo_logs"; then \\\n'
'\t  am__remaking_logs=yes $(MAKE) $$redo_logs; \\\n'
'\tfi; \\\n'
'\tif $(am__make_dryrun); then :; else \\\n'
'\t  st=0;  \\\n'
'\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
'\t  for i in $$redo_bases; do \\\n'
'\t    test -f $$i.trs && test -r $$i.trs \\\n'
'\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
'\t    test -f $$i.log && test -r $$i.log \\\n'
'\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
'\t  done; \\\n'
'\t  test $$st -eq 0 || exit 1; \\\n'
'\tfi\n'
'\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
"\tws='[ \t]'; \\\n"
'\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
'\ttest -n "$$results" || results=/dev/null; \\\n'
'\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
'\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
'\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
'\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
'\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
'\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
'\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
'\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
'\t  success=true; \\\n'
'\telse \\\n'
'\t  success=false; \\\n'
'\tfi; \\\n'
"\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
'\tresult_count () \\\n'
'\t{ \\\n'
'\t    if test x"$$1" = x"--maybe-color"; then \\\n'
'\t      maybe_colorize=yes; \\\n'
'\t    elif test x"$$1" = x"--no-color"; then \\\n'
'\t      maybe_colorize=no; \\\n'
'\t    else \\\n'
'\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
'\t    fi; \\\n'
'\t    shift; \\\n'
'\t    desc=$$1 count=$$2; \\\n'
'\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
'\t      color_start=$$3 color_end=$$std; \\\n'
'\t    else \\\n'
'\t      color_start= color_end=; \\\n'
'\t    fi; \\\n'
'\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
'\t}; \\\n'
'\tcreate_testsuite_report () \\\n'
'\t{ \\\n'
'\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
'\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
'\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
'\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
'\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
'\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
'\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
'\t}; \\\n'
'\t{\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
'\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
'\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
'\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
'\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
'\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
'\tif $$success; then\t\t\t\t\t\t\\\n'
'\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
'\t else\t\t\t\t\t\t\t\t\\\n'
'\t  col="$$red";\t\t\t\t\t\t\t\\\n'
'\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
'\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
'\tif $$success; then :; else\t\t\t\t\t\\\n'
'\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
'\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
'\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
'\t  fi;\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\t$$success || exit 1\n'
'\n'
'check-TESTS: \n'
'\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
'\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
'\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
'\t$(MAKE) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
'\texit $$?;\n'
'recheck: all \n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tbases=`for i in $$bases; do echo $$i; done \\\n'
'\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\tlog_list=`echo $$log_list`; \\\n'
'\t$(MAKE) $(TEST_SUITE_LOG) \\\n'
'\t        am__force_recheck=am--force-recheck \\\n'
'\t        TEST_LOGS="$$log_list"; \\\n'
'\texit $$?\n'
'checksettings.log: checksettings$(EXEEXT)\n'
"\t@p='checksettings$(EXEEXT)'; \\\n"
"\tb='checksettings'; \\\n"
'\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
'\t"$$tst"\n'
'.test.log:\n'
"\t@p='$<'; \\\n"
'\t$(am__set_b); \\\n'
'\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'\t"$$tst"\n'
'#.test$(EXEEXT).log:\n'
"#\t@p='$<'; \\\n"
'#\t$(am__set_b); \\\n'
'#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'#\t--log-file $$b.log --trs-file $$b.trs \\\n'
'#\t$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'#\t"$$tst"\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-TESTS check-local\n'
'check: check-am\n'
'all-am: $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
'\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
'\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS mostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'\n'
'\n'
'install-data-am: install-libgdkincludeHEADERS\n'
'\n'
'\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'\n'
'\n'
'install-man:\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'installcheck-am:\n'
'\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'uninstall-am: uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS \\\n\tcheck-am check-local clean clean-generic clean-libtool \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n\tctags ctags-am distclean distclean-compile distclean-generic \\\n\tdistclean-libtool distclean-tags distdir html \\\n\thtml-am install install-am install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-libgdkincludeHEADERS install-man \\\n\t\\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tmostlyclean \\\n\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n\trecheck tags tags-am uninstall \\\n\tuninstall-am uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: After reordering pass:
'# Identification\n'
'PACKAGE = gtk+\n'
'VERSION = 2.24.33\n'
'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
'LDFLAGS = \n'
'LIBS = \n'
'# Platform\n'
'OBJEXT = o\n'
'EXEEXT = \n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'prefix = /usr\n'
'includedir = ${prefix}/include\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../..\n'
'top_srcdir = ../..\n'
'subdir = gdk/x11\n'
'# Backwards compatibility\n'
'DEFS = -DHAVE_CONFIG_H\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(libgdkinclude_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS = \n'
'# Uncategorized\n'
'PACKAGE_STRING = $(PACKAGE) $(VERSION)\n'
'# conftrol variables end here\n'
'-include ../../config.mk\n'
'\n'
"am__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\n"
'am__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo "am__make_running_with_option: internal error: invalid" \\\n              "target option \'$${target_option-}\' specified" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt \'I\'; skip_next=yes;; \\\n      -*I?*) strip_trailopt \'I\';; \\\n        -*O) strip_trailopt \'O\'; skip_next=yes;; \\\n      -*O?*) strip_trailopt \'O\';; \\\n        -*l) strip_trailopt \'l\'; skip_next=yes;; \\\n      -*l?*) strip_trailopt \'l\';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\n'
'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
'#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
'am__append_2 = gdkinput-none.c\n'
'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
'PROGRAMS = $(noinst_PROGRAMS)\n'
'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
'libgdk_x11_la_LIBADD =\n'
'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n\tgdkinput-xfree.c gdkinput-none.c\n'
'#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
'am__objects_2 = gdkinput-none.lo\n'
'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n\t$(am__objects_2)\n'
'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
'am__DEPENDENCIES_1 =\n'
'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'CCLD = $(CC)\n'
'LINK = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=link $(CCLD) $(CFLAGS) \\\n\t $(LDFLAGS) -o $@\n'
'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
'am__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n    *) f=$$p;; \\\n  esac;\n'
"am__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
'am__uninstall_files_from_dir = { \\\n  test -z "$$files" \\\n    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n         cd >/dev/null "$$dir" && rm -f $$files; }; \\\n  }\n'
'HEADERS = $(libgdkinclude_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\n'
'am__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n    am__color_tests=no; \\\n  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red=\'\x1b[0;31m\'; \\\n    grn=\'\x1b[0;32m\'; \\\n    lgn=\'\x1b[1;32m\'; \\\n    blu=\'\x1b[1;34m\'; \\\n    mgn=\'\x1b[0;35m\'; \\\n    brg=\'\x1b[1m\'; \\\n    std=\'\x1b[m\'; \\\n  fi; \\\n}\n'
'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, print the name of the tests that are to be re-run\n'
'# upon "make recheck".\n'
'am__list_recheck_tests = awk \'{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 ".log")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, create the global log from their .trs and .log files.\n'
'am__create_global_log = awk \' \\\nfunction fatal(msg) \\\n{ \\\n  print "fatal: making $@: " msg | "cat >&2"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf "="; \\\n  printf "\\n\\n"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = "RUN"; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal("failed to read from " $$0 ".trs"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub("$(am__global_test_result_rx)", "", line); \\\n          sub("[ \t]*$$", "", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result ": " $$0); \\\n      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal("failed to read from " $$0 ".log"); \\\n        print line; \\\n      }; \\\n      printf "\\n"; \\\n    }; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# Restructured Text title.\n'
"am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
"# Solaris 10 'make', and several other traditional 'make' implementations,\n"
'# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
'# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
'# Default flags passed to test drivers.\n'
'am__common_driver_flags = \\\n  --color-tests "$$am__color_tests" \\\n  --enable-hard-errors "$$am__enable_hard_errors" \\\n  --expect-failure "$$am__expect_failure"\n'
'# To be inserted before the command running the test.  Creates the\n'
'# directory for the log if needed.  Stores in $dir the directory\n'
'# containing $f, in $tst the test, in $log the log.  Executes the\n'
'# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
'# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
'# will run the test scripts (or their associated LOG_COMPILER, if\n'
'# thy have one).\n'
'am__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n  || mkdir -p "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
'# A shell command to get the names of the tests scripts with any registered\n'
'# extension removed (i.e., equivalently, the names of the test logs, with\n'
"# the '.log' extension removed).  The result is saved in the shell variable\n"
"# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
'# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
'# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
"# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
"am__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\n"
"AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
'RECHECK_LOGS = $(TEST_LOGS)\n'
'TEST_SUITE_LOG = test-suite.log\n'
'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'LOG_COMPILE = $(LOG_COMPILER) $(LOG_FLAGS)\n'
"am__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\n"
'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) \\\n\t$(TEST_LOG_FLAGS)\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
'gdktarget = x11\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'\n'
'# We need to include all these C files here since the conditionals\n'
"# don't seem to be correctly expanded for the dist files.\n"
'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n\tgdksettings.c\n'
'TEST_PROGS = \n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
'INCLUDES = \\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)\n'
'\n'
'noinst_LTLIBRARIES = libgdk-x11.la\n'
'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n\txsettings-client.c xsettings-common.h xsettings-common.c \\\n\t$(am__append_1) $(am__append_2)\n'
'libgdkinclude_HEADERS = \\\n\tgdkx.h\n'
'\n'
'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'\n'
'\n'
'clean-noinstPROGRAMS:\n'
'\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list || exit $$?; \\\n'
'\ttest -n "$(EXEEXT)" || exit 0; \\\n'
'\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list\n'
'\n'
'clean-noinstLTLIBRARIES:\n'
'\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
"\t@list='$(noinst_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
'\t$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
'\n'
'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
'\t@rm -f checksettings$(EXEEXT)\n'
'\t$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'\n'
'\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no \n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes \n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
'\tif test -n "$$list"; then \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
'\tfi; \\\n'
'\tfor p in $$list; do \\\n'
'\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
'\t  echo "$$d$$p"; \\\n'
'\tdone | $(am__base_list) | \\\n'
'\twhile read files; do \\\n'
'\t  echo " install -c -m 644 $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  install -c -m 644 $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
'\tdone\n'
'\n'
'uninstall-libgdkincludeHEADERS:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
"\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
"\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'\n'
"# Recover from deleted '.trs' file; this should ensure that\n"
'# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
"# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
'# to avoid problems with "make -n".\n'
'.log.trs:\n'
'\trm -f $< $@\n'
'\t$(MAKE) $<\n'
'\n'
"# Leading 'am--fnord' is there to ensure the list of targets does not\n"
"# expand to empty, as could happen e.g. with make check TESTS=''.\n"
'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
'am--force-recheck:\n'
'\t@:\n'
'\n'
'$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
'\t@$(am__set_TESTS_bases); \\\n'
'\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
'\tredo_bases=`for i in $$bases; do \\\n'
'\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
'\t            done`; \\\n'
'\tif test -n "$$redo_bases"; then \\\n'
'\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
'\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
'\t  if $(am__make_dryrun); then :; else \\\n'
'\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
'\t  fi; \\\n'
'\tfi; \\\n'
'\tif test -n "$$am__remaking_logs"; then \\\n'
'\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
'\t       "recursion detected" >&2; \\\n'
'\telif test -n "$$redo_logs"; then \\\n'
'\t  am__remaking_logs=yes $(MAKE) $$redo_logs; \\\n'
'\tfi; \\\n'
'\tif $(am__make_dryrun); then :; else \\\n'
'\t  st=0;  \\\n'
'\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
'\t  for i in $$redo_bases; do \\\n'
'\t    test -f $$i.trs && test -r $$i.trs \\\n'
'\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
'\t    test -f $$i.log && test -r $$i.log \\\n'
'\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
'\t  done; \\\n'
'\t  test $$st -eq 0 || exit 1; \\\n'
'\tfi\n'
'\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
"\tws='[ \t]'; \\\n"
'\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
'\ttest -n "$$results" || results=/dev/null; \\\n'
'\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
'\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
'\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
'\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
'\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
'\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
'\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
'\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
'\t  success=true; \\\n'
'\telse \\\n'
'\t  success=false; \\\n'
'\tfi; \\\n'
"\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
'\tresult_count () \\\n'
'\t{ \\\n'
'\t    if test x"$$1" = x"--maybe-color"; then \\\n'
'\t      maybe_colorize=yes; \\\n'
'\t    elif test x"$$1" = x"--no-color"; then \\\n'
'\t      maybe_colorize=no; \\\n'
'\t    else \\\n'
'\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
'\t    fi; \\\n'
'\t    shift; \\\n'
'\t    desc=$$1 count=$$2; \\\n'
'\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
'\t      color_start=$$3 color_end=$$std; \\\n'
'\t    else \\\n'
'\t      color_start= color_end=; \\\n'
'\t    fi; \\\n'
'\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
'\t}; \\\n'
'\tcreate_testsuite_report () \\\n'
'\t{ \\\n'
'\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
'\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
'\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
'\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
'\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
'\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
'\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
'\t}; \\\n'
'\t{\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
'\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
'\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
'\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
'\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
'\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
'\tif $$success; then\t\t\t\t\t\t\\\n'
'\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
'\t else\t\t\t\t\t\t\t\t\\\n'
'\t  col="$$red";\t\t\t\t\t\t\t\\\n'
'\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
'\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
'\tif $$success; then :; else\t\t\t\t\t\\\n'
'\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
'\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
'\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
'\t  fi;\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\t$$success || exit 1\n'
'\n'
'check-TESTS: \n'
'\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
'\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
'\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
'\t$(MAKE) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
'\texit $$?;\n'
'recheck: all \n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tbases=`for i in $$bases; do echo $$i; done \\\n'
'\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\tlog_list=`echo $$log_list`; \\\n'
'\t$(MAKE) $(TEST_SUITE_LOG) \\\n'
'\t        am__force_recheck=am--force-recheck \\\n'
'\t        TEST_LOGS="$$log_list"; \\\n'
'\texit $$?\n'
'checksettings.log: checksettings$(EXEEXT)\n'
"\t@p='checksettings$(EXEEXT)'; \\\n"
"\tb='checksettings'; \\\n"
'\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
'\t"$$tst"\n'
'.test.log:\n'
"\t@p='$<'; \\\n"
'\t$(am__set_b); \\\n'
'\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'\t"$$tst"\n'
'#.test$(EXEEXT).log:\n'
"#\t@p='$<'; \\\n"
'#\t$(am__set_b); \\\n'
'#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'#\t--log-file $$b.log --trs-file $$b.trs \\\n'
'#\t$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'#\t"$$tst"\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-TESTS check-local\n'
'check: check-am\n'
'all-am: $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
'\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
'\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS mostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'\n'
'\n'
'install-data-am: install-libgdkincludeHEADERS\n'
'\n'
'\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'\n'
'\n'
'install-man:\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'installcheck-am:\n'
'\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'uninstall-am: uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS \\\n\tcheck-am check-local clean clean-generic clean-libtool \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n\tctags ctags-am distclean distclean-compile distclean-generic \\\n\tdistclean-libtool distclean-tags distdir html \\\n\thtml-am install install-am install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-libgdkincludeHEADERS install-man \\\n\t\\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tmostlyclean \\\n\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n\trecheck tags tags-am uninstall \\\n\tuninstall-am uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: definitions: {'am__is_gnu_make': "{ if test -z '$(MAKELEVEL)'; then false; elif test -n '$(MAKE_HOST)'; then true; elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then true; else false; fi; }", 'am__make_running_with_option': '\\\n case $${target_option-} in ?) ;; *) echo "am__make_running_with_option: internal error: invalid" "target option \'$${target_option-}\' specified" >&2; exit 1;; esac; has_opt=no; sane_makeflags=$$MAKEFLAGS; if $(am__is_gnu_make); then sane_makeflags=$$MFLAGS; else case $$MAKEFLAGS in *\\\\[\\ \\\t]*) bs=\\\\; sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; esac; fi; skip_next=no; strip_trailopt () { flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; }; for flg in $$sane_makeflags; do test $$skip_next = yes && { skip_next=no; continue; }; case $$flg in *=*|--*) continue;; -*I) strip_trailopt \'I\'; skip_next=yes;; -*I?*) strip_trailopt \'I\';; -*O) strip_trailopt \'O\'; skip_next=yes;; -*O?*) strip_trailopt \'O\';; -*l) strip_trailopt \'l\'; skip_next=yes;; -*l?*) strip_trailopt \'l\';; -[dEDm]) skip_next=yes;; -[JT]) skip_next=yes;; esac; case $$flg in *$$target_option*) has_opt=yes; break;; esac; done; test $$has_opt = yes', 'am__make_dryrun': '(target_option=n; $(am__make_running_with_option))', 'NORMAL_INSTALL': ':', 'NORMAL_UNINSTALL': ':', 'am__append_2': 'gdkinput-none.c', 'noinst_PROGRAMS': 'checksettings$(EXEEXT)', 'subdir': 'gdk/x11', 'DIST_COMMON': '$(libgdkinclude_HEADERS) $(am__DIST_COMMON)', 'CONFIG_CLEAN_VPATH_FILES': '', 'PROGRAMS': '$(noinst_PROGRAMS)', 'LTLIBRARIES': '$(noinst_LTLIBRARIES)', 'libgdk_x11_la_LIBADD': '', 'am__libgdk_x11_la_SOURCES_DIST': 'MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h gdkinputprivate.h xsettings-client.h xsettings-client.c xsettings-common.h xsettings-common.c gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c', 'am__objects_2': 'gdkinput-none.lo', 'am_libgdk_x11_la_OBJECTS': 'gdkapplaunchcontext-x11.lo gdkasync.lo gdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo gdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo gdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo gdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo gdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo gdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo gdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo gdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo xsettings-client.lo xsettings-common.lo $(am__objects_1) $(am__objects_2)', 'libgdk_x11_la_OBJECTS': '$(am_libgdk_x11_la_OBJECTS)', 'checksettings_OBJECTS': 'checksettings.$(OBJEXT)', 'am__DEPENDENCIES_1': '', 'checksettings_DEPENDENCIES': 'libgdk-x11.la $(am__DEPENDENCIES_1)', 'DEFAULT_INCLUDES': '-I. -I$(top_builddir)', 'COMPILE': '$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)', 'LTCOMPILE': '$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) $(CFLAGS)', 'CCLD': '$(CC)', 'LINK': '$(LIBTOOL) --tag=CC $(LIBTOOLFLAGS) --mode=link $(CCLD) $(CFLAGS) $(LDFLAGS) -o $@', 'SOURCES': '$(libgdk_x11_la_SOURCES) checksettings.c', 'DIST_SOURCES': '$(am__libgdk_x11_la_SOURCES_DIST) checksettings.c', 'am__vpath_adj_setup': 'srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;', 'am__vpath_adj': 'case $$p in $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; *) f=$$p;; esac;', 'am__base_list': "\\\n sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'", 'am__uninstall_files_from_dir': '{ test -z "$$files" || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; cd >/dev/null "$$dir" && rm -f $$files; }; }', 'HEADERS': '$(libgdkinclude_HEADERS)', 'am__tagged_files': '$(HEADERS) $(SOURCES) $(TAGS_FILES)', 'am__uniquify_input': "awk '\\\n BEGIN { nonempty = 0; } { items[$$0] = 1; nonempty = 1; } END { if (nonempty) { for (i in items) print i; }; } '", 'am__define_uniq_tagged_files': '\\\n list=\'$(am__tagged_files)\'; unique=`for i in $$list; do if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; done | $(am__uniquify_input)`', 'am__tty_colors_dummy': '\\\n mgn= red= grn= lgn= blu= brg= std=; am__color_tests=no', 'am__tty_colors': '{ $(am__tty_colors_dummy); if test "X$(AM_COLOR_TESTS)" = Xno; then am__color_tests=no; elif test "X$(AM_COLOR_TESTS)" = Xalways; then am__color_tests=yes; elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then am__color_tests=yes; fi; if test $$am__color_tests = yes; then red=\'\x1b[0;31m\'; grn=\'\x1b[0;32m\'; lgn=\'\x1b[1;32m\'; blu=\'\x1b[1;34m\'; mgn=\'\x1b[0;35m\'; brg=\'\x1b[1m\'; std=\'\x1b[m\'; fi; }', 'am__recheck_rx': '^[ \t]*:recheck:[ \t]*', 'am__global_test_result_rx': '^[ \t]*:global-test-result:[ \t]*', 'am__copy_in_global_log_rx': '^[ \t]*:copy-in-global-log:[ \t]*', 'am__list_recheck_tests': 'awk \'{ recheck = 1; while ((rc = (getline line < ($$0 ".trs"))) != 0) { if (rc < 0) { if ((getline line2 < ($$0 ".log")) < 0) recheck = 0; break; } else if (line ~ /$(am__recheck_rx)[nN][Oo]/) { recheck = 0; break; } else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) { break; } }; if (recheck) print $$0; close ($$0 ".trs"); close ($$0 ".log"); }\'', 'am__create_global_log': 'awk \' function fatal(msg) { print "fatal: making $@: " msg | "cat >&2"; exit 1; } function rst_section(header) { print header; len = length(header); for (i = 1; i <= len; i = i + 1) printf "="; printf "\\n\\n"; } { copy_in_global_log = 1; global_test_result = "RUN"; while ((rc = (getline line < ($$0 ".trs"))) != 0) { if (rc < 0) fatal("failed to read from " $$0 ".trs"); if (line ~ /$(am__global_test_result_rx)/) { sub("$(am__global_test_result_rx)", "", line); sub("[ \t]*$$", "", line); global_test_result = line; } else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) copy_in_global_log = 0; }; if (copy_in_global_log) { rst_section(global_test_result ": " $$0); while ((rc = (getline line < ($$0 ".log"))) != 0) { if (rc < 0) fatal("failed to read from " $$0 ".log"); print line; }; printf "\\n"; }; close ($$0 ".trs"); close ($$0 ".log"); }\'', 'am__rst_title': "{ sed 's/.*/ & /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }", 'am__sh_e_setup': 'case $$- in *e*) set +e;; esac', 'am__common_driver_flags': '\\\n --color-tests "$$am__color_tests" --enable-hard-errors "$$am__enable_hard_errors" --expect-failure "$$am__expect_failure"', 'am__check_pre': '\\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n || mkdir -p "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) am__expect_failure=yes;;\t\t\t\t\\\n *)\t\t\t\t\t\t\t\\\n am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)', 'am__set_TESTS_bases': "\\\n bases='$(TEST_LOGS)'; bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; bases=`echo $$bases`", 'AM_TESTSUITE_SUMMARY_HEADER': "' for $(PACKAGE_STRING)'", 'RECHECK_LOGS': '$(TEST_LOGS)', 'TEST_SUITE_LOG': 'test-suite.log', 'LOG_DRIVER': '$(SHELL) $(top_srcdir)/test-driver', 'LOG_COMPILE': '$(LOG_COMPILER) $(LOG_FLAGS)', 'am__set_b': "\\\n case '$@' in */*) case '$*' in */*) b='$*';; *) b=`echo '$@' | sed 's/\\.log$$//'`; esac;; *) b='$*';; esac", 'TEST_LOGS': '$(am__test_logs2:.test.log=.log)', 'TEST_LOG_DRIVER': '$(SHELL) $(top_srcdir)/test-driver', 'TEST_LOG_COMPILE': '$(TEST_LOG_COMPILER) $(TEST_LOG_FLAGS)', 'am__DIST_COMMON': '$(top_srcdir)/Makefile.decl $(top_srcdir)/depcomp $(top_srcdir)/test-driver', 'DISTFILES': '$(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)', 'CC': 'gcc', 'CFLAGS': '-g -O2 -Wall', 'CPPFLAGS': '-DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES', 'CYGPATH_W': 'echo', 'DEFS': '-DHAVE_CONFIG_H', 'EXEEXT': '', 'GDK_DEP_CFLAGS': '-I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1', 'GLIB_LIBS': '-lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0', 'GTK_DEBUG_FLAGS': '-DG_DISABLE_CAST_CHECKS', 'LDFLAGS': '', 'LIBS': '', 'LIBTOOL': 'libtool # $(SHELL) $(top_builddir)/libtool', 'OBJEXT': 'o', 'PACKAGE': 'gtk+', 'PACKAGE_BUGREPORT': 'http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B', 'PACKAGE_STRING': '$(PACKAGE) $(VERSION)', 'SHELL': '/bin/sh', 'VERSION': '2.24.33', 'gdktarget': 'x11', 'includedir': '${prefix}/include', 'prefix': '/usr', 'srcdir': '.', 'top_builddir': '../..', 'top_srcdir': '../..', 'GTESTER': 'gtester\t\t# in $PATH for non-GLIB packages', 'GTESTER_REPORT': 'gtester-report\t\t# in $PATH for non-GLIB packages', 'EXTRA_DIST': 'gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c gdksettings.c', 'TEST_PROGS': '', 'XVFB': 'Xvfb -ac -noreset -screen 0 800x600x16', 'XIDS': '101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 9995 9996 9997 9998 9999', 'SKIP_GDKTARGET': '\\\n\ttest "$(gdktarget)" != "x11" && echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."', 'XVFB_START': '\\\n\t${XVFB} -help 2>/dev/null 1>&2 && XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` && { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } || { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } && DISPLAY=:$$XID && export DISPLAY', 'libgdkincludedir': '$(includedir)/gtk-2.0/gdk', 'INCLUDES': '\\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)', 'noinst_LTLIBRARIES': 'libgdk-x11.la', 'libgdk_x11_la_SOURCES': 'MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h gdkinputprivate.h xsettings-client.h xsettings-client.c xsettings-common.h xsettings-common.c $(am__append_1) $(am__append_2)', 'libgdkinclude_HEADERS': '\\\n\tgdkx.h', 'checksettings_LDADD': 'libgdk-x11.la $(GLIB_LIBS)'}
DEBUG: After dealiasing pass pass:
'# Identification\n'
'PACKAGE = gtk+\n'
'VERSION = 2.24.33\n'
'PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B\n'
'# Compilation flags\n'
'CC = gcc\n'
'CFLAGS = -g -O2 -Wall\n'
'CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES \n'
'LDFLAGS = \n'
'LIBS = \n'
'# Platform\n'
'OBJEXT = o\n'
'EXEEXT = \n'
'# Cross-build\n'
'srcdir = .\n'
'# # Installation directories\n'
'prefix = /usr\n'
'includedir = ${prefix}/include\n'
'# Installation hooks\n'
'NORMAL_INSTALL = :\n'
'NORMAL_UNINSTALL = :\n'
'# Location\n'
'top_builddir = ../..\n'
'top_srcdir = ../..\n'
'subdir = gdk/x11\n'
'# Backwards compatibility\n'
'DEFS = -DHAVE_CONFIG_H\n'
'# Internals (not configuration variables)\n'
'SHELL = /bin/sh\n'
'DIST_COMMON = $(libgdkinclude_HEADERS) \\\n\t$(am__DIST_COMMON)\n'
'DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)\n'
'SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c\n'
'DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c\n'
'LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool\n'
'CYGPATH_W = echo\n'
'LIBS = \n'
'# Uncategorized\n'
'PACKAGE_STRING = $(PACKAGE) $(VERSION)\n'
'# conftrol variables end here\n'
'-include ../../config.mk\n'
'\n'
"am__is_gnu_make = { \\\n  if test -z '$(MAKELEVEL)'; then \\\n    false; \\\n  elif test -n '$(MAKE_HOST)'; then \\\n    true; \\\n  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \\\n    true; \\\n  else \\\n    false; \\\n  fi; \\\n}\n"
'am__make_running_with_option = \\\n  case $${target_option-} in \\\n      ?) ;; \\\n      *) echo "am__make_running_with_option: internal error: invalid" \\\n              "target option \'$${target_option-}\' specified" >&2; \\\n         exit 1;; \\\n  esac; \\\n  has_opt=no; \\\n  sane_makeflags=$$MAKEFLAGS; \\\n  if $(am__is_gnu_make); then \\\n    sane_makeflags=$$MFLAGS; \\\n  else \\\n    case $$MAKEFLAGS in \\\n      *\\\\[\\ \\\t]*) \\\n        bs=\\\\; \\\n        sane_makeflags=`printf \'%s\\n\' "$$MAKEFLAGS" \\\n          | sed "s/$$bs$$bs[$$bs $$bs\t]*//g"`;; \\\n    esac; \\\n  fi; \\\n  skip_next=no; \\\n  strip_trailopt () \\\n  { \\\n    flg=`printf \'%s\\n\' "$$flg" | sed "s/$$1.*$$//"`; \\\n  }; \\\n  for flg in $$sane_makeflags; do \\\n    test $$skip_next = yes && { skip_next=no; continue; }; \\\n    case $$flg in \\\n      *=*|--*) continue;; \\\n        -*I) strip_trailopt \'I\'; skip_next=yes;; \\\n      -*I?*) strip_trailopt \'I\';; \\\n        -*O) strip_trailopt \'O\'; skip_next=yes;; \\\n      -*O?*) strip_trailopt \'O\';; \\\n        -*l) strip_trailopt \'l\'; skip_next=yes;; \\\n      -*l?*) strip_trailopt \'l\';; \\\n      -[dEDm]) skip_next=yes;; \\\n      -[JT]) skip_next=yes;; \\\n    esac; \\\n    case $$flg in \\\n      *$$target_option*) has_opt=yes; break;; \\\n    esac; \\\n  done; \\\n  test $$has_opt = yes\n'
'am__make_dryrun = (target_option=n; $(am__make_running_with_option))\n'
'#am__append_1 = gdkinput-x11.c gdkinput-xfree.c\n'
'am__append_2 = gdkinput-none.c\n'
'noinst_PROGRAMS = checksettings$(EXEEXT)\n'
'CONFIG_CLEAN_VPATH_FILES =\n'
'PROGRAMS = $(noinst_PROGRAMS)\n'
'LTLIBRARIES = $(noinst_LTLIBRARIES)\n'
'libgdk_x11_la_LIBADD =\n'
'am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \\\n\tgdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \\\n\tgdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \\\n\tgdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \\\n\tgdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \\\n\tgdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \\\n\tgdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \\\n\tgdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \\\n\tgdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \\\n\tgdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \\\n\tgdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \\\n\tgdkinputprivate.h xsettings-client.h xsettings-client.c \\\n\txsettings-common.h xsettings-common.c gdkinput-x11.c \\\n\tgdkinput-xfree.c gdkinput-none.c\n'
'#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo\n'
'am__objects_2 = gdkinput-none.lo\n'
'am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \\\n\tgdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \\\n\tgdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \\\n\tgdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \\\n\tgdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \\\n\tgdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \\\n\tgdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \\\n\tgdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \\\n\tgdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \\\n\txsettings-client.lo xsettings-common.lo $(am__objects_1) \\\n\t$(am__objects_2)\n'
'libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)\n'
'checksettings_OBJECTS = checksettings.$(OBJEXT)\n'
'am__DEPENDENCIES_1 =\n'
'checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)\n'
'DEFAULT_INCLUDES = -I. -I$(top_builddir)\n'
'COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \\\n\t$(CPPFLAGS) $(CFLAGS)\n'
'LTCOMPILE = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \\\n\t$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \\\n\t $(CFLAGS)\n'
'LINK = $(LIBTOOL) --tag=CC \\\n\t$(LIBTOOLFLAGS) --mode=link $(CC) $(CFLAGS) \\\n\t $(LDFLAGS) -o $@\n'
'am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed \'s|.|.|g\'`;\n'
'am__vpath_adj = case $$p in \\\n    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \\\n    *) f=$$p;; \\\n  esac;\n'
"am__base_list = \\\n  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\\n/ /g' | \\\n  sed '$$!N;$$!N;$$!N;$$!N;s/\\n/ /g'\n"
'am__uninstall_files_from_dir = { \\\n  test -z "$$files" \\\n    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \\\n    || { echo " ( cd \'$$dir\' && rm -f" $$files ")"; \\\n         cd >/dev/null "$$dir" && rm -f $$files; }; \\\n  }\n'
'HEADERS = $(libgdkinclude_HEADERS)\n'
'am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)\n'
'# Read a list of newline-separated strings from the standard input,\n'
'# and print each of them once, without duplicates.  Input order is\n'
'# *not* preserved.\n'
"am__uniquify_input = awk '\\\n  BEGIN { nonempty = 0; } \\\n  { items[$$0] = 1; nonempty = 1; } \\\n  END { if (nonempty) { for (i in items) print i; }; } \\\n'\n"
'# Make sure the list of sources is unique.  This is necessary because,\n'
'# e.g., the same source file might be shared among _SOURCES variables\n'
'# for different programs/libraries.\n'
'am__define_uniq_tagged_files = \\\n  list=\'$(am__tagged_files)\'; \\\n  unique=`for i in $$list; do \\\n    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \\\n  done | $(am__uniquify_input)`\n'
'am__tty_colors_dummy = \\\n  mgn= red= grn= lgn= blu= brg= std=; \\\n  am__color_tests=no\n'
'am__tty_colors = { \\\n  $(am__tty_colors_dummy); \\\n  if test "X$(AM_COLOR_TESTS)" = Xno; then \\\n    am__color_tests=no; \\\n  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \\\n    am__color_tests=yes; \\\n  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \\\n    am__color_tests=yes; \\\n  fi; \\\n  if test $$am__color_tests = yes; then \\\n    red=\'\x1b[0;31m\'; \\\n    grn=\'\x1b[0;32m\'; \\\n    lgn=\'\x1b[1;32m\'; \\\n    blu=\'\x1b[1;34m\'; \\\n    mgn=\'\x1b[0;35m\'; \\\n    brg=\'\x1b[1m\'; \\\n    std=\'\x1b[m\'; \\\n  fi; \\\n}\n'
'am__recheck_rx = ^[ \t]*:recheck:[ \t]*\n'
'am__global_test_result_rx = ^[ \t]*:global-test-result:[ \t]*\n'
'am__copy_in_global_log_rx = ^[ \t]*:copy-in-global-log:[ \t]*\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, print the name of the tests that are to be re-run\n'
'# upon "make recheck".\n'
'am__list_recheck_tests = awk \'{ \\\n  recheck = 1; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n        { \\\n          if ((getline line2 < ($$0 ".log")) < 0) \\\n\t    recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \\\n        { \\\n          recheck = 0; \\\n          break; \\\n        } \\\n      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \\\n        { \\\n          break; \\\n        } \\\n    }; \\\n  if (recheck) \\\n    print $$0; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# A command that, given a newline-separated list of test names on the\n'
'# standard input, create the global log from their .trs and .log files.\n'
'am__create_global_log = awk \' \\\nfunction fatal(msg) \\\n{ \\\n  print "fatal: making $@: " msg | "cat >&2"; \\\n  exit 1; \\\n} \\\nfunction rst_section(header) \\\n{ \\\n  print header; \\\n  len = length(header); \\\n  for (i = 1; i <= len; i = i + 1) \\\n    printf "="; \\\n  printf "\\n\\n"; \\\n} \\\n{ \\\n  copy_in_global_log = 1; \\\n  global_test_result = "RUN"; \\\n  while ((rc = (getline line < ($$0 ".trs"))) != 0) \\\n    { \\\n      if (rc < 0) \\\n         fatal("failed to read from " $$0 ".trs"); \\\n      if (line ~ /$(am__global_test_result_rx)/) \\\n        { \\\n          sub("$(am__global_test_result_rx)", "", line); \\\n          sub("[ \t]*$$", "", line); \\\n          global_test_result = line; \\\n        } \\\n      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \\\n        copy_in_global_log = 0; \\\n    }; \\\n  if (copy_in_global_log) \\\n    { \\\n      rst_section(global_test_result ": " $$0); \\\n      while ((rc = (getline line < ($$0 ".log"))) != 0) \\\n      { \\\n        if (rc < 0) \\\n          fatal("failed to read from " $$0 ".log"); \\\n        print line; \\\n      }; \\\n      printf "\\n"; \\\n    }; \\\n  close ($$0 ".trs"); \\\n  close ($$0 ".log"); \\\n}\'\n'
'# Restructured Text title.\n'
"am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }\n"
"# Solaris 10 'make', and several other traditional 'make' implementations,\n"
'# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it\n'
'# by disabling -e (using the XSI extension "set +e") if it\'s set.\n'
'am__sh_e_setup = case $$- in *e*) set +e;; esac\n'
'# Default flags passed to test drivers.\n'
'am__common_driver_flags = \\\n  --color-tests "$$am__color_tests" \\\n  --enable-hard-errors "$$am__enable_hard_errors" \\\n  --expect-failure "$$am__expect_failure"\n'
'# To be inserted before the command running the test.  Creates the\n'
'# directory for the log if needed.  Stores in $dir the directory\n'
'# containing $f, in $tst the test, in $log the log.  Executes the\n'
'# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and\n'
'# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that\n'
'# will run the test scripts (or their associated LOG_COMPILER, if\n'
'# thy have one).\n'
'am__check_pre = \\\n$(am__sh_e_setup);\t\t\t\t\t\\\n$(am__vpath_adj_setup) $(am__vpath_adj)\t\t\t\\\n$(am__tty_colors);\t\t\t\t\t\\\nsrcdir=$(srcdir); export srcdir;\t\t\t\\\ncase "$@" in\t\t\t\t\t\t\\\n  */*) am__odir=`echo "./$@" | sed \'s|/[^/]*$$||\'`;;\t\\\n    *) am__odir=.;; \t\t\t\t\t\\\nesac;\t\t\t\t\t\t\t\\\ntest "x$$am__odir" = x"." || test -d "$$am__odir" \t\\\n  || mkdir -p "$$am__odir" || exit $$?;\t\t\\\nif test -f "./$$f"; then dir=./;\t\t\t\\\nelif test -f "$$f"; then dir=;\t\t\t\t\\\nelse dir="$(srcdir)/"; fi;\t\t\t\t\\\ntst=$$dir$$f; log=\'$@\'; \t\t\t\t\\\nif test -n \'$(DISABLE_HARD_ERRORS)\'; then\t\t\\\n  am__enable_hard_errors=no; \t\t\t\t\\\nelse\t\t\t\t\t\t\t\\\n  am__enable_hard_errors=yes; \t\t\t\t\\\nfi; \t\t\t\t\t\t\t\\\ncase " $(XFAIL_TESTS) " in\t\t\t\t\\\n  *[\\ \\\t]$$f[\\ \\\t]* | *[\\ \\\t]$$dir$$f[\\ \\\t]*) \\\n    am__expect_failure=yes;;\t\t\t\t\\\n  *)\t\t\t\t\t\t\t\\\n    am__expect_failure=no;;\t\t\t\t\\\nesac; \t\t\t\t\t\t\t\\\n$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)\n'
'# A shell command to get the names of the tests scripts with any registered\n'
'# extension removed (i.e., equivalently, the names of the test logs, with\n'
"# the '.log' extension removed).  The result is saved in the shell variable\n"
"# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,\n"
'# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",\n'
'# since that might cause problem with VPATH rewrites for suffix-less tests.\n'
"# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.\n"
"am__set_TESTS_bases = \\\n  bases='$(TEST_LOGS)'; \\\n  bases=`for i in $$bases; do echo $$i; done | sed 's/\\.log$$//'`; \\\n  bases=`echo $$bases`\n"
"AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'\n"
'RECHECK_LOGS = $(TEST_LOGS)\n'
'TEST_SUITE_LOG = test-suite.log\n'
'LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'LOG_COMPILE = $(LOG_COMPILER) $(LOG_FLAGS)\n'
"am__set_b = \\\n  case '$@' in \\\n    */*) \\\n      case '$*' in \\\n        */*) b='$*';; \\\n          *) b=`echo '$@' | sed 's/\\.log$$//'`; \\\n       esac;; \\\n    *) \\\n      b='$*';; \\\n  esac\n"
'TEST_LOGS = $(am__test_logs2:.test.log=.log)\n'
'TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver\n'
'TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) \\\n\t$(TEST_LOG_FLAGS)\n'
'am__DIST_COMMON = $(top_srcdir)/Makefile.decl \\\n\t$(top_srcdir)/depcomp $(top_srcdir)/test-driver\n'
'GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1 \n'
'GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0\n'
'GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS\n'
'gdktarget = x11\n'
'GTESTER = gtester\t\t# in $PATH for non-GLIB packages\n'
'GTESTER_REPORT = gtester-report\t\t# in $PATH for non-GLIB packages\n'
'\n'
'# initialize variables for unconditional += appending\n'
'\n'
'# We need to include all these C files here since the conditionals\n'
"# don't seem to be correctly expanded for the dist files.\n"
'EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \\\n\tgdksettings.c\n'
'TEST_PROGS = \n'
'\n'
'# Xvfb based test rules\n'
'XVFB = Xvfb -ac -noreset -screen 0 800x600x16\n'
'XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \\\n   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \\\n   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \\\n  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \\\n  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \\\n  9995 9996 9997 9998 9999\n'
'\n'
'SKIP_GDKTARGET = \\\n\ttest "$(gdktarget)" != "x11" \\\n\t&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."\n'
'\n'
'XVFB_START = \\\n\t${XVFB} -help 2>/dev/null 1>&2 \\\n\t&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \\\n\t&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \\\n\t       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \\\n\t|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \\\n\t&& DISPLAY=:$$XID && export DISPLAY\n'
'\n'
'libgdkincludedir = $(includedir)/gtk-2.0/gdk\n'
'INCLUDES = \\\n\t-DG_LOG_DOMAIN=\\"Gdk\\"\t\\\n\t-DGDK_COMPILATION\t\\\n\t-I$(top_srcdir)\t\t\\\n\t-I$(top_srcdir)/gdk\t\\\n\t-I$(top_builddir)/gdk\t\\\n\t$(GTK_DEBUG_FLAGS) \t\\\n\t$(GDK_DEP_CFLAGS)\n'
'\n'
'noinst_LTLIBRARIES = libgdk-x11.la\n'
'libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \\\n\tgdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \\\n\tgdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \\\n\tgdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \\\n\tgdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \\\n\tgdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \\\n\tgdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \\\n\tgdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \\\n\tgdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \\\n\tgdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \\\n\tgdkprivate-x11.h gdkinputprivate.h xsettings-client.h \\\n\txsettings-client.c xsettings-common.h xsettings-common.c \\\n\t$(am__append_1) $(am__append_2)\n'
'libgdkinclude_HEADERS = \\\n\tgdkx.h\n'
'\n'
'checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)\n'
'all: all-am\n'
'\n'
'.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs\n'
'$(top_srcdir)/Makefile.decl $(am__empty):\n'
'\n'
'\n'
'\n'
'clean-noinstPROGRAMS:\n'
'\t@list=\'$(noinst_PROGRAMS)\'; test -n "$$list" || exit 0; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list || exit $$?; \\\n'
'\ttest -n "$(EXEEXT)" || exit 0; \\\n'
'\tlist=`for p in $$list; do echo "$$p"; done | sed \'s/$(EXEEXT)$$//\'`; \\\n'
'\techo " rm -f" $$list; \\\n'
'\trm -f $$list\n'
'\n'
'clean-noinstLTLIBRARIES:\n'
'\t-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)\n'
"\t@list='$(noinst_LTLIBRARIES)'; \\\n"
'\tlocs=`for p in $$list; do echo $$p; done | \\\n'
"\t      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \\\n"
'\t      sort -u`; \\\n'
'\ttest -z "$$locs" || { \\\n'
'\t  echo rm -f $${locs}; \\\n'
'\t  rm -f $${locs}; \\\n'
'\t}\n'
'\n'
'libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES) \n'
'\t$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)\n'
'\n'
'checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES) \n'
'\t@rm -f checksettings$(EXEEXT)\n'
'\t$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)\n'
'\n'
'mostlyclean-compile:\n'
'\t-rm -f *.$(OBJEXT)\n'
'\n'
'distclean-compile:\n'
'\t-rm -f *.tab.c\n'
'\n'
'\n'
'\n'
'\n'
'.c.$(OBJEXT):\n'
'#\t$(COMPILE) -c -o $@ $<\n'
'\n'
'.c.obj:\n'
"#\tsource='$<' object='$@' libtool=no \n"
"\t$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`\n"
'\n'
'.c.lo:\n'
"#\tsource='$<' object='$@' libtool=yes \n"
'\t$(LTCOMPILE) -c -o $@ $<\n'
'\n'
'mostlyclean-libtool:\n'
'\t-rm -f *.lo\n'
'\n'
'clean-libtool:\n'
'\t-rm -rf .libs _libs\n'
'install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)\n'
'\t@$(NORMAL_INSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
'\tif test -n "$$list"; then \\\n'
'\t  echo " mkdir -p \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  mkdir -p "$(DESTDIR)$(libgdkincludedir)" || exit 1; \\\n'
'\tfi; \\\n'
'\tfor p in $$list; do \\\n'
'\t  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \\\n'
'\t  echo "$$d$$p"; \\\n'
'\tdone | $(am__base_list) | \\\n'
'\twhile read files; do \\\n'
'\t  echo " install -c -m 644 $$files \'$(DESTDIR)$(libgdkincludedir)\'"; \\\n'
'\t  install -c -m 644 $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \\\n'
'\tdone\n'
'\n'
'uninstall-libgdkincludeHEADERS:\n'
'\t@$(NORMAL_UNINSTALL)\n'
'\t@list=\'$(libgdkinclude_HEADERS)\'; test -n "$(libgdkincludedir)" || list=; \\\n'
"\tfiles=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \\\n"
"\tdir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)\n"
'\n'
'tags: tags-am\n'
'TAGS: tags\n'
'\n'
'tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\tset x; \\\n'
'\there=`pwd`; \\\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\tshift; \\\n'
'\tif test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \\\n'
'\t  test -n "$$unique" || unique=$$empty_fix; \\\n'
'\t  if test $$# -gt 0; then \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      "$$@" $$unique; \\\n'
'\t  else \\\n'
'\t    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \\\n'
'\t      $$unique; \\\n'
'\t  fi; \\\n'
'\tfi\n'
'ctags: ctags-am\n'
'\n'
'CTAGS: ctags\n'
'ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)\n'
'\t$(am__define_uniq_tagged_files); \\\n'
'\ttest -z "$(CTAGS_ARGS)$$unique" \\\n'
'\t  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \\\n'
'\t     $$unique\n'
'\n'
'GTAGS:\n'
'\there=`cd >/dev/null $(top_builddir) && pwd` \\\n'
'\t  && cd >/dev/null $(top_srcdir) \\\n'
'\t  && gtags -i $(GTAGS_ARGS) "$$here"\n'
'cscopelist: cscopelist-am\n'
'\n'
'cscopelist-am: $(am__tagged_files)\n'
"\tlist='$(am__tagged_files)'; \\\n"
'\tcase "$(srcdir)" in \\\n'
'\t  [\\\\/]* | ?:[\\\\/]*) sdir="$(srcdir)" ;; \\\n'
'\t  *) sdir=$(subdir)/$(srcdir) ;; \\\n'
'\tesac; \\\n'
'\tfor i in $$list; do \\\n'
'\t  if test -f "$$i"; then \\\n'
'\t    echo "$(subdir)/$$i"; \\\n'
'\t  else \\\n'
'\t    echo "$$sdir/$$i"; \\\n'
'\t  fi; \\\n'
'\tdone >> $(top_builddir)/cscope.files\n'
'\n'
'distclean-tags:\n'
'\t-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags\n'
'\n'
"# Recover from deleted '.trs' file; this should ensure that\n"
'# "rm -f foo.log; make foo.trs" re-run \'foo.test\', and re-create\n'
"# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells\n"
'# to avoid problems with "make -n".\n'
'.log.trs:\n'
'\trm -f $< $@\n'
'\t$(MAKE) $<\n'
'\n'
"# Leading 'am--fnord' is there to ensure the list of targets does not\n"
"# expand to empty, as could happen e.g. with make check TESTS=''.\n"
'am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)\n'
'am--force-recheck:\n'
'\t@:\n'
'\n'
'$(TEST_SUITE_LOG): $(TEST_LOGS)\n'
'\t@$(am__set_TESTS_bases); \\\n'
'\tam__f_ok () { test -f "$$1" && test -r "$$1"; }; \\\n'
'\tredo_bases=`for i in $$bases; do \\\n'
'\t              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \\\n'
'\t            done`; \\\n'
'\tif test -n "$$redo_bases"; then \\\n'
'\t  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \\\n'
'\t  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \\\n'
'\t  if $(am__make_dryrun); then :; else \\\n'
'\t    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \\\n'
'\t  fi; \\\n'
'\tfi; \\\n'
'\tif test -n "$$am__remaking_logs"; then \\\n'
'\t  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \\\n'
'\t       "recursion detected" >&2; \\\n'
'\telif test -n "$$redo_logs"; then \\\n'
'\t  am__remaking_logs=yes $(MAKE) $$redo_logs; \\\n'
'\tfi; \\\n'
'\tif $(am__make_dryrun); then :; else \\\n'
'\t  st=0;  \\\n'
'\t  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \\\n'
'\t  for i in $$redo_bases; do \\\n'
'\t    test -f $$i.trs && test -r $$i.trs \\\n'
'\t      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \\\n'
'\t    test -f $$i.log && test -r $$i.log \\\n'
'\t      || { echo "$$errmsg $$i.log" >&2; st=1; }; \\\n'
'\t  done; \\\n'
'\t  test $$st -eq 0 || exit 1; \\\n'
'\tfi\n'
'\t@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \\\n'
"\tws='[ \t]'; \\\n"
'\tresults=`for b in $$bases; do echo $$b.trs; done`; \\\n'
'\ttest -n "$$results" || results=/dev/null; \\\n'
'\tall=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \\\n'
'\tpass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \\\n'
'\tfail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \\\n'
'\tskip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \\\n'
'\txfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \\\n'
'\txpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \\\n'
'\terror=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \\\n'
'\tif test `expr $$fail + $$xpass + $$error` -eq 0; then \\\n'
'\t  success=true; \\\n'
'\telse \\\n'
'\t  success=false; \\\n'
'\tfi; \\\n'
"\tbr='==================='; br=$$br$$br$$br$$br; \\\n"
'\tresult_count () \\\n'
'\t{ \\\n'
'\t    if test x"$$1" = x"--maybe-color"; then \\\n'
'\t      maybe_colorize=yes; \\\n'
'\t    elif test x"$$1" = x"--no-color"; then \\\n'
'\t      maybe_colorize=no; \\\n'
'\t    else \\\n'
'\t      echo "$@: invalid \'result_count\' usage" >&2; exit 4; \\\n'
'\t    fi; \\\n'
'\t    shift; \\\n'
'\t    desc=$$1 count=$$2; \\\n'
'\t    if test $$maybe_colorize = yes && test $$count -gt 0; then \\\n'
'\t      color_start=$$3 color_end=$$std; \\\n'
'\t    else \\\n'
'\t      color_start= color_end=; \\\n'
'\t    fi; \\\n'
'\t    echo "$${color_start}# $$desc $$count$${color_end}"; \\\n'
'\t}; \\\n'
'\tcreate_testsuite_report () \\\n'
'\t{ \\\n'
'\t  result_count $$1 "TOTAL:" $$all   "$$brg"; \\\n'
'\t  result_count $$1 "PASS: " $$pass  "$$grn"; \\\n'
'\t  result_count $$1 "SKIP: " $$skip  "$$blu"; \\\n'
'\t  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \\\n'
'\t  result_count $$1 "FAIL: " $$fail  "$$red"; \\\n'
'\t  result_count $$1 "XPASS:" $$xpass "$$red"; \\\n'
'\t  result_count $$1 "ERROR:" $$error "$$mgn"; \\\n'
'\t}; \\\n'
'\t{\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |\t\\\n'
'\t    $(am__rst_title);\t\t\t\t\t\t\\\n'
'\t  create_testsuite_report --no-color;\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  echo ".. contents:: :depth: 2";\t\t\t\t\\\n'
'\t  echo;\t\t\t\t\t\t\t\t\\\n'
'\t  for b in $$bases; do echo $$b; done\t\t\t\t\\\n'
'\t    | $(am__create_global_log);\t\t\t\t\t\\\n'
'\t} >$(TEST_SUITE_LOG).tmp || exit 1;\t\t\t\t\\\n'
'\tmv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);\t\t\t\\\n'
'\tif $$success; then\t\t\t\t\t\t\\\n'
'\t  col="$$grn";\t\t\t\t\t\t\t\\\n'
'\t else\t\t\t\t\t\t\t\t\\\n'
'\t  col="$$red";\t\t\t\t\t\t\t\\\n'
'\t  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\techo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";\t\\\n'
'\techo "$${col}$$br$${std}"; \t\t\t\t\t\\\n'
'\tcreate_testsuite_report --maybe-color;\t\t\t\t\\\n'
'\techo "$$col$$br$$std";\t\t\t\t\t\t\\\n'
'\tif $$success; then :; else\t\t\t\t\t\\\n'
'\t  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";\t\t\\\n'
'\t  if test -n "$(PACKAGE_BUGREPORT)"; then\t\t\t\\\n'
'\t    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";\t\\\n'
'\t  fi;\t\t\t\t\t\t\t\t\\\n'
'\t  echo "$$col$$br$$std";\t\t\t\t\t\\\n'
'\tfi;\t\t\t\t\t\t\t\t\\\n'
'\t$$success || exit 1\n'
'\n'
'check-TESTS: \n'
'\t@list=\'$(RECHECK_LOGS)\';           test -z "$$list" || rm -f $$list\n'
'\t@list=\'$(RECHECK_LOGS:.log=.trs)\'; test -z "$$list" || rm -f $$list\n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\ttrs_list=`for i in $$bases; do echo $$i.trs; done`; \\\n'
'\tlog_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \\\n'
'\t$(MAKE) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \\\n'
'\texit $$?;\n'
'recheck: all \n'
'\t@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\t@set +e; $(am__set_TESTS_bases); \\\n'
'\tbases=`for i in $$bases; do echo $$i; done \\\n'
'\t         | $(am__list_recheck_tests)` || exit 1; \\\n'
'\tlog_list=`for i in $$bases; do echo $$i.log; done`; \\\n'
'\tlog_list=`echo $$log_list`; \\\n'
'\t$(MAKE) $(TEST_SUITE_LOG) \\\n'
'\t        am__force_recheck=am--force-recheck \\\n'
'\t        TEST_LOGS="$$log_list"; \\\n'
'\texit $$?\n'
'checksettings.log: checksettings$(EXEEXT)\n'
"\t@p='checksettings$(EXEEXT)'; \\\n"
"\tb='checksettings'; \\\n"
'\t$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \\\n'
'\t"$$tst"\n'
'.test.log:\n'
"\t@p='$<'; \\\n"
'\t$(am__set_b); \\\n'
'\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'\t--log-file $$b.log --trs-file $$b.trs \\\n'
'\t$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'\t"$$tst"\n'
'#.test$(EXEEXT).log:\n'
"#\t@p='$<'; \\\n"
'#\t$(am__set_b); \\\n'
'#\t$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \\\n'
'#\t--log-file $$b.log --trs-file $$b.trs \\\n'
'#\t$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \\\n'
'#\t"$$tst"\n'
'distdir: $(BUILT_SOURCES)\n'
'\t$(MAKE) distdir-am\n'
'\n'
'distdir-am: $(DISTFILES)\n'
'\t@srcdirstrip=`echo "$(srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
'\ttopsrcdirstrip=`echo "$(top_srcdir)" | sed \'s/[].[^$$\\\\*]/\\\\\\\\&/g\'`; \\\n'
"\tlist='$(DISTFILES)'; \\\n"
'\t  dist_files=`for file in $$list; do echo $$file; done | \\\n'
'\t  sed -e "s|^$$srcdirstrip/||;t" \\\n'
'\t      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \\\n'
'\tcase $$dist_files in \\\n'
'\t  */*) mkdir -p `echo "$$dist_files" | \\\n'
"\t\t\t   sed '/\\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \\\n"
'\t\t\t   sort -u` ;; \\\n'
'\tesac; \\\n'
'\tfor file in $$dist_files; do \\\n'
'\t  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \\\n'
'\t  if test -d $$d/$$file; then \\\n'
'\t    dir=`echo "/$$file" | sed -e \'s,/[^/]*$$,,\'`; \\\n'
'\t    if test -d "$(distdir)/$$file"; then \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \\\n'
'\t      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \\;; \\\n'
'\t    fi; \\\n'
'\t    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \\\n'
'\t  else \\\n'
'\t    test -f "$(distdir)/$$file" \\\n'
'\t    || cp -p $$d/$$file "$(distdir)/$$file" \\\n'
'\t    || exit 1; \\\n'
'\t  fi; \\\n'
'\tdone\n'
'check-am: all-am\n'
'\t$(MAKE) check-TESTS check-local\n'
'check: check-am\n'
'all-am: $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)\n'
'installdirs:\n'
'\tfor dir in "$(DESTDIR)$(libgdkincludedir)"; do \\\n'
'\t  test -z "$$dir" || mkdir -p "$$dir"; \\\n'
'\tdone\n'
'install: install-am\n'
'install-exec: install-exec-am\n'
'install-data: install-data-am\n'
'uninstall: uninstall-am\n'
'\n'
'install-am: all-am\n'
'\t@$(MAKE) install-exec-am install-data-am\n'
'\n'
'installcheck: installcheck-am\n'
'install-strip:\n'
"\tif test -z 'strip'; then \\\n"
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t      install; \\\n'
'\telse \\\n'
'\t  $(MAKE) INSTALL_PROGRAM="install -c -s" \\\n'
'\t    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \\\n'
'\t    "INSTALL_PROGRAM_ENV=STRIPPROG=\'strip\'" install; \\\n'
'\tfi\n'
'mostlyclean-generic:\n'
'\t-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)\n'
'\t-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)\n'
'\t-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)\n'
'\n'
'clean-generic:\n'
'\n'
'distclean-generic:\n'
'\t-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)\n'
'\t-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)\n'
'\n'
'clean: clean-am\n'
'\n'
'clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \\\n\tclean-noinstPROGRAMS mostlyclean-am\n'
'\n'
'distclean: distclean-am\n'
'distclean-am: clean-am distclean-compile distclean-generic \\\n\tdistclean-tags\n'
'\n'
'\n'
'\n'
'html: html-am\n'
'\n'
'html-am:\n'
'\n'
'\n'
'\n'
'install-data-am: install-libgdkincludeHEADERS\n'
'\n'
'\n'
'\n'
'install-exec-am:\n'
'\n'
'install-html: install-html-am\n'
'\n'
'install-html-am:\n'
'\n'
'\n'
'\n'
'install-man:\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'installcheck-am:\n'
'\n'
'\n'
'mostlyclean: mostlyclean-am\n'
'\n'
'mostlyclean-am: mostlyclean-compile mostlyclean-generic \\\n\tmostlyclean-libtool\n'
'\n'
'\n'
'\n'
'\n'
'\n'
'uninstall-am: uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS \\\n\tcheck-am check-local clean clean-generic clean-libtool \\\n\tclean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \\\n\tctags ctags-am distclean distclean-compile distclean-generic \\\n\tdistclean-libtool distclean-tags distdir html \\\n\thtml-am install install-am install-data \\\n\tinstall-data-am install-exec \\\n\tinstall-exec-am install-html install-html-am \\\n\tinstall-libgdkincludeHEADERS install-man \\\n\t\\\n\tinstall-strip installcheck installcheck-am installdirs \\\n\tmostlyclean \\\n\tmostlyclean-compile mostlyclean-generic mostlyclean-libtool \\\n\trecheck tags tags-am uninstall \\\n\tuninstall-am uninstall-libgdkincludeHEADERS\n'
'\n'
'\n'
'# call as: $(XVFB_START) && someprogram\n'
'\n'
'# test: run all tests in cwd and subdirs\n'
'test: test-cwd test-recurse\n'
'# test-cwd: run tests in cwd\n'
'test-cwd: ${TEST_PROGS}\n'
'\t@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \\\n'
'\t}\n'
'# test-report: run tests in subdirs and generate report\n'
'# perf-report: run tests in subdirs with -m perf and generate report\n'
'# full-report: like test-report: with -m perf and -m slow\n'
'test-report perf-report full-report:\t${TEST_PROGS}\n'
'\t@ ignore_logdir=true ; \\\n'
'\t  if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t    GTESTER_LOGDIR=`mktemp -d "\\`pwd\\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \\\n'
'\t    ignore_logdir=false ; \\\n'
'\t  fi ; \\\n'
'\t  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \\\n'
'\t    case $@ in \\\n'
'\t    test-report) test_options="-k";; \\\n'
'\t    perf-report) test_options="-k -m=perf";; \\\n'
'\t    full-report) test_options="-k -m=perf -m=slow";; \\\n'
'\t    esac ; \\\n'
'\t    $(XVFB_START) && { \\\n'
'\t      set -e; \\\n'
'\t      if test -z "$$GTESTER_LOGDIR" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \\\n'
'\t      elif test -n "${TEST_PROGS}" ; then \\\n'
'\t        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \\\n'
'\t      fi ; \\\n'
'\t    }; \\\n'
'\t  }; \\\n'
'\t  $$ignore_logdir || { \\\n'
'\t    echo \'<?xml version="1.0"?>\' > $@.xml ; \\\n'
"\t    echo '<report-collection>'  >> $@.xml ; \\\n"
'\t    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \\\n'
'\t      sed \'1,1s/^<?xml\\b[^>?]*?>//\' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \\\n'
'\t    done ; \\\n'
'\t    echo >> $@.xml ; \\\n'
"\t    echo '</report-collection>' >> $@.xml ; \\\n"
'\t    rm -rf "$$GTESTER_LOGDIR"/ ; \\\n'
'\t    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \\\n'
'\t  }\n'
'.PHONY: test test-cwd test-recurse test-report perf-report full-report\n'
'# run make test-cwd as part of make check\n'
'check-local: test-cwd\n'
'\n'
'-include $(top_srcdir)/git.mk\n'
'\n'
DEBUG: subdir=True, skipped stub removal,
DEBUG: Output follows:
# Identification
PACKAGE = gtk+
VERSION = 2.24.33
PACKAGE_BUGREPORT = http://bugzilla.gnome.org/enter_bug.cgi?product=gtk%2B
# Compilation flags
CC = gcc
CFLAGS = -g -O2 -Wall
CPPFLAGS =  -DG_DISABLE_SINGLE_INCLUDES -DGDK_PIXBUF_DISABLE_SINGLE_INCLUDES -DGTK_DISABLE_SINGLE_INCLUDES
LDFLAGS =
LIBS =
# Platform
OBJEXT = o
EXEEXT =
# Cross-build
srcdir = .
# # Installation directories
prefix = /usr
includedir = ${prefix}/include
# Installation hooks
NORMAL_INSTALL = :
NORMAL_UNINSTALL = :
# Location
top_builddir = ../..
top_srcdir = ../..
subdir = gdk/x11
# Backwards compatibility
DEFS = -DHAVE_CONFIG_H
# Internals (not configuration variables)
SHELL = /bin/sh
DIST_COMMON = $(libgdkinclude_HEADERS) \
	$(am__DIST_COMMON)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(EXTRA_DIST)
SOURCES = $(libgdk_x11_la_SOURCES) checksettings.c
DIST_SOURCES = $(am__libgdk_x11_la_SOURCES_DIST) checksettings.c
LIBTOOL = libtool # $(SHELL) $(top_builddir)/libtool
CYGPATH_W = echo
LIBS =
# Uncategorized
PACKAGE_STRING = $(PACKAGE) $(VERSION)
# conftrol variables end here
-include ../../config.mk

am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
#am__append_1 = gdkinput-x11.c gdkinput-xfree.c
am__append_2 = gdkinput-none.c
noinst_PROGRAMS = checksettings$(EXEEXT)
CONFIG_CLEAN_VPATH_FILES =
PROGRAMS = $(noinst_PROGRAMS)
LTLIBRARIES = $(noinst_LTLIBRARIES)
libgdk_x11_la_LIBADD =
am__libgdk_x11_la_SOURCES_DIST = MwmUtil.h gdkapplaunchcontext-x11.c \
	gdkasync.c gdkasync.h gdkcolor-x11.c gdkcursor-x11.c \
	gdkdisplay-x11.c gdkdisplay-x11.h gdkdnd-x11.c \
	gdkdrawable-x11.c gdkdrawable-x11.h gdkevents-x11.c \
	gdkfont-x11.c gdkgc-x11.c gdkgeometry-x11.c gdkglobals-x11.c \
	gdkim-x11.c gdkimage-x11.c gdkinput.c gdkkeys-x11.c \
	gdkmain-x11.c gdkpixmap-x11.c gdkpixmap-x11.h \
	gdkproperty-x11.c gdkscreen-x11.c gdkscreen-x11.h \
	gdkselection-x11.c gdkspawn-x11.c gdktestutils-x11.c \
	gdkvisual-x11.c gdkwindow-x11.c gdkwindow-x11.h \
	gdkxftdefaults.c gdkxid.c gdkx.h gdkprivate-x11.h \
	gdkinputprivate.h xsettings-client.h xsettings-client.c \
	xsettings-common.h xsettings-common.c gdkinput-x11.c \
	gdkinput-xfree.c gdkinput-none.c
#am__objects_1 = gdkinput-x11.lo gdkinput-xfree.lo
am__objects_2 = gdkinput-none.lo
am_libgdk_x11_la_OBJECTS = gdkapplaunchcontext-x11.lo gdkasync.lo \
	gdkcolor-x11.lo gdkcursor-x11.lo gdkdisplay-x11.lo \
	gdkdnd-x11.lo gdkdrawable-x11.lo gdkevents-x11.lo \
	gdkfont-x11.lo gdkgc-x11.lo gdkgeometry-x11.lo \
	gdkglobals-x11.lo gdkim-x11.lo gdkimage-x11.lo gdkinput.lo \
	gdkkeys-x11.lo gdkmain-x11.lo gdkpixmap-x11.lo \
	gdkproperty-x11.lo gdkscreen-x11.lo gdkselection-x11.lo \
	gdkspawn-x11.lo gdktestutils-x11.lo gdkvisual-x11.lo \
	gdkwindow-x11.lo gdkxftdefaults.lo gdkxid.lo \
	xsettings-client.lo xsettings-common.lo $(am__objects_1) \
	$(am__objects_2)
libgdk_x11_la_OBJECTS = $(am_libgdk_x11_la_OBJECTS)
checksettings_OBJECTS = checksettings.$(OBJEXT)
am__DEPENDENCIES_1 =
checksettings_DEPENDENCIES = libgdk-x11.la $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(CPPFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(CPPFLAGS) \
	 $(CFLAGS)
LINK = $(LIBTOOL) --tag=CC \
	$(LIBTOOLFLAGS) --mode=link $(CC) $(CFLAGS) \
	 $(LDFLAGS) -o $@
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         cd >/dev/null "$$dir" && rm -f $$files; }; \
  }
HEADERS = $(libgdkinclude_HEADERS)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = awk '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = awk '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = awk ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || mkdir -p "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
AM_TESTSUITE_SUMMARY_HEADER = ' for $(PACKAGE_STRING)'
RECHECK_LOGS = $(TEST_LOGS)
TEST_SUITE_LOG = test-suite.log
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) \
	$(TEST_LOG_FLAGS)
am__DIST_COMMON = $(top_srcdir)/Makefile.decl \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
GDK_DEP_CFLAGS = -I/usr/include/pango-1.0 -I/usr/include/fribidi -I/usr/include/harfbuzz -I/usr/include/gio-unix-2.0 -I/usr/include/gdk-pixbuf-2.0 -I/usr/lib64/libffi/include -pthread -I/usr/include/glib-2.0 -I/usr/lib64/glib-2.0/include -I/usr/include/cairo -I/usr/include/libpng16 -I/usr/include/freetype2 -I/usr/include/pixman-1
GLIB_LIBS = -lgobject-2.0 -lgmodule-2.0 -lgthread-2.0 -pthread -lglib-2.0
GTK_DEBUG_FLAGS = -DG_DISABLE_CAST_CHECKS
gdktarget = x11
GTESTER = gtester		# in $PATH for non-GLIB packages
GTESTER_REPORT = gtester-report		# in $PATH for non-GLIB packages

# initialize variables for unconditional += appending

# We need to include all these C files here since the conditionals
# don't seem to be correctly expanded for the dist files.
EXTRA_DIST = gdkinput-x11.c gdkinput-xfree.c gdkinput-none.c \
	gdksettings.c
TEST_PROGS =

# Xvfb based test rules
XVFB = Xvfb -ac -noreset -screen 0 800x600x16
XIDS = 101 102 103 104 105 106 107 197 199 211 223 227 293 307 308 309 310 311 \
   491 492 493 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 \
   991 992 993 994 995 996 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 \
  1008 1009 4703 4721 4723 4729 4733 4751 9973 9974 9975 9976 9977 9978 9979 \
  9980 9981 9982 9983 9984 9985 9986 9987 9988 9989 9990 9991 9992 9993 9994 \
  9995 9996 9997 9998 9999

SKIP_GDKTARGET = \
	test "$(gdktarget)" != "x11" \
	&& echo "Gtk+Tests:INFO: Skipping GUI tests for non-X11 target."

XVFB_START = \
	${XVFB} -help 2>/dev/null 1>&2 \
	&& XID=`for id in $(XIDS) ; do test -e /tmp/.X$$id-lock || { echo $$id; exit 0; }; done; exit 1` \
	&& { ${XVFB} :$$XID -screen 0 800x600x16 -nolisten tcp -auth /dev/null >/dev/null 2>&1 & \
	       trap "kill -15 $$! " 0 HUP INT QUIT TRAP USR1 PIPE TERM ; } \
	|| { echo "Gtk+Tests:ERROR: Failed to start Xvfb environment for X11 target tests."; exit 1; } \
	&& DISPLAY=:$$XID && export DISPLAY

libgdkincludedir = $(includedir)/gtk-2.0/gdk
INCLUDES = \
	-DG_LOG_DOMAIN=\"Gdk\"	\
	-DGDK_COMPILATION	\
	-I$(top_srcdir)		\
	-I$(top_srcdir)/gdk	\
	-I$(top_builddir)/gdk	\
	$(GTK_DEBUG_FLAGS) 	\
	$(GDK_DEP_CFLAGS)

noinst_LTLIBRARIES = libgdk-x11.la
libgdk_x11_la_SOURCES = MwmUtil.h gdkapplaunchcontext-x11.c gdkasync.c \
	gdkasync.h gdkcolor-x11.c gdkcursor-x11.c gdkdisplay-x11.c \
	gdkdisplay-x11.h gdkdnd-x11.c gdkdrawable-x11.c \
	gdkdrawable-x11.h gdkevents-x11.c gdkfont-x11.c gdkgc-x11.c \
	gdkgeometry-x11.c gdkglobals-x11.c gdkim-x11.c gdkimage-x11.c \
	gdkinput.c gdkkeys-x11.c gdkmain-x11.c gdkpixmap-x11.c \
	gdkpixmap-x11.h gdkproperty-x11.c gdkscreen-x11.c \
	gdkscreen-x11.h gdkselection-x11.c gdkspawn-x11.c \
	gdktestutils-x11.c gdkvisual-x11.c gdkwindow-x11.c \
	gdkwindow-x11.h gdkxftdefaults.c gdkxid.c gdkx.h \
	gdkprivate-x11.h gdkinputprivate.h xsettings-client.h \
	xsettings-client.c xsettings-common.h xsettings-common.c \
	$(am__append_1) $(am__append_2)
libgdkinclude_HEADERS = \
	gdkx.h

checksettings_LDADD = libgdk-x11.la $(GLIB_LIBS)
all: all-am

.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(top_srcdir)/Makefile.decl $(am__empty):

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libgdk-x11.la: $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_DEPENDENCIES) $(EXTRA_libgdk_x11_la_DEPENDENCIES)
	$(LINK)  $(libgdk_x11_la_OBJECTS) $(libgdk_x11_la_LIBADD) $(LIBS)

checksettings$(EXEEXT): $(checksettings_OBJECTS) $(checksettings_DEPENDENCIES) $(EXTRA_checksettings_DEPENDENCIES)
	@rm -f checksettings$(EXEEXT)
	$(LINK) $(checksettings_OBJECTS) $(checksettings_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.c.$(OBJEXT):
#	$(COMPILE) -c -o $@ $<

.c.obj:
#	source='$<' object='$@' libtool=no
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	source='$<' object='$@' libtool=yes
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
install-libgdkincludeHEADERS: $(libgdkinclude_HEADERS)
	@$(NORMAL_INSTALL)
	@list='$(libgdkinclude_HEADERS)'; test -n "$(libgdkincludedir)" || list=; \
	if test -n "$$list"; then \
	  echo " mkdir -p '$(DESTDIR)$(libgdkincludedir)'"; \
	  mkdir -p "$(DESTDIR)$(libgdkincludedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " install -c -m 644 $$files '$(DESTDIR)$(libgdkincludedir)'"; \
	  install -c -m 644 $$files "$(DESTDIR)$(libgdkincludedir)" || exit $$?; \
	done

uninstall-libgdkincludeHEADERS:
	@$(NORMAL_UNINSTALL)
	@list='$(libgdkinclude_HEADERS)'; test -n "$(libgdkincludedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(libgdkincludedir)'; $(am__uninstall_files_from_dir)

tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    etags $(ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || ctags $(CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`cd >/dev/null $(top_builddir) && pwd` \
	  && cd >/dev/null $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary"$(AM_TESTSUITE_SUMMARY_HEADER)"$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
checksettings.log: checksettings$(EXEEXT)
	@p='checksettings$(EXEEXT)'; \
	b='checksettings'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst"
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst"
#.test$(EXEEXT).log:
#	@p='$<'; \
#	$(am__set_b); \
#	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
#	--log-file $$b.log --trs-file $$b.trs \
#	$(am__common_driver_flags) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
#	"$$tst"
distdir: $(BUILT_SOURCES)
	$(MAKE) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) mkdir -p `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) check-TESTS check-local
check: check-am
all-am: $(PROGRAMS) $(LTLIBRARIES) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(libgdkincludedir)"; do \
	  test -z "$$dir" || mkdir -p "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z 'strip'; then \
	  $(MAKE) INSTALL_PROGRAM="install -c -s" \
	    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) INSTALL_PROGRAM="install -c -s" \
	    install_sh_PROGRAM="install -c -s" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='strip'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

html: html-am

html-am:

install-data-am: install-libgdkincludeHEADERS

install-exec-am:

install-html: install-html-am

install-html-am:

install-man:

installcheck-am:

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-libgdkincludeHEADERS

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS \
	check-am check-local clean clean-generic clean-libtool \
	clean-noinstLTLIBRARIES clean-noinstPROGRAMS cscopelist-am \
	ctags ctags-am distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir html \
	html-am install install-am install-data \
	install-data-am install-exec \
	install-exec-am install-html install-html-am \
	install-libgdkincludeHEADERS install-man \
	install-strip installcheck installcheck-am installdirs \
	mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	recheck tags tags-am uninstall \
	uninstall-am uninstall-libgdkincludeHEADERS

# call as: $(XVFB_START) && someprogram

# test: run all tests in cwd and subdirs
test: test-cwd test-recurse
# test-cwd: run tests in cwd
test-cwd: ${TEST_PROGS}
	@$(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	  $(XVFB_START) && { set -e; $(TESTS_ENVIRONMENT) ${GTESTER} --verbose ${TEST_PROGS}; }; \
	}
# test-report: run tests in subdirs and generate report
# perf-report: run tests in subdirs with -m perf and generate report
# full-report: like test-report: with -m perf and -m slow
test-report perf-report full-report:	${TEST_PROGS}
	@ ignore_logdir=true ; \
	  if test -z "$$GTESTER_LOGDIR" ; then \
	    GTESTER_LOGDIR=`mktemp -d "\`pwd\`/.testlogs-XXXXXX"`; export GTESTER_LOGDIR ; \
	    ignore_logdir=false ; \
	  fi ; \
	  $(SKIP_GDKTARGET) || test -z "${TEST_PROGS}" || { \
	    case $@ in \
	    test-report) test_options="-k";; \
	    perf-report) test_options="-k -m=perf";; \
	    full-report) test_options="-k -m=perf -m=slow";; \
	    esac ; \
	    $(XVFB_START) && { \
	      set -e; \
	      if test -z "$$GTESTER_LOGDIR" ; then \
	        ${GTESTER} --verbose $$test_options -o test-report.xml ${TEST_PROGS} ; \
	      elif test -n "${TEST_PROGS}" ; then \
	        ${GTESTER} --verbose $$test_options -o `mktemp "$$GTESTER_LOGDIR/log-XXXXXX"` ${TEST_PROGS} ; \
	      fi ; \
	    }; \
	  }; \
	  $$ignore_logdir || { \
	    echo '<?xml version="1.0"?>' > $@.xml ; \
	    echo '<report-collection>'  >> $@.xml ; \
	    for lf in `ls -L "$$GTESTER_LOGDIR"/.` ; do \
	      sed '1,1s/^<?xml\b[^>?]*?>//' <"$$GTESTER_LOGDIR"/"$$lf" >> $@.xml ; \
	    done ; \
	    echo >> $@.xml ; \
	    echo '</report-collection>' >> $@.xml ; \
	    rm -rf "$$GTESTER_LOGDIR"/ ; \
	    ${GTESTER_REPORT} --version 2>/dev/null 1>&2 ; test "$$?" != 0 || ${GTESTER_REPORT} $@.xml >$@.html ; \
	  }
.PHONY: test test-cwd test-recurse test-report perf-report full-report
# run make test-cwd as part of make check
check-local: test-cwd

-include $(top_srcdir)/git.mk

